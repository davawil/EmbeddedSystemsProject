
lab4.elf:     file format elf32-littlenios2
lab4.elf
architecture: nios2:r1, flags 0x00000112:
EXEC_P, HAS_SYMS, D_PAGED
start address 0x10100244

Program Header:
    LOAD off    0x00001000 vaddr 0x10100000 paddr 0x10100000 align 2**12
         filesz 0x00000020 memsz 0x00000020 flags r-x
    LOAD off    0x00001020 vaddr 0x10100020 paddr 0x10100020 align 2**12
         filesz 0x00010194 memsz 0x00010194 flags r-x
    LOAD off    0x000111b4 vaddr 0x101101b4 paddr 0x10111ca0 align 2**12
         filesz 0x00001aec memsz 0x00001aec flags rw-
    LOAD off    0x0001378c vaddr 0x1011378c paddr 0x1011378c align 2**12
         filesz 0x00000000 memsz 0x00000164 flags rw-

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .entry        00000020  10100000  10100000  00001000  2**5
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .exceptions   00000224  10100020  10100020  00001020  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .text         0000fbfc  10100244  10100244  00001244  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  3 .rodata       00000374  1010fe40  1010fe40  00010e40  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  4 .rwdata       00001aec  101101b4  10111ca0  000111b4  2**2
                  CONTENTS, ALLOC, LOAD, DATA, SMALL_DATA
  5 .bss          00000164  1011378c  1011378c  0001378c  2**2
                  ALLOC, SMALL_DATA
  6 .onchip_memory2_0 00000000  101138f0  101138f0  00012ca0  2**0
                  CONTENTS
  7 .comment      00000023  00000000  00000000  00012ca0  2**0
                  CONTENTS, READONLY
  8 .debug_aranges 00000fc8  00000000  00000000  00012cc8  2**3
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_info   00028c3e  00000000  00000000  00013c90  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_abbrev 0000a1cb  00000000  00000000  0003c8ce  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_line   0000c657  00000000  00000000  00046a99  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_frame  0000228c  00000000  00000000  000530f0  2**2
                  CONTENTS, READONLY, DEBUGGING
 13 .debug_str    000039b1  00000000  00000000  0005537c  2**0
                  CONTENTS, READONLY, DEBUGGING
 14 .debug_loc    000185c1  00000000  00000000  00058d2d  2**0
                  CONTENTS, READONLY, DEBUGGING
 15 .debug_alt_sim_info 00000030  00000000  00000000  000712f0  2**2
                  CONTENTS, READONLY, DEBUGGING
 16 .debug_ranges 000019d0  00000000  00000000  00071320  2**3
                  CONTENTS, READONLY, DEBUGGING
 17 .thread_model 00000003  00000000  00000000  00075f4e  2**0
                  CONTENTS, READONLY
 18 .cpu          0000000c  00000000  00000000  00075f51  2**0
                  CONTENTS, READONLY
 19 .qsys         00000001  00000000  00000000  00075f5d  2**0
                  CONTENTS, READONLY
 20 .simulation_enabled 00000001  00000000  00000000  00075f5e  2**0
                  CONTENTS, READONLY
 21 .stderr_dev   0000000b  00000000  00000000  00075f5f  2**0
                  CONTENTS, READONLY
 22 .stdin_dev    0000000b  00000000  00000000  00075f6a  2**0
                  CONTENTS, READONLY
 23 .stdout_dev   0000000b  00000000  00000000  00075f75  2**0
                  CONTENTS, READONLY
 24 .sopc_system_name 0000000a  00000000  00000000  00075f80  2**0
                  CONTENTS, READONLY
 25 .quartus_project_dir 00000034  00000000  00000000  00075f8a  2**0
                  CONTENTS, READONLY
 26 .jdi          000058d5  00000000  00000000  00075fbe  2**0
                  CONTENTS, READONLY
 27 .sopcinfo     00285180  00000000  00000000  0007b893  2**0
                  CONTENTS, READONLY
SYMBOL TABLE:
10100000 l    d  .entry	00000000 .entry
10100020 l    d  .exceptions	00000000 .exceptions
10100244 l    d  .text	00000000 .text
1010fe40 l    d  .rodata	00000000 .rodata
101101b4 l    d  .rwdata	00000000 .rwdata
1011378c l    d  .bss	00000000 .bss
101138f0 l    d  .onchip_memory2_0	00000000 .onchip_memory2_0
00000000 l    d  .comment	00000000 .comment
00000000 l    d  .debug_aranges	00000000 .debug_aranges
00000000 l    d  .debug_info	00000000 .debug_info
00000000 l    d  .debug_abbrev	00000000 .debug_abbrev
00000000 l    d  .debug_line	00000000 .debug_line
00000000 l    d  .debug_frame	00000000 .debug_frame
00000000 l    d  .debug_str	00000000 .debug_str
00000000 l    d  .debug_loc	00000000 .debug_loc
00000000 l    d  .debug_alt_sim_info	00000000 .debug_alt_sim_info
00000000 l    d  .debug_ranges	00000000 .debug_ranges
00000000 l    df *ABS*	00000000 /home/vm/Documents/EmbeddedSystemsProject/sw/nios/lab4_bsp//obj/HAL/src/crt0.o
1010028c l       .text	00000000 alt_after_alt_main
00000000 l    df *ABS*	00000000 alt_irq_handler.c
00000000 l    df *ABS*	00000000 alt_instruction_exception_entry.c
00000000 l    df *ABS*	00000000 hello_world.c
101003b0 l     F .text	00000088 CameraControllerISR
00000000 l    df *ABS*	00000000 fclose.c
00000000 l    df *ABS*	00000000 fflush.c
00000000 l    df *ABS*	00000000 findfp.c
10100858 l     F .text	00000008 __fp_unlock
1010086c l     F .text	0000019c __sinit.part.1
10100a08 l     F .text	00000008 __fp_lock
00000000 l    df *ABS*	00000000 fopen.c
00000000 l    df *ABS*	00000000 fprintf.c
00000000 l    df *ABS*	00000000 mallocr.c
00000000 l    df *ABS*	00000000 fseek.c
00000000 l    df *ABS*	00000000 fseeko.c
00000000 l    df *ABS*	00000000 fstatr.c
00000000 l    df *ABS*	00000000 fwalk.c
00000000 l    df *ABS*	00000000 fwrite.c
00000000 l    df *ABS*	00000000 impure.c
101101b4 l     O .rwdata	00000424 impure_data
00000000 l    df *ABS*	00000000 int_errno.c
00000000 l    df *ABS*	00000000 makebuf.c
00000000 l    df *ABS*	00000000 mallocr.c
00000000 l    df *ABS*	00000000 memset.c
00000000 l    df *ABS*	00000000 openr.c
00000000 l    df *ABS*	00000000 printf.c
00000000 l    df *ABS*	00000000 puts.c
00000000 l    df *ABS*	00000000 refill.c
10102578 l     F .text	0000001c lflush
00000000 l    df *ABS*	00000000 sbrkr.c
00000000 l    df *ABS*	00000000 stdio.c
00000000 l    df *ABS*	00000000 strlen.c
00000000 l    df *ABS*	00000000 vfprintf.c
1010fefe l     O .rodata	00000010 zeroes.4404
10104ba4 l     F .text	000000bc __sbprintf
1010ff0e l     O .rodata	00000010 blanks.4403
00000000 l    df *ABS*	00000000 writer.c
00000000 l    df *ABS*	00000000 wsetup.c
00000000 l    df *ABS*	00000000 closer.c
00000000 l    df *ABS*	00000000 dtoa.c
10104e68 l     F .text	00000200 quorem
00000000 l    df *ABS*	00000000 flags.c
00000000 l    df *ABS*	00000000 fvwrite.c
00000000 l    df *ABS*	00000000 isattyr.c
00000000 l    df *ABS*	00000000 locale.c
10110a00 l     O .rwdata	00000020 lc_ctype_charset
101109e0 l     O .rwdata	00000020 lc_message_charset
10110a20 l     O .rwdata	00000038 lconv
00000000 l    df *ABS*	00000000 lseekr.c
00000000 l    df *ABS*	00000000 memchr.c
00000000 l    df *ABS*	00000000 memcpy.c
00000000 l    df *ABS*	00000000 memmove.c
00000000 l    df *ABS*	00000000 mprec.c
1010ff3c l     O .rodata	0000000c p05.2768
00000000 l    df *ABS*	00000000 readr.c
00000000 l    df *ABS*	00000000 mallocr.c
00000000 l    df *ABS*	00000000 s_fpclassify.c
00000000 l    df *ABS*	00000000 strcmp.c
00000000 l    df *ABS*	00000000 vfprintf.c
10108880 l     F .text	000000fc __sprint_r.part.0
10110070 l     O .rodata	00000010 blanks.4348
10110060 l     O .rodata	00000010 zeroes.4349
10109e0c l     F .text	000000bc __sbprintf
00000000 l    df *ABS*	00000000 mallocr.c
00000000 l    df *ABS*	00000000 fputwc.c
00000000 l    df *ABS*	00000000 wbuf.c
00000000 l    df *ABS*	00000000 wcrtomb.c
00000000 l    df *ABS*	00000000 wctomb_r.c
00000000 l    df *ABS*	00000000 libgcc2.c
00000000 l    df *ABS*	00000000 libgcc2.c
00000000 l    df *ABS*	00000000 lib2-divmod.c
00000000 l    df *ABS*	00000000 adddf3.c
00000000 l    df *ABS*	00000000 divdf3.c
00000000 l    df *ABS*	00000000 eqdf2.c
00000000 l    df *ABS*	00000000 gedf2.c
00000000 l    df *ABS*	00000000 ledf2.c
00000000 l    df *ABS*	00000000 muldf3.c
00000000 l    df *ABS*	00000000 subdf3.c
00000000 l    df *ABS*	00000000 fixdfsi.c
00000000 l    df *ABS*	00000000 floatsidf.c
00000000 l    df *ABS*	00000000 floatunsidf.c
00000000 l    df *ABS*	00000000 libgcc2.c
00000000 l    df *ABS*	00000000 libgcc2.c
00000000 l    df *ABS*	00000000 alt_close.c
1010d7a0 l     F .text	0000003c alt_get_errno
00000000 l    df *ABS*	00000000 alt_dev.c
1010d8ac l     F .text	0000002c alt_dev_null_write
00000000 l    df *ABS*	00000000 alt_errno.c
00000000 l    df *ABS*	00000000 alt_fstat.c
1010d8d8 l     F .text	0000003c alt_get_errno
00000000 l    df *ABS*	00000000 alt_iic.c
00000000 l    df *ABS*	00000000 alt_iic_isr_register.c
00000000 l    df *ABS*	00000000 alt_irq_vars.c
00000000 l    df *ABS*	00000000 alt_isatty.c
1010dc64 l     F .text	0000003c alt_get_errno
00000000 l    df *ABS*	00000000 alt_load.c
1010dd44 l     F .text	00000068 alt_load_section
00000000 l    df *ABS*	00000000 alt_lseek.c
1010de30 l     F .text	0000003c alt_get_errno
00000000 l    df *ABS*	00000000 alt_main.c
00000000 l    df *ABS*	00000000 alt_malloc_lock.c
00000000 l    df *ABS*	00000000 alt_open.c
1010e004 l     F .text	0000003c alt_get_errno
1010e040 l     F .text	000000c4 alt_file_locked
00000000 l    df *ABS*	00000000 alt_read.c
1010e258 l     F .text	0000003c alt_get_errno
00000000 l    df *ABS*	00000000 alt_release_fd.c
00000000 l    df *ABS*	00000000 alt_sbrk.c
10111c94 l     O .rwdata	00000004 heap_end
00000000 l    df *ABS*	00000000 alt_write.c
1010e4a4 l     F .text	0000003c alt_get_errno
00000000 l    df *ABS*	00000000 alt_sys_init.c
1010e5d8 l     F .text	00000034 alt_dev_reg
10110c00 l     O .rwdata	00001060 jtag_uart_0
00000000 l    df *ABS*	00000000 altera_avalon_jtag_uart_fd.c
00000000 l    df *ABS*	00000000 altera_avalon_jtag_uart_init.c
1010e8b0 l     F .text	0000020c altera_avalon_jtag_uart_irq
1010eabc l     F .text	000000a0 altera_avalon_jtag_uart_timeout
00000000 l    df *ABS*	00000000 altera_avalon_jtag_uart_ioctl.c
00000000 l    df *ABS*	00000000 altera_avalon_jtag_uart_read.c
00000000 l    df *ABS*	00000000 altera_avalon_jtag_uart_write.c
00000000 l    df *ABS*	00000000 alt_alarm_start.c
00000000 l    df *ABS*	00000000 alt_dcache_flush_all.c
00000000 l    df *ABS*	00000000 alt_dev_llist_insert.c
1010f268 l     F .text	0000003c alt_get_errno
00000000 l    df *ABS*	00000000 alt_do_ctors.c
00000000 l    df *ABS*	00000000 alt_do_dtors.c
00000000 l    df *ABS*	00000000 alt_find_dev.c
00000000 l    df *ABS*	00000000 alt_find_file.c
00000000 l    df *ABS*	00000000 alt_get_fd.c
00000000 l    df *ABS*	00000000 alt_icache_flush_all.c
00000000 l    df *ABS*	00000000 alt_io_redirect.c
1010f714 l     F .text	000000c4 alt_open_fd
00000000 l    df *ABS*	00000000 alt_tick.c
00000000 l    df *ABS*	00000000 altera_nios2_gen2_irq.c
00000000 l    df *ABS*	00000000 alt_icache_flush.c
00000000 l    df *ABS*	00000000 atexit.c
00000000 l    df *ABS*	00000000 exit.c
00000000 l    df *ABS*	00000000 memcmp.c
00000000 l    df *ABS*	00000000 __atexit.c
00000000 l    df *ABS*	00000000 __call_atexit.c
00000000 l    df *ABS*	00000000 alt_exit.c
101137bc g     O .bss	00000004 alt_instruction_exception_handler
10107ff4 g     F .text	00000074 _mprec_log10
101080e0 g     F .text	0000008c __any_on
10106c58 g     F .text	00000054 _isatty_r
1010ff48 g     O .rodata	00000028 __mprec_tinytens
1010df40 g     F .text	0000007c alt_main
101024a4 g     F .text	000000c0 _puts_r
101137f0 g     O .bss	00000100 alt_irq
10106d88 g     F .text	00000060 _lseek_r
10111ca0 g       *ABS*	00000000 __flash_rwdata_start
101066f0 g     F .text	000000ac __sflags
1010c2cc g     F .text	00000088 .hidden __eqdf2
101138f0 g       *ABS*	00000000 __alt_heap_start
10102468 g     F .text	0000003c printf
1010a2ec g     F .text	0000009c _wcrtomb_r
10102894 g     F .text	0000005c __sseek
10100ba8 g     F .text	00000010 __sinit
1010a194 g     F .text	00000140 __swbuf_r
10106cac g     F .text	0000007c _setlocale_r
10100a10 g     F .text	00000068 __sfmoreglue
1010dfe0 g     F .text	00000024 __malloc_unlock
10107014 g     F .text	0000015c memmove
10100b90 g     F .text	00000018 _cleanup
10107170 g     F .text	000000a8 _Balloc
1010c354 g     F .text	000000dc .hidden __gtdf2
1010f9f8 g     F .text	00000024 altera_nios2_gen2_irq_init
10100000 g     F .entry	0000001c __reset
1011378c g     O .bss	00000004 currentFrame
10100020 g       *ABS*	00000000 __flash_exceptions_start
10101604 g     F .text	0000005c _fstat_r
10113790 g     O .bss	00000004 errno
10102810 g     F .text	00000008 __seofread
101137b4 g     O .bss	00000004 alt_argv
10119c60 g       *ABS*	00000000 _gp
10110a80 g     O .rwdata	00000180 alt_fd_list
1010f408 g     F .text	00000090 alt_find_dev
10106ecc g     F .text	00000148 memcpy
10100860 g     F .text	0000000c _cleanup_r
1010d5b8 g     F .text	000000dc .hidden __floatsidf
1010f7d8 g     F .text	0000007c alt_io_redirect
1010c430 g     F .text	000000f4 .hidden __ltdf2
1010fe40 g       *ABS*	00000000 __DTOR_END__
10102564 g     F .text	00000014 puts
1010f678 g     F .text	0000009c alt_exception_cause_generated_bad_addr
10108730 g     F .text	00000074 __fpclassifyd
10107f50 g     F .text	000000a4 __ratio
10109df0 g     F .text	0000001c __vfiprintf_internal
1010ecb4 g     F .text	0000021c altera_avalon_jtag_uart_read
10102438 g     F .text	00000030 _printf_r
10100000 g       *ABS*	00000000 __alt_mem_onchip_memory2_0
1010b07c g     F .text	00000064 .hidden __udivsi3
1010dca0 g     F .text	000000a4 isatty
1010ff98 g     O .rodata	000000c8 __mprec_tens
10106d28 g     F .text	0000000c __locale_charset
1010fa1c g     F .text	00000090 alt_icache_flush
1011379c g     O .bss	00000004 __malloc_top_pad
10111c70 g     O .rwdata	00000004 __mb_cur_max
10106d58 g     F .text	0000000c _localeconv_r
1010757c g     F .text	0000003c __i2b
1010679c g     F .text	000004bc __sfvwrite_r
10102768 g     F .text	00000054 _sbrk_r
1010816c g     F .text	00000060 _read_r
10111c88 g     O .rwdata	00000004 alt_max_fd
101004ac g     F .text	000000f0 _fclose_r
10100828 g     F .text	00000030 fflush
10113798 g     O .bss	00000004 __malloc_max_sbrked_mem
1010b138 g     F .text	000008ac .hidden __adddf3
10107cf8 g     F .text	0000010c __b2d
1010aa4c g     F .text	00000538 .hidden __umoddi3
1010de6c g     F .text	000000d4 lseek
10111c60 g     O .rwdata	00000004 _global_impure_ptr
101081cc g     F .text	00000564 _realloc_r
101138f0 g       *ABS*	00000000 __bss_end
1010db74 g     F .text	000000f0 alt_iic_isr_register
1010f8f0 g     F .text	00000108 alt_tick
1010a4d4 g     F .text	00000578 .hidden __udivdi3
1010a0f0 g     F .text	00000024 _fputwc_r
1010ff70 g     O .rodata	00000028 __mprec_bigtens
10107360 g     F .text	00000104 __s2b
1010d694 g     F .text	000000a8 .hidden __floatunsidf
10107a38 g     F .text	00000060 __mcmp
10100bc8 g     F .text	00000018 __fp_lock_all
1010db28 g     F .text	0000004c alt_ic_irq_enabled
1010f854 g     F .text	0000009c alt_alarm_stop
101137ac g     O .bss	00000004 alt_irq_active
101011a4 g     F .text	00000444 _fseeko_r
101000fc g     F .exceptions	000000d4 alt_irq_handler
10110a58 g     O .rwdata	00000028 alt_dev_null
1010f220 g     F .text	00000048 alt_dcache_flush_all
10107464 g     F .text	00000068 __hi0bits
10100290 g     F .text	00000120 load_image
1010d538 g     F .text	00000080 .hidden __fixdfsi
10111ca0 g       *ABS*	00000000 __ram_rwdata_end
10111c80 g     O .rwdata	00000008 alt_dev_list
1010e4e0 g     F .text	000000f8 write
101101b4 g       *ABS*	00000000 __ram_rodata_end
1010d914 g     F .text	000000b0 fstat
10100d2c g     F .text	00000024 fprintf
1010c430 g     F .text	000000f4 .hidden __ledf2
101077b0 g     F .text	00000140 __pow5mult
10108994 g     F .text	0000145c ___vfiprintf_internal_r
101137a8 g     O .bss	00000004 __nlocale_changed
1010b0e0 g     F .text	00000058 .hidden __umodsi3
101138f0 g       *ABS*	00000000 end
101015e8 g     F .text	0000001c fseeko
10101188 g     F .text	0000001c fseek
1010e7f0 g     F .text	000000c0 altera_avalon_jtag_uart_init
101001d0 g     F .exceptions	00000074 alt_instruction_exception_entry
1010fe40 g       *ABS*	00000000 __CTOR_LIST__
10120000 g       *ABS*	00000000 __alt_stack_pointer
1010d73c g     F .text	00000064 .hidden __clzsi2
1010eed0 g     F .text	00000224 altera_avalon_jtag_uart_write
10100bb8 g     F .text	00000004 __sfp_lock_acquire
10106de8 g     F .text	000000e4 memchr
10102990 g     F .text	000021f8 ___vfprintf_internal_r
10100e74 g     F .text	00000310 _free_r
10106d34 g     F .text	00000010 __locale_mb_cur_max
1010fc8c g     F .text	00000180 __call_exitprocs
101137a4 g     O .bss	00000004 __mlocale_changed
10111c68 g     O .rwdata	00000004 __malloc_sbrk_base
10100244 g     F .text	0000004c _start
101137c0 g     O .bss	00000004 _alt_tick_rate
101078f0 g     F .text	00000148 __lshift
101137c4 g     O .bss	00000004 _alt_nticks
1010e294 g     F .text	000000fc read
1010e644 g     F .text	00000048 alt_sys_init
101023d8 g     F .text	00000060 _open_r
1010fb74 g     F .text	00000118 __register_exitproc
101075b8 g     F .text	000001f8 __multiply
1010eb5c g     F .text	00000068 altera_avalon_jtag_uart_close
101101b4 g       *ABS*	00000000 __ram_rwdata_start
1010fe40 g       *ABS*	00000000 __ram_rodata_start
101137c8 g     O .bss	00000028 __malloc_current_mallinfo
10107e04 g     F .text	0000014c __d2b
1010e68c g     F .text	00000060 altera_avalon_jtag_uart_read_fd
1010f5a0 g     F .text	000000a4 alt_get_fd
10104e14 g     F .text	00000054 _close_r
1010faf8 g     F .text	0000007c memcmp
1010e74c g     F .text	00000050 altera_avalon_jtag_uart_close_fd
101138f0 g       *ABS*	00000000 __alt_stack_base
1010e79c g     F .text	00000054 altera_avalon_jtag_uart_ioctl_fd
101017e8 g     F .text	000000cc _fwrite_r
10104cc0 g     F .text	00000154 __swsetup_r
1010b9e4 g     F .text	000008e8 .hidden __divdf3
10100a78 g     F .text	00000118 __sfp
10108068 g     F .text	00000078 __copybits
101105d8 g     O .rwdata	00000408 __malloc_av_
10100bc4 g     F .text	00000004 __sinit_lock_release
1010c524 g     F .text	00000718 .hidden __muldf3
101027bc g     F .text	00000054 __sread
1010f498 g     F .text	00000108 alt_find_file
1010f2a4 g     F .text	000000a4 alt_dev_llist_insert
1010dfbc g     F .text	00000024 __malloc_lock
10100d04 g     F .text	00000028 _fprintf_r
1010e3f4 g     F .text	000000b0 sbrk
101007cc g     F .text	0000005c _fflush_r
10109ec8 g     F .text	000000c4 _calloc_r
10100cec g     F .text	00000018 fopen
1011378c g       *ABS*	00000000 __bss_start
101022b0 g     F .text	00000128 memset
10100438 g     F .text	00000074 main
101137b8 g     O .bss	00000004 alt_envp
10113794 g     O .bss	00000004 __malloc_max_total_mem
1010e6ec g     F .text	00000060 altera_avalon_jtag_uart_write_fd
1010a2d4 g     F .text	00000018 __swbuf
101028f0 g     F .text	00000008 __sclose
10120000 g       *ABS*	00000000 __alt_heap_limit
1010059c g     F .text	00000014 fclose
10105068 g     F .text	00001688 _dtoa_r
10101aa4 g     F .text	0000080c _malloc_r
1010a448 g     F .text	00000030 __ascii_wctomb
10111c8c g     O .rwdata	00000004 alt_errno
10101660 g     F .text	000000c4 _fwalk
1010af84 g     F .text	00000084 .hidden __divsi3
10100d50 g     F .text	00000124 _malloc_trim_r
1010fe40 g       *ABS*	00000000 __CTOR_END__
101087a4 g     F .text	000000dc strcmp
1010fe40 g       *ABS*	00000000 __flash_rodata_start
1010fe40 g       *ABS*	00000000 __DTOR_LIST__
1010c2cc g     F .text	00000088 .hidden __nedf2
1010e60c g     F .text	00000038 alt_irq_init
1010e390 g     F .text	00000064 alt_release_fd
10110080 g     O .rodata	00000100 .hidden __clz_tab
101137a0 g     O .bss	00000004 _PathLocale
1010faac g     F .text	00000014 atexit
10104c60 g     F .text	00000060 _write_r
10106d64 g     F .text	00000018 setlocale
10111c64 g     O .rwdata	00000004 _impure_ptr
101137b0 g     O .bss	00000004 alt_argc
101005b0 g     F .text	0000021c __sflush_r
1010f3a8 g     F .text	00000060 _do_dtors
10106d50 g     F .text	00000008 __locale_cjk_lang
10101184 g     F .text	00000004 _fseek_r
10102594 g     F .text	000001d4 __srefill_r
10100020 g       .exceptions	00000000 alt_irq_entry
10107c94 g     F .text	00000064 __ulp
10100be0 g     F .text	00000018 __fp_unlock_all
10111c78 g     O .rwdata	00000008 alt_fs_list
10100020 g       *ABS*	00000000 __ram_exceptions_start
10106d7c g     F .text	0000000c localeconv
1010d9c4 g     F .text	00000050 alt_ic_isr_register
101018b4 g     F .text	00000034 fwrite
10111ca0 g       *ABS*	00000000 _edata
101138f0 g       *ABS*	00000000 _end
10109f8c g     F .text	00000164 __fputwc
10100244 g       *ABS*	00000000 __ram_exceptions_end
1010ebc4 g     F .text	000000f0 altera_avalon_jtag_uart_ioctl
1010da9c g     F .text	0000008c alt_ic_irq_disable
10102818 g     F .text	0000007c __swrite
10111c6c g     O .rwdata	00000004 __malloc_trim_threshold
10106d44 g     F .text	0000000c __locale_msgcharset
1010fac0 g     F .text	00000038 exit
10101724 g     F .text	000000c4 _fwalk_reent
10107a98 g     F .text	000001fc __mdiff
1010b008 g     F .text	00000074 .hidden __modsi3
10120000 g       *ABS*	00000000 __alt_data_end
10100020 g     F .exceptions	00000000 alt_exception
10100bbc g     F .text	00000004 __sfp_lock_release
10100bf8 g     F .text	000000f4 _fopen_r
1010fe0c g     F .text	00000034 _exit
1010f0f4 g     F .text	0000012c alt_alarm_start
101018e8 g     F .text	000001bc __smakebuf_r
101028f8 g     F .text	00000098 strlen
1010e104 g     F .text	00000154 open
1010c354 g     F .text	000000dc .hidden __gedf2
10111c74 g     O .rwdata	00000004 __wctomb
1010897c g     F .text	00000018 __sprint_r
1010f644 g     F .text	00000034 alt_icache_flush_all
10111c90 g     O .rwdata	00000004 alt_priority_mask
1010da14 g     F .text	00000088 alt_ic_irq_enable
10104b88 g     F .text	0000001c __vfprintf_internal
1010a478 g     F .text	0000005c _wctomb_r
1010cc3c g     F .text	000008fc .hidden __subdf3
101074cc g     F .text	000000b0 __lo0bits
10111c98 g     O .rwdata	00000008 alt_alarm_list
1010f348 g     F .text	00000060 _do_ctors
1010a388 g     F .text	000000c0 wcrtomb
1010d7dc g     F .text	000000d0 close
1010ddac g     F .text	00000084 alt_load
1010a114 g     F .text	00000080 fputwc
10100bc0 g     F .text	00000004 __sinit_lock_acquire
10107240 g     F .text	00000120 __multadd
10107218 g     F .text	00000028 _Bfree



Disassembly of section .entry:

10100000 <__reset>:
#if NIOS2_ICACHE_SIZE > 0 && defined(ALT_ALLOW_CODE_AT_RESET) && (!defined(ALT_SIM_OPTIMIZE) || defined(NIOS2_ECC_PRESENT))
    /* Assume the instruction cache size is always a power of two. */
#if NIOS2_ICACHE_SIZE > 0x8000
    movhi r2, %hi(NIOS2_ICACHE_SIZE)
#else
    movui r2, NIOS2_ICACHE_SIZE
10100000:	00840014 	movui	r2,4096
#endif

0:
    initi r2
10100004:	1001483a 	initi	r2
    addi r2, r2, -NIOS2_ICACHE_LINE_SIZE
10100008:	10bff804 	addi	r2,r2,-32
    bgt r2, zero, 0b
1010000c:	00bffd16 	blt	zero,r2,10100004 <__reset+0x4>
 * Jump to the _start entry point in the .text section if reset code
 * is allowed or if optimizing for RTL simulation.
 */
#if defined(ALT_ALLOW_CODE_AT_RESET) || defined(ALT_SIM_OPTIMIZE)
    /* Jump to the _start entry point in the .text section. */
    movhi r1, %hi(_start)
10100010:	00440434 	movhi	at,4112
    ori r1, r1, %lo(_start)
10100014:	08409114 	ori	at,at,580
    jmp r1
10100018:	0800683a 	jmp	at
1010001c:	00000000 	call	10000000 <__alt_mem_onchip_memory2_0-0x100000>

Disassembly of section .exceptions:

10100020 <alt_exception>:

#else /* ALT_EXCEPTION_STACK disabled */
        /* 
         * Reserve space on normal stack for registers about to be pushed.
         */
        addi  sp, sp, -76
10100020:	deffed04 	addi	sp,sp,-76
         * documentation for details).
         *
         * Leave a gap in the stack frame at 4(sp) for the muldiv handler to
         * store zero into.
         */
        stw   ra,  0(sp)
10100024:	dfc00015 	stw	ra,0(sp)
        stw   r1,   8(sp)
10100028:	d8400215 	stw	at,8(sp)
        stw   r2,  12(sp)
1010002c:	d8800315 	stw	r2,12(sp)
        stw   r3,  16(sp)
10100030:	d8c00415 	stw	r3,16(sp)
        stw   r4,  20(sp)
10100034:	d9000515 	stw	r4,20(sp)
        stw   r5,  24(sp)
10100038:	d9400615 	stw	r5,24(sp)
        stw   r6,  28(sp)
1010003c:	d9800715 	stw	r6,28(sp)
        stw   r7,  32(sp)
10100040:	d9c00815 	stw	r7,32(sp)
        rdctl r5, estatus   /* Read early to avoid usage stall */
10100044:	000b307a 	rdctl	r5,estatus
        stw   r8,  36(sp)
10100048:	da000915 	stw	r8,36(sp)
        stw   r9,  40(sp)
1010004c:	da400a15 	stw	r9,40(sp)
        stw   r10, 44(sp)
10100050:	da800b15 	stw	r10,44(sp)
        stw   r11, 48(sp)
10100054:	dac00c15 	stw	r11,48(sp)
        stw   r12, 52(sp)
10100058:	db000d15 	stw	r12,52(sp)
        stw   r13, 56(sp)
1010005c:	db400e15 	stw	r13,56(sp)
        stw   r14, 60(sp)
10100060:	db800f15 	stw	r14,60(sp)
        stw   r15, 64(sp)
10100064:	dbc01015 	stw	r15,64(sp)
        /*
         * ea-4 contains the address of the instruction being executed
         * when the exception occured. For interrupt exceptions, we will
         * will be re-issue the isntruction. Store it in 72(sp)
         */
        stw   r5,  68(sp)  /* estatus */
10100068:	d9401115 	stw	r5,68(sp)
        addi  r15, ea, -4  /* instruction that caused exception */
1010006c:	ebffff04 	addi	r15,ea,-4
        stw   r15,  72(sp)
10100070:	dbc01215 	stw	r15,72(sp)
#else
        /*
         * Test to see if the exception was a software exception or caused 
         * by an external interrupt, and vector accordingly.
         */
        rdctl r4, ipending
10100074:	0009313a 	rdctl	r4,ipending
        andi  r2, r5, 1
10100078:	2880004c 	andi	r2,r5,1
        beq   r2, zero, .Lnot_irq
1010007c:	10000326 	beq	r2,zero,1010008c <alt_exception+0x6c>
        beq   r4, zero, .Lnot_irq
10100080:	20000226 	beq	r4,zero,1010008c <alt_exception+0x6c>
        /*
         * Now that all necessary registers have been preserved, call 
         * alt_irq_handler() to process the interrupts.
         */

        call alt_irq_handler
10100084:	01000fc0 	call	101000fc <alt_irq_handler>

        .section .exceptions.irqreturn, "xa"

        br    .Lexception_exit
10100088:	00000706 	br	101000a8 <alt_exception+0x88>
         * upon completion, so we write ea (address of instruction *after*
         * the one where the exception occured) into 72(sp). The actual
         * instruction that caused the exception is written in r2, which these
         * handlers will utilize.
         */
        stw ea, 72(sp) /* EA is PC+4 so will skip over instruction causing exception */
1010008c:	df401215 	stw	ea,72(sp)
.Lunknown_16bit:
        addi.n r4, r4, 2 /* Need PC+2 to skip over instruction causing exception */
        stw r4, 72(sp)

#else /* CDX is not Enabled and all instructions are 32bits */
        ldw r2, -4(ea) /* Instruction value that caused exception */
10100090:	e8bfff17 	ldw	r2,-4(ea)
         * debugger is present) or go into an infinite loop since the
         * handling behavior is undefined; in that case we will not return here.
         */

        /* Load exception-causing address as first argument (r4) */
        addi   r4, ea, -4
10100094:	e93fff04 	addi	r4,ea,-4

        /* Call the instruction-exception entry */
        call   alt_instruction_exception_entry
10100098:	01001d00 	call	101001d0 <alt_instruction_exception_entry>
         * instruction
         *
         * Return code was 0: Skip. The instruction after the exception is
         * already stored in 72(sp).
         */
        bne   r2, r0, .Lexception_exit
1010009c:	1000021e 	bne	r2,zero,101000a8 <alt_exception+0x88>

        /*
         * Otherwise, modify 72(sp) to re-issue the instruction that caused the
         * exception.
         */
        addi  r15, ea, -4  /* instruction that caused exception */
101000a0:	ebffff04 	addi	r15,ea,-4
        stw   r15,  72(sp)
101000a4:	dbc01215 	stw	r15,72(sp)
        /* 
         * Restore the saved registers, so that all general purpose registers 
         * have been restored to their state at the time the interrupt occured.
         */

        ldw   r5,  68(sp)
101000a8:	d9401117 	ldw	r5,68(sp)
        ldw   ea,  72(sp)  /* This becomes the PC once eret is executed */
101000ac:	df401217 	ldw	ea,72(sp)
        ldw   ra,   0(sp)
101000b0:	dfc00017 	ldw	ra,0(sp)

        wrctl estatus, r5
101000b4:	2801707a 	wrctl	estatus,r5

        ldw   r1,   8(sp)
101000b8:	d8400217 	ldw	at,8(sp)
        ldw   r2,  12(sp)
101000bc:	d8800317 	ldw	r2,12(sp)
        ldw   r3,  16(sp)
101000c0:	d8c00417 	ldw	r3,16(sp)
        ldw   r4,  20(sp)
101000c4:	d9000517 	ldw	r4,20(sp)
        ldw   r5,  24(sp)
101000c8:	d9400617 	ldw	r5,24(sp)
        ldw   r6,  28(sp)
101000cc:	d9800717 	ldw	r6,28(sp)
        ldw   r7,  32(sp)
101000d0:	d9c00817 	ldw	r7,32(sp)

#if defined(ALT_EXCEPTION_STACK) && defined(ALT_STACK_CHECK)
        ldw   et, %gprel(alt_exception_old_stack_limit)(gp)
#endif

        ldw   r8,  36(sp)
101000d4:	da000917 	ldw	r8,36(sp)
        ldw   r9,  40(sp)
101000d8:	da400a17 	ldw	r9,40(sp)
        ldw   r10, 44(sp)
101000dc:	da800b17 	ldw	r10,44(sp)
        ldw   r11, 48(sp)
101000e0:	dac00c17 	ldw	r11,48(sp)
        ldw   r12, 52(sp)
101000e4:	db000d17 	ldw	r12,52(sp)
        ldw   r13, 56(sp)
101000e8:	db400e17 	ldw	r13,56(sp)
        ldw   r14, 60(sp)
101000ec:	db800f17 	ldw	r14,60(sp)
        ldw   r15, 64(sp)
101000f0:	dbc01017 	ldw	r15,64(sp)
        stw   et, %gprel(alt_stack_limit_value)(gp)
        stw   zero, %gprel(alt_exception_old_stack_limit)(gp)
#endif /* ALT_STACK_CHECK */
        ldw   sp,  76(sp)
#else /* ALT_EXCEPTION_STACK disabled */
        addi  sp, sp, 76
101000f4:	dec01304 	addi	sp,sp,76

        /*
         * Return to the interrupted instruction.
         */

        eret
101000f8:	ef80083a 	eret

101000fc <alt_irq_handler>:
 * instruction is present if the macro ALT_CI_INTERRUPT_VECTOR defined.
 */

void alt_irq_handler (void) __attribute__ ((section (".exceptions")));
void alt_irq_handler (void)
{
101000fc:	defff904 	addi	sp,sp,-28
10100100:	dfc00615 	stw	ra,24(sp)
10100104:	df000515 	stw	fp,20(sp)
10100108:	df000504 	addi	fp,sp,20
  
  /*
   * Notify the operating system that we are at interrupt level.
   */ 
  
  ALT_OS_INT_ENTER();
1010010c:	0001883a 	nop
#ifndef NIOS2_EIC_PRESENT
static ALT_INLINE alt_u32 ALT_ALWAYS_INLINE alt_irq_pending (void)
{
  alt_u32 active;

  NIOS2_READ_IPENDING (active);
10100110:	0005313a 	rdctl	r2,ipending
10100114:	e0bffe15 	stw	r2,-8(fp)

  return active;
10100118:	e0bffe17 	ldw	r2,-8(fp)
   * Consider the case where the high priority interupt is asserted during
   * the interrupt entry sequence for a lower priority interrupt to see why
   * this is the case.
   */

  active = alt_irq_pending ();
1010011c:	e0bffb15 	stw	r2,-20(fp)

  do
  {
    i = 0;
10100120:	e03ffd15 	stw	zero,-12(fp)
    mask = 1;
10100124:	00800044 	movi	r2,1
10100128:	e0bffc15 	stw	r2,-16(fp)
     * called to clear the interrupt condition.
     */

    do
    {
      if (active & mask)
1010012c:	e0fffb17 	ldw	r3,-20(fp)
10100130:	e0bffc17 	ldw	r2,-16(fp)
10100134:	1884703a 	and	r2,r3,r2
10100138:	10001426 	beq	r2,zero,1010018c <alt_irq_handler+0x90>
      { 
#ifdef ALT_ENHANCED_INTERRUPT_API_PRESENT
        alt_irq[i].handler(alt_irq[i].context); 
1010013c:	00840474 	movhi	r2,4113
10100140:	108dfc04 	addi	r2,r2,14320
10100144:	e0fffd17 	ldw	r3,-12(fp)
10100148:	180690fa 	slli	r3,r3,3
1010014c:	10c5883a 	add	r2,r2,r3
10100150:	10c00017 	ldw	r3,0(r2)
10100154:	00840474 	movhi	r2,4113
10100158:	108dfc04 	addi	r2,r2,14320
1010015c:	e13ffd17 	ldw	r4,-12(fp)
10100160:	200890fa 	slli	r4,r4,3
10100164:	1105883a 	add	r2,r2,r4
10100168:	10800104 	addi	r2,r2,4
1010016c:	10800017 	ldw	r2,0(r2)
10100170:	1009883a 	mov	r4,r2
10100174:	183ee83a 	callr	r3
#else
        alt_irq[i].handler(alt_irq[i].context, i); 
#endif
        break;
10100178:	0001883a 	nop
#ifndef NIOS2_EIC_PRESENT
static ALT_INLINE alt_u32 ALT_ALWAYS_INLINE alt_irq_pending (void)
{
  alt_u32 active;

  NIOS2_READ_IPENDING (active);
1010017c:	0005313a 	rdctl	r2,ipending
10100180:	e0bfff15 	stw	r2,-4(fp)

  return active;
10100184:	e0bfff17 	ldw	r2,-4(fp)
10100188:	00000706 	br	101001a8 <alt_irq_handler+0xac>
      }
      mask <<= 1;
1010018c:	e0bffc17 	ldw	r2,-16(fp)
10100190:	1085883a 	add	r2,r2,r2
10100194:	e0bffc15 	stw	r2,-16(fp)
      i++;
10100198:	e0bffd17 	ldw	r2,-12(fp)
1010019c:	10800044 	addi	r2,r2,1
101001a0:	e0bffd15 	stw	r2,-12(fp)

    } while (1);
101001a4:	003fe106 	br	1010012c <alt_irq_handler+0x30>

    active = alt_irq_pending ();
101001a8:	e0bffb15 	stw	r2,-20(fp)
    
  } while (active);
101001ac:	e0bffb17 	ldw	r2,-20(fp)
101001b0:	103fdb1e 	bne	r2,zero,10100120 <alt_irq_handler+0x24>

  /*
   * Notify the operating system that interrupt processing is complete.
   */ 

  ALT_OS_INT_EXIT();
101001b4:	0001883a 	nop
}
101001b8:	0001883a 	nop
101001bc:	e037883a 	mov	sp,fp
101001c0:	dfc00117 	ldw	ra,4(sp)
101001c4:	df000017 	ldw	fp,0(sp)
101001c8:	dec00204 	addi	sp,sp,8
101001cc:	f800283a 	ret

101001d0 <alt_instruction_exception_entry>:
 * that handler if it has been registered. Absent a handler, it will
 * break break or hang as discussed below.
 */
int 
alt_instruction_exception_entry (alt_u32 exception_pc)
{
101001d0:	defffb04 	addi	sp,sp,-20
101001d4:	dfc00415 	stw	ra,16(sp)
101001d8:	df000315 	stw	fp,12(sp)
101001dc:	df000304 	addi	fp,sp,12
101001e0:	e13fff15 	stw	r4,-4(fp)
 * NIOS2_EXCEPTION_CAUSE_NOT_PRESENT. Your handling routine should
 * check the validity of the cause argument before proceeding.
 */
#ifdef NIOS2_HAS_EXTRA_EXCEPTION_INFO
  /* Get exception cause & "badaddr" */
  NIOS2_READ_EXCEPTION(cause);
101001e4:	000531fa 	rdctl	r2,exception
101001e8:	e0bffd15 	stw	r2,-12(fp)
  cause = ( (cause & NIOS2_EXCEPTION_REG_CAUSE_MASK) >>
101001ec:	e0bffd17 	ldw	r2,-12(fp)
101001f0:	10801f0c 	andi	r2,r2,124
101001f4:	1004d0ba 	srli	r2,r2,2
101001f8:	e0bffd15 	stw	r2,-12(fp)
              NIOS2_EXCEPTION_REG_CAUSE_OFST );

  NIOS2_READ_BADADDR(badaddr);
101001fc:	0005333a 	rdctl	r2,badaddr
10100200:	e0bffe15 	stw	r2,-8(fp)
#else
  cause = NIOS2_EXCEPTION_CAUSE_NOT_PRESENT;
  badaddr = 0;
#endif /* NIOS2_HAS_EXTRA_EXCEPTION_INFO */

  if(alt_instruction_exception_handler) {
10100204:	d0a6d717 	ldw	r2,-25764(gp)
10100208:	10000726 	beq	r2,zero,10100228 <alt_instruction_exception_entry+0x58>
     * Call handler. Its return value indicates whether the exception-causing
     * instruction should be re-issued. The code that called us,
     * alt_eceptions_entry.S, will look at this value and adjust the ea
     * register as necessary
     */
    return alt_instruction_exception_handler(cause, exception_pc, badaddr);
1010020c:	d0a6d717 	ldw	r2,-25764(gp)
10100210:	e0fffd17 	ldw	r3,-12(fp)
10100214:	e1bffe17 	ldw	r6,-8(fp)
10100218:	e17fff17 	ldw	r5,-4(fp)
1010021c:	1809883a 	mov	r4,r3
10100220:	103ee83a 	callr	r2
10100224:	00000206 	br	10100230 <alt_instruction_exception_entry+0x60>
   *    (a peripheral which negates its interrupt output before its
   *    interrupt handler has been executed will cause spurious interrupts)
   */
  else {
#ifdef NIOS2_HAS_DEBUG_STUB
    NIOS2_BREAK();
10100228:	003da03a 	break	0
      ;
#endif /* NIOS2_HAS_DEBUG_STUB */
  }

  /* We should not get here. Remove compiler warning. */
  return NIOS2_EXCEPTION_RETURN_REISSUE_INST;
1010022c:	0005883a 	mov	r2,zero
}
10100230:	e037883a 	mov	sp,fp
10100234:	dfc00117 	ldw	ra,4(sp)
10100238:	df000017 	ldw	fp,0(sp)
1010023c:	dec00204 	addi	sp,sp,8
10100240:	f800283a 	ret

Disassembly of section .text:

10100244 <_start>:

    /* Assume the data cache size is always a power of two. */
#if NIOS2_DCACHE_SIZE > 0x8000
    movhi r2, %hi(NIOS2_DCACHE_SIZE)
#else
    movui r2, NIOS2_DCACHE_SIZE
10100244:	00820014 	movui	r2,2048
#endif

0:
    initd 0(r2)
10100248:	10000033 	initd	0(r2)
#ifdef NIOS2_ECC_PRESENT
    addi r2, r2, -4
#else
    addi r2, r2, -NIOS2_DCACHE_LINE_SIZE
1010024c:	10bff804 	addi	r2,r2,-32
#endif
    bgt r2, zero, 0b
10100250:	00bffd16 	blt	zero,r2,10100248 <_start+0x4>

    /*
     * Now that the caches are initialized, set up the stack pointer and global pointer.
     * The values provided by the linker are assumed to be correctly aligned.
     */
    movhi sp, %hi(__alt_stack_pointer)
10100254:	06c404b4 	movhi	sp,4114
    ori sp, sp, %lo(__alt_stack_pointer)
10100258:	dec00014 	ori	sp,sp,0
    movhi gp, %hi(_gp)
1010025c:	06840474 	movhi	gp,4113
    ori gp, gp, %lo(_gp)
10100260:	d6a71814 	ori	gp,gp,40032
 */
#ifndef ALT_SIM_OPTIMIZE
    /* Log that the BSS is about to be cleared. */
    ALT_LOG_PUTS(alt_log_msg_bss)

    movhi r2, %hi(__bss_start)
10100264:	00840474 	movhi	r2,4113
    ori r2, r2, %lo(__bss_start)
10100268:	108de314 	ori	r2,r2,14220

    movhi r3, %hi(__bss_end)
1010026c:	00c40474 	movhi	r3,4113
    ori r3, r3, %lo(__bss_end)
10100270:	18ce3c14 	ori	r3,r3,14576

    beq r2, r3, 1f
10100274:	10c00326 	beq	r2,r3,10100284 <_start+0x40>

0:
    stw zero, (r2)
10100278:	10000015 	stw	zero,0(r2)
    addi r2, r2, 4
1010027c:	10800104 	addi	r2,r2,4
    bltu r2, r3, 0b
10100280:	10fffd36 	bltu	r2,r3,10100278 <_start+0x34>
     * section aren't defined until alt_load() has been called).
     */
    mov   et, zero
#endif

    call alt_load
10100284:	010ddac0 	call	1010ddac <alt_load>

    /* Log that alt_main is about to be called. */
    ALT_LOG_PUTS(alt_log_msg_alt_main)

    /* Call the C entry point. It should never return. */
    call alt_main
10100288:	010df400 	call	1010df40 <alt_main>

1010028c <alt_after_alt_main>:

    /* Wait in infinite loop in case alt_main does return. */
alt_after_alt_main:
    br alt_after_alt_main
1010028c:	003fff06 	br	1010028c <alt_after_alt_main>

10100290 <load_image>:
//    cmos_sensor_output_generator_start(&cmos_sensor_output_generator);
//}



int load_image(uint32_t addr){
10100290:	defff804 	addi	sp,sp,-32
10100294:	dfc00715 	stw	ra,28(sp)
10100298:	df000615 	stw	fp,24(sp)
1010029c:	df000604 	addi	fp,sp,24
101002a0:	e13fff15 	stw	r4,-4(fp)
	//char* filename = "/mnt/host/image.ppm";
	char* filename = "/mnt/host/image.ppm";
101002a4:	00840474 	movhi	r2,4113
101002a8:	10bf9004 	addi	r2,r2,-448
101002ac:	e0bffc15 	stw	r2,-16(fp)
	FILE *foutput = fopen(filename, "w");
101002b0:	01440474 	movhi	r5,4113
101002b4:	297f9504 	addi	r5,r5,-428
101002b8:	e13ffc17 	ldw	r4,-16(fp)
101002bc:	0100cec0 	call	10100cec <fopen>
101002c0:	e0bffd15 	stw	r2,-12(fp)
	if (!foutput) {
101002c4:	e0bffd17 	ldw	r2,-12(fp)
101002c8:	1000061e 	bne	r2,zero,101002e4 <load_image+0x54>
		printf("Error: could not open \"%s\" for writing\n", filename);
101002cc:	e17ffc17 	ldw	r5,-16(fp)
101002d0:	01040474 	movhi	r4,4113
101002d4:	213f9604 	addi	r4,r4,-424
101002d8:	01024680 	call	10102468 <printf>
		return 1;
101002dc:	00800044 	movi	r2,1
101002e0:	00002e06 	br	1010039c <load_image+0x10c>
	}
	//write: rgb byte format
	fprintf(foutput, "P3\n");
101002e4:	e1fffd17 	ldw	r7,-12(fp)
101002e8:	018000c4 	movi	r6,3
101002ec:	01400044 	movi	r5,1
101002f0:	01040474 	movhi	r4,4113
101002f4:	213fa004 	addi	r4,r4,-384
101002f8:	01018b40 	call	101018b4 <fwrite>
	//write: dimensions
	fprintf(foutput, "320 240\n");
101002fc:	e1fffd17 	ldw	r7,-12(fp)
10100300:	01800204 	movi	r6,8
10100304:	01400044 	movi	r5,1
10100308:	01040474 	movhi	r4,4113
1010030c:	213fa104 	addi	r4,r4,-380
10100310:	01018b40 	call	101018b4 <fwrite>
	//write: largest possible value (6 bits)
	fprintf(foutput, "63\n");
10100314:	e1fffd17 	ldw	r7,-12(fp)
10100318:	018000c4 	movi	r6,3
1010031c:	01400044 	movi	r5,1
10100320:	01040474 	movhi	r4,4113
10100324:	213fa404 	addi	r4,r4,-368
10100328:	01018b40 	call	101018b4 <fwrite>
	for(int i = 0; i < FRAME_SIZE; i++){
1010032c:	e03ffb15 	stw	zero,-20(fp)
10100330:	00001306 	br	10100380 <load_image+0xf0>
		uint16_t pixel = IORD_16DIRECT(addr, i);
10100334:	e0fffb17 	ldw	r3,-20(fp)
10100338:	e0bfff17 	ldw	r2,-4(fp)
1010033c:	1885883a 	add	r2,r3,r2
10100340:	1080002b 	ldhuio	r2,0(r2)
10100344:	10bfffcc 	andi	r2,r2,65535
10100348:	e0bffe0d 	sth	r2,-8(fp)
		int blue = (int)((pixel & MASK_BLUE) >> OFF_BLUE);
		fprintf(foutput, "%d %d %d\n", red, green, blue);
		*/
		//MOCK CAMERA INTERFACE
		//one pixel value is written per fifo entry, use that value for a gray-scale pixel
		fprintf(foutput, "%d %d %d\n", pixel, pixel, pixel);
1010034c:	e0fffe0b 	ldhu	r3,-8(fp)
10100350:	e13ffe0b 	ldhu	r4,-8(fp)
10100354:	e0bffe0b 	ldhu	r2,-8(fp)
10100358:	d8800015 	stw	r2,0(sp)
1010035c:	200f883a 	mov	r7,r4
10100360:	180d883a 	mov	r6,r3
10100364:	01440474 	movhi	r5,4113
10100368:	297fa504 	addi	r5,r5,-364
1010036c:	e13ffd17 	ldw	r4,-12(fp)
10100370:	0100d2c0 	call	10100d2c <fprintf>
	fprintf(foutput, "P3\n");
	//write: dimensions
	fprintf(foutput, "320 240\n");
	//write: largest possible value (6 bits)
	fprintf(foutput, "63\n");
	for(int i = 0; i < FRAME_SIZE; i++){
10100374:	e0bffb17 	ldw	r2,-20(fp)
10100378:	10800044 	addi	r2,r2,1
1010037c:	e0bffb15 	stw	r2,-20(fp)
10100380:	e0fffb17 	ldw	r3,-20(fp)
10100384:	00800074 	movhi	r2,1
10100388:	108affc4 	addi	r2,r2,11263
1010038c:	10ffe90e 	bge	r2,r3,10100334 <load_image+0xa4>
		*/
		//MOCK CAMERA INTERFACE
		//one pixel value is written per fifo entry, use that value for a gray-scale pixel
		fprintf(foutput, "%d %d %d\n", pixel, pixel, pixel);
	}
	fclose(foutput);
10100390:	e13ffd17 	ldw	r4,-12(fp)
10100394:	010059c0 	call	1010059c <fclose>
	return 0;
10100398:	0005883a 	mov	r2,zero
}
1010039c:	e037883a 	mov	sp,fp
101003a0:	dfc00117 	ldw	ra,4(sp)
101003a4:	df000017 	ldw	fp,0(sp)
101003a8:	dec00204 	addi	sp,sp,8
101003ac:	f800283a 	ret

101003b0 <CameraControllerISR>:
static void CameraControllerISR(void *unused){
101003b0:	defffc04 	addi	sp,sp,-16
101003b4:	dfc00315 	stw	ra,12(sp)
101003b8:	df000215 	stw	fp,8(sp)
101003bc:	df000204 	addi	fp,sp,8
101003c0:	e13fff15 	stw	r4,-4(fp)
	uint32_t addr;
	if(currentFrame == 0){
101003c4:	d0a6cb17 	ldw	r2,-25812(gp)
101003c8:	1000021e 	bne	r2,zero,101003d4 <CameraControllerISR+0x24>
		addr = FRAME0;
101003cc:	e03ffe15 	stw	zero,-8(fp)
101003d0:	00000206 	br	101003dc <CameraControllerISR+0x2c>
	}
	else{
		addr = FRAME1;
101003d4:	008000b4 	movhi	r2,2
101003d8:	e0bffe15 	stw	r2,-8(fp)
	}
	load_image(addr);
101003dc:	e13ffe17 	ldw	r4,-8(fp)
101003e0:	01002900 	call	10100290 <load_image>
	currentFrame = (currentFrame + 1)%2;
101003e4:	d0a6cb17 	ldw	r2,-25812(gp)
101003e8:	10c00044 	addi	r3,r2,1
101003ec:	00a00034 	movhi	r2,32768
101003f0:	10800044 	addi	r2,r2,1
101003f4:	1884703a 	and	r2,r3,r2
101003f8:	1000040e 	bge	r2,zero,1010040c <CameraControllerISR+0x5c>
101003fc:	10bfffc4 	addi	r2,r2,-1
10100400:	00ffff84 	movi	r3,-2
10100404:	10c4b03a 	or	r2,r2,r3
10100408:	10800044 	addi	r2,r2,1
1010040c:	d0a6cb15 	stw	r2,-25812(gp)
	//restart Camera Controller
	IOWR_32DIRECT(CAMERACONTROLLER_0_BASE, CAMERA_CONTROLLER_START, 1);
10100410:	00c00044 	movi	r3,1
10100414:	00840034 	movhi	r2,4096
10100418:	10820884 	addi	r2,r2,2082
1010041c:	10c00035 	stwio	r3,0(r2)
	//cmos_sensor_output_generator_start(&cmos_sensor_output_generator);
}
10100420:	0001883a 	nop
10100424:	e037883a 	mov	sp,fp
10100428:	dfc00117 	ldw	ra,4(sp)
1010042c:	df000017 	ldw	fp,0(sp)
10100430:	dec00204 	addi	sp,sp,8
10100434:	f800283a 	ret

10100438 <main>:
int main()
{
10100438:	defffc04 	addi	sp,sp,-16
1010043c:	dfc00315 	stw	ra,12(sp)
10100440:	df000215 	stw	fp,8(sp)
10100444:	df000204 	addi	fp,sp,8
	currentFrame = 0;
10100448:	d026cb15 	stw	zero,-25812(gp)
	//set up interrupt handlers
	int fail = alt_ic_isr_register(0,
1010044c:	d8000015 	stw	zero,0(sp)
10100450:	000f883a 	mov	r7,zero
10100454:	01840434 	movhi	r6,4112
10100458:	3180ec04 	addi	r6,r6,944
1010045c:	000b883a 	mov	r5,zero
10100460:	0009883a 	mov	r4,zero
10100464:	010d9c40 	call	1010d9c4 <alt_ic_isr_register>
10100468:	e0bfff15 	stw	r2,-4(fp)
			0, CameraControllerISR, NULL, 0x0);
	if(fail)
1010046c:	e0bfff17 	ldw	r2,-4(fp)
10100470:	10000226 	beq	r2,zero,1010047c <main+0x44>
		return 1;
10100474:	00800044 	movi	r2,1
10100478:	00000706 	br	10100498 <main+0x60>
	alt_ic_irq_enable(0,0);
1010047c:	000b883a 	mov	r5,zero
10100480:	0009883a 	mov	r4,zero
10100484:	010da140 	call	1010da14 <alt_ic_irq_enable>

	//IOWR_32DIRECT(CAMERACONTROLLER_0_BASE, CAMERA_CONTROLLER_FRAME0, FRAME0);
	//IOWR_32DIRECT(CAMERACONTROLLER_0_BASE, CAMERA_CONTROLLER_FRAME1, FRAME1);
	//IOWR_32DIRECT(CAMERACONTROLLER_0_BASE, CAMERA_CONTROLLER_START, 1);
	//init_sensor();
	printf("Hello from Nios II!\n");
10100488:	01040474 	movhi	r4,4113
1010048c:	213fa804 	addi	r4,r4,-352
10100490:	01025640 	call	10102564 <puts>
	return 0;
10100494:	0005883a 	mov	r2,zero
}
10100498:	e037883a 	mov	sp,fp
1010049c:	dfc00117 	ldw	ra,4(sp)
101004a0:	df000017 	ldw	fp,0(sp)
101004a4:	dec00204 	addi	sp,sp,8
101004a8:	f800283a 	ret

101004ac <_fclose_r>:
101004ac:	28003926 	beq	r5,zero,10100594 <_fclose_r+0xe8>
101004b0:	defffc04 	addi	sp,sp,-16
101004b4:	dc400115 	stw	r17,4(sp)
101004b8:	dc000015 	stw	r16,0(sp)
101004bc:	dfc00315 	stw	ra,12(sp)
101004c0:	dc800215 	stw	r18,8(sp)
101004c4:	2023883a 	mov	r17,r4
101004c8:	2821883a 	mov	r16,r5
101004cc:	20000226 	beq	r4,zero,101004d8 <_fclose_r+0x2c>
101004d0:	20800e17 	ldw	r2,56(r4)
101004d4:	10002726 	beq	r2,zero,10100574 <_fclose_r+0xc8>
101004d8:	8080030f 	ldh	r2,12(r16)
101004dc:	1000071e 	bne	r2,zero,101004fc <_fclose_r+0x50>
101004e0:	0005883a 	mov	r2,zero
101004e4:	dfc00317 	ldw	ra,12(sp)
101004e8:	dc800217 	ldw	r18,8(sp)
101004ec:	dc400117 	ldw	r17,4(sp)
101004f0:	dc000017 	ldw	r16,0(sp)
101004f4:	dec00404 	addi	sp,sp,16
101004f8:	f800283a 	ret
101004fc:	800b883a 	mov	r5,r16
10100500:	8809883a 	mov	r4,r17
10100504:	01005b00 	call	101005b0 <__sflush_r>
10100508:	1025883a 	mov	r18,r2
1010050c:	80800b17 	ldw	r2,44(r16)
10100510:	10000426 	beq	r2,zero,10100524 <_fclose_r+0x78>
10100514:	81400717 	ldw	r5,28(r16)
10100518:	8809883a 	mov	r4,r17
1010051c:	103ee83a 	callr	r2
10100520:	10001616 	blt	r2,zero,1010057c <_fclose_r+0xd0>
10100524:	8080030b 	ldhu	r2,12(r16)
10100528:	1080200c 	andi	r2,r2,128
1010052c:	1000151e 	bne	r2,zero,10100584 <_fclose_r+0xd8>
10100530:	81400c17 	ldw	r5,48(r16)
10100534:	28000526 	beq	r5,zero,1010054c <_fclose_r+0xa0>
10100538:	80801004 	addi	r2,r16,64
1010053c:	28800226 	beq	r5,r2,10100548 <_fclose_r+0x9c>
10100540:	8809883a 	mov	r4,r17
10100544:	0100e740 	call	10100e74 <_free_r>
10100548:	80000c15 	stw	zero,48(r16)
1010054c:	81401117 	ldw	r5,68(r16)
10100550:	28000326 	beq	r5,zero,10100560 <_fclose_r+0xb4>
10100554:	8809883a 	mov	r4,r17
10100558:	0100e740 	call	10100e74 <_free_r>
1010055c:	80001115 	stw	zero,68(r16)
10100560:	0100bb80 	call	10100bb8 <__sfp_lock_acquire>
10100564:	8000030d 	sth	zero,12(r16)
10100568:	0100bbc0 	call	10100bbc <__sfp_lock_release>
1010056c:	9005883a 	mov	r2,r18
10100570:	003fdc06 	br	101004e4 <_fclose_r+0x38>
10100574:	0100ba80 	call	10100ba8 <__sinit>
10100578:	003fd706 	br	101004d8 <_fclose_r+0x2c>
1010057c:	04bfffc4 	movi	r18,-1
10100580:	003fe806 	br	10100524 <_fclose_r+0x78>
10100584:	81400417 	ldw	r5,16(r16)
10100588:	8809883a 	mov	r4,r17
1010058c:	0100e740 	call	10100e74 <_free_r>
10100590:	003fe706 	br	10100530 <_fclose_r+0x84>
10100594:	0005883a 	mov	r2,zero
10100598:	f800283a 	ret

1010059c <fclose>:
1010059c:	00840474 	movhi	r2,4113
101005a0:	10871904 	addi	r2,r2,7268
101005a4:	200b883a 	mov	r5,r4
101005a8:	11000017 	ldw	r4,0(r2)
101005ac:	01004ac1 	jmpi	101004ac <_fclose_r>

101005b0 <__sflush_r>:
101005b0:	2880030b 	ldhu	r2,12(r5)
101005b4:	defffb04 	addi	sp,sp,-20
101005b8:	dcc00315 	stw	r19,12(sp)
101005bc:	dc400115 	stw	r17,4(sp)
101005c0:	dfc00415 	stw	ra,16(sp)
101005c4:	dc800215 	stw	r18,8(sp)
101005c8:	dc000015 	stw	r16,0(sp)
101005cc:	10c0020c 	andi	r3,r2,8
101005d0:	2823883a 	mov	r17,r5
101005d4:	2027883a 	mov	r19,r4
101005d8:	1800311e 	bne	r3,zero,101006a0 <__sflush_r+0xf0>
101005dc:	28c00117 	ldw	r3,4(r5)
101005e0:	10820014 	ori	r2,r2,2048
101005e4:	2880030d 	sth	r2,12(r5)
101005e8:	00c04b0e 	bge	zero,r3,10100718 <__sflush_r+0x168>
101005ec:	8a000a17 	ldw	r8,40(r17)
101005f0:	40002326 	beq	r8,zero,10100680 <__sflush_r+0xd0>
101005f4:	9c000017 	ldw	r16,0(r19)
101005f8:	10c4000c 	andi	r3,r2,4096
101005fc:	98000015 	stw	zero,0(r19)
10100600:	18004826 	beq	r3,zero,10100724 <__sflush_r+0x174>
10100604:	89801417 	ldw	r6,80(r17)
10100608:	10c0010c 	andi	r3,r2,4
1010060c:	18000626 	beq	r3,zero,10100628 <__sflush_r+0x78>
10100610:	88c00117 	ldw	r3,4(r17)
10100614:	88800c17 	ldw	r2,48(r17)
10100618:	30cdc83a 	sub	r6,r6,r3
1010061c:	10000226 	beq	r2,zero,10100628 <__sflush_r+0x78>
10100620:	88800f17 	ldw	r2,60(r17)
10100624:	308dc83a 	sub	r6,r6,r2
10100628:	89400717 	ldw	r5,28(r17)
1010062c:	000f883a 	mov	r7,zero
10100630:	9809883a 	mov	r4,r19
10100634:	403ee83a 	callr	r8
10100638:	00ffffc4 	movi	r3,-1
1010063c:	10c04426 	beq	r2,r3,10100750 <__sflush_r+0x1a0>
10100640:	88c0030b 	ldhu	r3,12(r17)
10100644:	89000417 	ldw	r4,16(r17)
10100648:	88000115 	stw	zero,4(r17)
1010064c:	197dffcc 	andi	r5,r3,63487
10100650:	8940030d 	sth	r5,12(r17)
10100654:	89000015 	stw	r4,0(r17)
10100658:	18c4000c 	andi	r3,r3,4096
1010065c:	18002c1e 	bne	r3,zero,10100710 <__sflush_r+0x160>
10100660:	89400c17 	ldw	r5,48(r17)
10100664:	9c000015 	stw	r16,0(r19)
10100668:	28000526 	beq	r5,zero,10100680 <__sflush_r+0xd0>
1010066c:	88801004 	addi	r2,r17,64
10100670:	28800226 	beq	r5,r2,1010067c <__sflush_r+0xcc>
10100674:	9809883a 	mov	r4,r19
10100678:	0100e740 	call	10100e74 <_free_r>
1010067c:	88000c15 	stw	zero,48(r17)
10100680:	0005883a 	mov	r2,zero
10100684:	dfc00417 	ldw	ra,16(sp)
10100688:	dcc00317 	ldw	r19,12(sp)
1010068c:	dc800217 	ldw	r18,8(sp)
10100690:	dc400117 	ldw	r17,4(sp)
10100694:	dc000017 	ldw	r16,0(sp)
10100698:	dec00504 	addi	sp,sp,20
1010069c:	f800283a 	ret
101006a0:	2c800417 	ldw	r18,16(r5)
101006a4:	903ff626 	beq	r18,zero,10100680 <__sflush_r+0xd0>
101006a8:	2c000017 	ldw	r16,0(r5)
101006ac:	108000cc 	andi	r2,r2,3
101006b0:	2c800015 	stw	r18,0(r5)
101006b4:	84a1c83a 	sub	r16,r16,r18
101006b8:	1000131e 	bne	r2,zero,10100708 <__sflush_r+0x158>
101006bc:	28800517 	ldw	r2,20(r5)
101006c0:	88800215 	stw	r2,8(r17)
101006c4:	04000316 	blt	zero,r16,101006d4 <__sflush_r+0x124>
101006c8:	003fed06 	br	10100680 <__sflush_r+0xd0>
101006cc:	90a5883a 	add	r18,r18,r2
101006d0:	043feb0e 	bge	zero,r16,10100680 <__sflush_r+0xd0>
101006d4:	88800917 	ldw	r2,36(r17)
101006d8:	89400717 	ldw	r5,28(r17)
101006dc:	800f883a 	mov	r7,r16
101006e0:	900d883a 	mov	r6,r18
101006e4:	9809883a 	mov	r4,r19
101006e8:	103ee83a 	callr	r2
101006ec:	80a1c83a 	sub	r16,r16,r2
101006f0:	00bff616 	blt	zero,r2,101006cc <__sflush_r+0x11c>
101006f4:	88c0030b 	ldhu	r3,12(r17)
101006f8:	00bfffc4 	movi	r2,-1
101006fc:	18c01014 	ori	r3,r3,64
10100700:	88c0030d 	sth	r3,12(r17)
10100704:	003fdf06 	br	10100684 <__sflush_r+0xd4>
10100708:	0005883a 	mov	r2,zero
1010070c:	003fec06 	br	101006c0 <__sflush_r+0x110>
10100710:	88801415 	stw	r2,80(r17)
10100714:	003fd206 	br	10100660 <__sflush_r+0xb0>
10100718:	28c00f17 	ldw	r3,60(r5)
1010071c:	00ffb316 	blt	zero,r3,101005ec <__sflush_r+0x3c>
10100720:	003fd706 	br	10100680 <__sflush_r+0xd0>
10100724:	89400717 	ldw	r5,28(r17)
10100728:	000d883a 	mov	r6,zero
1010072c:	01c00044 	movi	r7,1
10100730:	9809883a 	mov	r4,r19
10100734:	403ee83a 	callr	r8
10100738:	100d883a 	mov	r6,r2
1010073c:	00bfffc4 	movi	r2,-1
10100740:	30801426 	beq	r6,r2,10100794 <__sflush_r+0x1e4>
10100744:	8880030b 	ldhu	r2,12(r17)
10100748:	8a000a17 	ldw	r8,40(r17)
1010074c:	003fae06 	br	10100608 <__sflush_r+0x58>
10100750:	98c00017 	ldw	r3,0(r19)
10100754:	183fba26 	beq	r3,zero,10100640 <__sflush_r+0x90>
10100758:	01000744 	movi	r4,29
1010075c:	19000626 	beq	r3,r4,10100778 <__sflush_r+0x1c8>
10100760:	01000584 	movi	r4,22
10100764:	19000426 	beq	r3,r4,10100778 <__sflush_r+0x1c8>
10100768:	88c0030b 	ldhu	r3,12(r17)
1010076c:	18c01014 	ori	r3,r3,64
10100770:	88c0030d 	sth	r3,12(r17)
10100774:	003fc306 	br	10100684 <__sflush_r+0xd4>
10100778:	8880030b 	ldhu	r2,12(r17)
1010077c:	88c00417 	ldw	r3,16(r17)
10100780:	88000115 	stw	zero,4(r17)
10100784:	10bdffcc 	andi	r2,r2,63487
10100788:	8880030d 	sth	r2,12(r17)
1010078c:	88c00015 	stw	r3,0(r17)
10100790:	003fb306 	br	10100660 <__sflush_r+0xb0>
10100794:	98800017 	ldw	r2,0(r19)
10100798:	103fea26 	beq	r2,zero,10100744 <__sflush_r+0x194>
1010079c:	00c00744 	movi	r3,29
101007a0:	10c00226 	beq	r2,r3,101007ac <__sflush_r+0x1fc>
101007a4:	00c00584 	movi	r3,22
101007a8:	10c0031e 	bne	r2,r3,101007b8 <__sflush_r+0x208>
101007ac:	9c000015 	stw	r16,0(r19)
101007b0:	0005883a 	mov	r2,zero
101007b4:	003fb306 	br	10100684 <__sflush_r+0xd4>
101007b8:	88c0030b 	ldhu	r3,12(r17)
101007bc:	3005883a 	mov	r2,r6
101007c0:	18c01014 	ori	r3,r3,64
101007c4:	88c0030d 	sth	r3,12(r17)
101007c8:	003fae06 	br	10100684 <__sflush_r+0xd4>

101007cc <_fflush_r>:
101007cc:	defffd04 	addi	sp,sp,-12
101007d0:	dc000115 	stw	r16,4(sp)
101007d4:	dfc00215 	stw	ra,8(sp)
101007d8:	2021883a 	mov	r16,r4
101007dc:	20000226 	beq	r4,zero,101007e8 <_fflush_r+0x1c>
101007e0:	20800e17 	ldw	r2,56(r4)
101007e4:	10000c26 	beq	r2,zero,10100818 <_fflush_r+0x4c>
101007e8:	2880030f 	ldh	r2,12(r5)
101007ec:	1000051e 	bne	r2,zero,10100804 <_fflush_r+0x38>
101007f0:	0005883a 	mov	r2,zero
101007f4:	dfc00217 	ldw	ra,8(sp)
101007f8:	dc000117 	ldw	r16,4(sp)
101007fc:	dec00304 	addi	sp,sp,12
10100800:	f800283a 	ret
10100804:	8009883a 	mov	r4,r16
10100808:	dfc00217 	ldw	ra,8(sp)
1010080c:	dc000117 	ldw	r16,4(sp)
10100810:	dec00304 	addi	sp,sp,12
10100814:	01005b01 	jmpi	101005b0 <__sflush_r>
10100818:	d9400015 	stw	r5,0(sp)
1010081c:	0100ba80 	call	10100ba8 <__sinit>
10100820:	d9400017 	ldw	r5,0(sp)
10100824:	003ff006 	br	101007e8 <_fflush_r+0x1c>

10100828 <fflush>:
10100828:	20000526 	beq	r4,zero,10100840 <fflush+0x18>
1010082c:	00840474 	movhi	r2,4113
10100830:	10871904 	addi	r2,r2,7268
10100834:	200b883a 	mov	r5,r4
10100838:	11000017 	ldw	r4,0(r2)
1010083c:	01007cc1 	jmpi	101007cc <_fflush_r>
10100840:	00840474 	movhi	r2,4113
10100844:	10871804 	addi	r2,r2,7264
10100848:	11000017 	ldw	r4,0(r2)
1010084c:	01440434 	movhi	r5,4112
10100850:	2941f304 	addi	r5,r5,1996
10100854:	01017241 	jmpi	10101724 <_fwalk_reent>

10100858 <__fp_unlock>:
10100858:	0005883a 	mov	r2,zero
1010085c:	f800283a 	ret

10100860 <_cleanup_r>:
10100860:	01440434 	movhi	r5,4112
10100864:	29412b04 	addi	r5,r5,1196
10100868:	01017241 	jmpi	10101724 <_fwalk_reent>

1010086c <__sinit.part.1>:
1010086c:	defff704 	addi	sp,sp,-36
10100870:	00c40434 	movhi	r3,4112
10100874:	dfc00815 	stw	ra,32(sp)
10100878:	ddc00715 	stw	r23,28(sp)
1010087c:	dd800615 	stw	r22,24(sp)
10100880:	dd400515 	stw	r21,20(sp)
10100884:	dd000415 	stw	r20,16(sp)
10100888:	dcc00315 	stw	r19,12(sp)
1010088c:	dc800215 	stw	r18,8(sp)
10100890:	dc400115 	stw	r17,4(sp)
10100894:	dc000015 	stw	r16,0(sp)
10100898:	18c21804 	addi	r3,r3,2144
1010089c:	24000117 	ldw	r16,4(r4)
101008a0:	20c00f15 	stw	r3,60(r4)
101008a4:	2080bb04 	addi	r2,r4,748
101008a8:	00c000c4 	movi	r3,3
101008ac:	20c0b915 	stw	r3,740(r4)
101008b0:	2080ba15 	stw	r2,744(r4)
101008b4:	2000b815 	stw	zero,736(r4)
101008b8:	05c00204 	movi	r23,8
101008bc:	00800104 	movi	r2,4
101008c0:	2025883a 	mov	r18,r4
101008c4:	b80d883a 	mov	r6,r23
101008c8:	81001704 	addi	r4,r16,92
101008cc:	000b883a 	mov	r5,zero
101008d0:	80000015 	stw	zero,0(r16)
101008d4:	80000115 	stw	zero,4(r16)
101008d8:	80000215 	stw	zero,8(r16)
101008dc:	8080030d 	sth	r2,12(r16)
101008e0:	80001915 	stw	zero,100(r16)
101008e4:	8000038d 	sth	zero,14(r16)
101008e8:	80000415 	stw	zero,16(r16)
101008ec:	80000515 	stw	zero,20(r16)
101008f0:	80000615 	stw	zero,24(r16)
101008f4:	01022b00 	call	101022b0 <memset>
101008f8:	05840434 	movhi	r22,4112
101008fc:	94400217 	ldw	r17,8(r18)
10100900:	05440434 	movhi	r21,4112
10100904:	05040434 	movhi	r20,4112
10100908:	04c40434 	movhi	r19,4112
1010090c:	b589ef04 	addi	r22,r22,10172
10100910:	ad4a0604 	addi	r21,r21,10264
10100914:	a50a2504 	addi	r20,r20,10388
10100918:	9cca3c04 	addi	r19,r19,10480
1010091c:	85800815 	stw	r22,32(r16)
10100920:	85400915 	stw	r21,36(r16)
10100924:	85000a15 	stw	r20,40(r16)
10100928:	84c00b15 	stw	r19,44(r16)
1010092c:	84000715 	stw	r16,28(r16)
10100930:	00800284 	movi	r2,10
10100934:	8880030d 	sth	r2,12(r17)
10100938:	00800044 	movi	r2,1
1010093c:	b80d883a 	mov	r6,r23
10100940:	89001704 	addi	r4,r17,92
10100944:	000b883a 	mov	r5,zero
10100948:	88000015 	stw	zero,0(r17)
1010094c:	88000115 	stw	zero,4(r17)
10100950:	88000215 	stw	zero,8(r17)
10100954:	88001915 	stw	zero,100(r17)
10100958:	8880038d 	sth	r2,14(r17)
1010095c:	88000415 	stw	zero,16(r17)
10100960:	88000515 	stw	zero,20(r17)
10100964:	88000615 	stw	zero,24(r17)
10100968:	01022b00 	call	101022b0 <memset>
1010096c:	94000317 	ldw	r16,12(r18)
10100970:	00800484 	movi	r2,18
10100974:	8c400715 	stw	r17,28(r17)
10100978:	8d800815 	stw	r22,32(r17)
1010097c:	8d400915 	stw	r21,36(r17)
10100980:	8d000a15 	stw	r20,40(r17)
10100984:	8cc00b15 	stw	r19,44(r17)
10100988:	8080030d 	sth	r2,12(r16)
1010098c:	00800084 	movi	r2,2
10100990:	80000015 	stw	zero,0(r16)
10100994:	80000115 	stw	zero,4(r16)
10100998:	80000215 	stw	zero,8(r16)
1010099c:	80001915 	stw	zero,100(r16)
101009a0:	8080038d 	sth	r2,14(r16)
101009a4:	80000415 	stw	zero,16(r16)
101009a8:	80000515 	stw	zero,20(r16)
101009ac:	80000615 	stw	zero,24(r16)
101009b0:	b80d883a 	mov	r6,r23
101009b4:	000b883a 	mov	r5,zero
101009b8:	81001704 	addi	r4,r16,92
101009bc:	01022b00 	call	101022b0 <memset>
101009c0:	00800044 	movi	r2,1
101009c4:	84000715 	stw	r16,28(r16)
101009c8:	85800815 	stw	r22,32(r16)
101009cc:	85400915 	stw	r21,36(r16)
101009d0:	85000a15 	stw	r20,40(r16)
101009d4:	84c00b15 	stw	r19,44(r16)
101009d8:	90800e15 	stw	r2,56(r18)
101009dc:	dfc00817 	ldw	ra,32(sp)
101009e0:	ddc00717 	ldw	r23,28(sp)
101009e4:	dd800617 	ldw	r22,24(sp)
101009e8:	dd400517 	ldw	r21,20(sp)
101009ec:	dd000417 	ldw	r20,16(sp)
101009f0:	dcc00317 	ldw	r19,12(sp)
101009f4:	dc800217 	ldw	r18,8(sp)
101009f8:	dc400117 	ldw	r17,4(sp)
101009fc:	dc000017 	ldw	r16,0(sp)
10100a00:	dec00904 	addi	sp,sp,36
10100a04:	f800283a 	ret

10100a08 <__fp_lock>:
10100a08:	0005883a 	mov	r2,zero
10100a0c:	f800283a 	ret

10100a10 <__sfmoreglue>:
10100a10:	defffc04 	addi	sp,sp,-16
10100a14:	dc400115 	stw	r17,4(sp)
10100a18:	2c7fffc4 	addi	r17,r5,-1
10100a1c:	8c401a24 	muli	r17,r17,104
10100a20:	dc800215 	stw	r18,8(sp)
10100a24:	2825883a 	mov	r18,r5
10100a28:	89401d04 	addi	r5,r17,116
10100a2c:	dc000015 	stw	r16,0(sp)
10100a30:	dfc00315 	stw	ra,12(sp)
10100a34:	0101aa40 	call	10101aa4 <_malloc_r>
10100a38:	1021883a 	mov	r16,r2
10100a3c:	10000726 	beq	r2,zero,10100a5c <__sfmoreglue+0x4c>
10100a40:	11000304 	addi	r4,r2,12
10100a44:	10000015 	stw	zero,0(r2)
10100a48:	14800115 	stw	r18,4(r2)
10100a4c:	11000215 	stw	r4,8(r2)
10100a50:	89801a04 	addi	r6,r17,104
10100a54:	000b883a 	mov	r5,zero
10100a58:	01022b00 	call	101022b0 <memset>
10100a5c:	8005883a 	mov	r2,r16
10100a60:	dfc00317 	ldw	ra,12(sp)
10100a64:	dc800217 	ldw	r18,8(sp)
10100a68:	dc400117 	ldw	r17,4(sp)
10100a6c:	dc000017 	ldw	r16,0(sp)
10100a70:	dec00404 	addi	sp,sp,16
10100a74:	f800283a 	ret

10100a78 <__sfp>:
10100a78:	defffb04 	addi	sp,sp,-20
10100a7c:	dc000015 	stw	r16,0(sp)
10100a80:	04040474 	movhi	r16,4113
10100a84:	84071804 	addi	r16,r16,7264
10100a88:	dcc00315 	stw	r19,12(sp)
10100a8c:	2027883a 	mov	r19,r4
10100a90:	81000017 	ldw	r4,0(r16)
10100a94:	dfc00415 	stw	ra,16(sp)
10100a98:	dc800215 	stw	r18,8(sp)
10100a9c:	20800e17 	ldw	r2,56(r4)
10100aa0:	dc400115 	stw	r17,4(sp)
10100aa4:	1000021e 	bne	r2,zero,10100ab0 <__sfp+0x38>
10100aa8:	010086c0 	call	1010086c <__sinit.part.1>
10100aac:	81000017 	ldw	r4,0(r16)
10100ab0:	2480b804 	addi	r18,r4,736
10100ab4:	047fffc4 	movi	r17,-1
10100ab8:	91000117 	ldw	r4,4(r18)
10100abc:	94000217 	ldw	r16,8(r18)
10100ac0:	213fffc4 	addi	r4,r4,-1
10100ac4:	20000a16 	blt	r4,zero,10100af0 <__sfp+0x78>
10100ac8:	8080030f 	ldh	r2,12(r16)
10100acc:	10000c26 	beq	r2,zero,10100b00 <__sfp+0x88>
10100ad0:	80c01d04 	addi	r3,r16,116
10100ad4:	00000206 	br	10100ae0 <__sfp+0x68>
10100ad8:	18bfe60f 	ldh	r2,-104(r3)
10100adc:	10000826 	beq	r2,zero,10100b00 <__sfp+0x88>
10100ae0:	213fffc4 	addi	r4,r4,-1
10100ae4:	1c3ffd04 	addi	r16,r3,-12
10100ae8:	18c01a04 	addi	r3,r3,104
10100aec:	247ffa1e 	bne	r4,r17,10100ad8 <__sfp+0x60>
10100af0:	90800017 	ldw	r2,0(r18)
10100af4:	10001d26 	beq	r2,zero,10100b6c <__sfp+0xf4>
10100af8:	1025883a 	mov	r18,r2
10100afc:	003fee06 	br	10100ab8 <__sfp+0x40>
10100b00:	00bfffc4 	movi	r2,-1
10100b04:	8080038d 	sth	r2,14(r16)
10100b08:	00800044 	movi	r2,1
10100b0c:	8080030d 	sth	r2,12(r16)
10100b10:	80001915 	stw	zero,100(r16)
10100b14:	80000015 	stw	zero,0(r16)
10100b18:	80000215 	stw	zero,8(r16)
10100b1c:	80000115 	stw	zero,4(r16)
10100b20:	80000415 	stw	zero,16(r16)
10100b24:	80000515 	stw	zero,20(r16)
10100b28:	80000615 	stw	zero,24(r16)
10100b2c:	01800204 	movi	r6,8
10100b30:	000b883a 	mov	r5,zero
10100b34:	81001704 	addi	r4,r16,92
10100b38:	01022b00 	call	101022b0 <memset>
10100b3c:	8005883a 	mov	r2,r16
10100b40:	80000c15 	stw	zero,48(r16)
10100b44:	80000d15 	stw	zero,52(r16)
10100b48:	80001115 	stw	zero,68(r16)
10100b4c:	80001215 	stw	zero,72(r16)
10100b50:	dfc00417 	ldw	ra,16(sp)
10100b54:	dcc00317 	ldw	r19,12(sp)
10100b58:	dc800217 	ldw	r18,8(sp)
10100b5c:	dc400117 	ldw	r17,4(sp)
10100b60:	dc000017 	ldw	r16,0(sp)
10100b64:	dec00504 	addi	sp,sp,20
10100b68:	f800283a 	ret
10100b6c:	01400104 	movi	r5,4
10100b70:	9809883a 	mov	r4,r19
10100b74:	0100a100 	call	10100a10 <__sfmoreglue>
10100b78:	90800015 	stw	r2,0(r18)
10100b7c:	103fde1e 	bne	r2,zero,10100af8 <__sfp+0x80>
10100b80:	00800304 	movi	r2,12
10100b84:	98800015 	stw	r2,0(r19)
10100b88:	0005883a 	mov	r2,zero
10100b8c:	003ff006 	br	10100b50 <__sfp+0xd8>

10100b90 <_cleanup>:
10100b90:	00840474 	movhi	r2,4113
10100b94:	10871804 	addi	r2,r2,7264
10100b98:	11000017 	ldw	r4,0(r2)
10100b9c:	01440434 	movhi	r5,4112
10100ba0:	29412b04 	addi	r5,r5,1196
10100ba4:	01017241 	jmpi	10101724 <_fwalk_reent>

10100ba8 <__sinit>:
10100ba8:	20800e17 	ldw	r2,56(r4)
10100bac:	10000126 	beq	r2,zero,10100bb4 <__sinit+0xc>
10100bb0:	f800283a 	ret
10100bb4:	010086c1 	jmpi	1010086c <__sinit.part.1>

10100bb8 <__sfp_lock_acquire>:
10100bb8:	f800283a 	ret

10100bbc <__sfp_lock_release>:
10100bbc:	f800283a 	ret

10100bc0 <__sinit_lock_acquire>:
10100bc0:	f800283a 	ret

10100bc4 <__sinit_lock_release>:
10100bc4:	f800283a 	ret

10100bc8 <__fp_lock_all>:
10100bc8:	00840474 	movhi	r2,4113
10100bcc:	10871904 	addi	r2,r2,7268
10100bd0:	11000017 	ldw	r4,0(r2)
10100bd4:	01440434 	movhi	r5,4112
10100bd8:	29428204 	addi	r5,r5,2568
10100bdc:	01016601 	jmpi	10101660 <_fwalk>

10100be0 <__fp_unlock_all>:
10100be0:	00840474 	movhi	r2,4113
10100be4:	10871904 	addi	r2,r2,7268
10100be8:	11000017 	ldw	r4,0(r2)
10100bec:	01440434 	movhi	r5,4112
10100bf0:	29421604 	addi	r5,r5,2136
10100bf4:	01016601 	jmpi	10101660 <_fwalk>

10100bf8 <_fopen_r>:
10100bf8:	defffa04 	addi	sp,sp,-24
10100bfc:	3005883a 	mov	r2,r6
10100c00:	dcc00415 	stw	r19,16(sp)
10100c04:	d80d883a 	mov	r6,sp
10100c08:	2827883a 	mov	r19,r5
10100c0c:	100b883a 	mov	r5,r2
10100c10:	dc800315 	stw	r18,12(sp)
10100c14:	dfc00515 	stw	ra,20(sp)
10100c18:	dc400215 	stw	r17,8(sp)
10100c1c:	dc000115 	stw	r16,4(sp)
10100c20:	2025883a 	mov	r18,r4
10100c24:	01066f00 	call	101066f0 <__sflags>
10100c28:	10002726 	beq	r2,zero,10100cc8 <_fopen_r+0xd0>
10100c2c:	9009883a 	mov	r4,r18
10100c30:	1023883a 	mov	r17,r2
10100c34:	0100a780 	call	10100a78 <__sfp>
10100c38:	1021883a 	mov	r16,r2
10100c3c:	10002226 	beq	r2,zero,10100cc8 <_fopen_r+0xd0>
10100c40:	d9800017 	ldw	r6,0(sp)
10100c44:	01c06d84 	movi	r7,438
10100c48:	980b883a 	mov	r5,r19
10100c4c:	9009883a 	mov	r4,r18
10100c50:	01023d80 	call	101023d8 <_open_r>
10100c54:	10001916 	blt	r2,zero,10100cbc <_fopen_r+0xc4>
10100c58:	8080038d 	sth	r2,14(r16)
10100c5c:	00840434 	movhi	r2,4112
10100c60:	1089ef04 	addi	r2,r2,10172
10100c64:	80800815 	stw	r2,32(r16)
10100c68:	00840434 	movhi	r2,4112
10100c6c:	108a0604 	addi	r2,r2,10264
10100c70:	80800915 	stw	r2,36(r16)
10100c74:	00840434 	movhi	r2,4112
10100c78:	108a2504 	addi	r2,r2,10388
10100c7c:	80800a15 	stw	r2,40(r16)
10100c80:	00840434 	movhi	r2,4112
10100c84:	108a3c04 	addi	r2,r2,10480
10100c88:	8440030d 	sth	r17,12(r16)
10100c8c:	84000715 	stw	r16,28(r16)
10100c90:	80800b15 	stw	r2,44(r16)
10100c94:	8c40400c 	andi	r17,r17,256
10100c98:	88000d1e 	bne	r17,zero,10100cd0 <_fopen_r+0xd8>
10100c9c:	8005883a 	mov	r2,r16
10100ca0:	dfc00517 	ldw	ra,20(sp)
10100ca4:	dcc00417 	ldw	r19,16(sp)
10100ca8:	dc800317 	ldw	r18,12(sp)
10100cac:	dc400217 	ldw	r17,8(sp)
10100cb0:	dc000117 	ldw	r16,4(sp)
10100cb4:	dec00604 	addi	sp,sp,24
10100cb8:	f800283a 	ret
10100cbc:	0100bb80 	call	10100bb8 <__sfp_lock_acquire>
10100cc0:	8000030d 	sth	zero,12(r16)
10100cc4:	0100bbc0 	call	10100bbc <__sfp_lock_release>
10100cc8:	0005883a 	mov	r2,zero
10100ccc:	003ff406 	br	10100ca0 <_fopen_r+0xa8>
10100cd0:	01c00084 	movi	r7,2
10100cd4:	000d883a 	mov	r6,zero
10100cd8:	800b883a 	mov	r5,r16
10100cdc:	9009883a 	mov	r4,r18
10100ce0:	01011840 	call	10101184 <_fseek_r>
10100ce4:	8005883a 	mov	r2,r16
10100ce8:	003fed06 	br	10100ca0 <_fopen_r+0xa8>

10100cec <fopen>:
10100cec:	00840474 	movhi	r2,4113
10100cf0:	10871904 	addi	r2,r2,7268
10100cf4:	280d883a 	mov	r6,r5
10100cf8:	200b883a 	mov	r5,r4
10100cfc:	11000017 	ldw	r4,0(r2)
10100d00:	0100bf81 	jmpi	10100bf8 <_fopen_r>

10100d04 <_fprintf_r>:
10100d04:	defffe04 	addi	sp,sp,-8
10100d08:	2809883a 	mov	r4,r5
10100d0c:	300b883a 	mov	r5,r6
10100d10:	dfc00015 	stw	ra,0(sp)
10100d14:	d9c00115 	stw	r7,4(sp)
10100d18:	d9800104 	addi	r6,sp,4
10100d1c:	0104b880 	call	10104b88 <__vfprintf_internal>
10100d20:	dfc00017 	ldw	ra,0(sp)
10100d24:	dec00204 	addi	sp,sp,8
10100d28:	f800283a 	ret

10100d2c <fprintf>:
10100d2c:	defffd04 	addi	sp,sp,-12
10100d30:	dfc00015 	stw	ra,0(sp)
10100d34:	d9800115 	stw	r6,4(sp)
10100d38:	d9c00215 	stw	r7,8(sp)
10100d3c:	d9800104 	addi	r6,sp,4
10100d40:	0104b880 	call	10104b88 <__vfprintf_internal>
10100d44:	dfc00017 	ldw	ra,0(sp)
10100d48:	dec00304 	addi	sp,sp,12
10100d4c:	f800283a 	ret

10100d50 <_malloc_trim_r>:
10100d50:	defffb04 	addi	sp,sp,-20
10100d54:	dcc00315 	stw	r19,12(sp)
10100d58:	04c40474 	movhi	r19,4113
10100d5c:	dc800215 	stw	r18,8(sp)
10100d60:	dc400115 	stw	r17,4(sp)
10100d64:	dc000015 	stw	r16,0(sp)
10100d68:	dfc00415 	stw	ra,16(sp)
10100d6c:	2821883a 	mov	r16,r5
10100d70:	9cc17604 	addi	r19,r19,1496
10100d74:	2025883a 	mov	r18,r4
10100d78:	010dfbc0 	call	1010dfbc <__malloc_lock>
10100d7c:	98800217 	ldw	r2,8(r19)
10100d80:	14400117 	ldw	r17,4(r2)
10100d84:	00bfff04 	movi	r2,-4
10100d88:	88a2703a 	and	r17,r17,r2
10100d8c:	8c21c83a 	sub	r16,r17,r16
10100d90:	8403fbc4 	addi	r16,r16,4079
10100d94:	8020d33a 	srli	r16,r16,12
10100d98:	0083ffc4 	movi	r2,4095
10100d9c:	843fffc4 	addi	r16,r16,-1
10100da0:	8020933a 	slli	r16,r16,12
10100da4:	1400060e 	bge	r2,r16,10100dc0 <_malloc_trim_r+0x70>
10100da8:	000b883a 	mov	r5,zero
10100dac:	9009883a 	mov	r4,r18
10100db0:	01027680 	call	10102768 <_sbrk_r>
10100db4:	98c00217 	ldw	r3,8(r19)
10100db8:	1c47883a 	add	r3,r3,r17
10100dbc:	10c00a26 	beq	r2,r3,10100de8 <_malloc_trim_r+0x98>
10100dc0:	9009883a 	mov	r4,r18
10100dc4:	010dfe00 	call	1010dfe0 <__malloc_unlock>
10100dc8:	0005883a 	mov	r2,zero
10100dcc:	dfc00417 	ldw	ra,16(sp)
10100dd0:	dcc00317 	ldw	r19,12(sp)
10100dd4:	dc800217 	ldw	r18,8(sp)
10100dd8:	dc400117 	ldw	r17,4(sp)
10100ddc:	dc000017 	ldw	r16,0(sp)
10100de0:	dec00504 	addi	sp,sp,20
10100de4:	f800283a 	ret
10100de8:	040bc83a 	sub	r5,zero,r16
10100dec:	9009883a 	mov	r4,r18
10100df0:	01027680 	call	10102768 <_sbrk_r>
10100df4:	00ffffc4 	movi	r3,-1
10100df8:	10c00d26 	beq	r2,r3,10100e30 <_malloc_trim_r+0xe0>
10100dfc:	00c40474 	movhi	r3,4113
10100e00:	18cdf204 	addi	r3,r3,14280
10100e04:	18800017 	ldw	r2,0(r3)
10100e08:	99000217 	ldw	r4,8(r19)
10100e0c:	8c23c83a 	sub	r17,r17,r16
10100e10:	8c400054 	ori	r17,r17,1
10100e14:	1421c83a 	sub	r16,r2,r16
10100e18:	24400115 	stw	r17,4(r4)
10100e1c:	9009883a 	mov	r4,r18
10100e20:	1c000015 	stw	r16,0(r3)
10100e24:	010dfe00 	call	1010dfe0 <__malloc_unlock>
10100e28:	00800044 	movi	r2,1
10100e2c:	003fe706 	br	10100dcc <_malloc_trim_r+0x7c>
10100e30:	000b883a 	mov	r5,zero
10100e34:	9009883a 	mov	r4,r18
10100e38:	01027680 	call	10102768 <_sbrk_r>
10100e3c:	99000217 	ldw	r4,8(r19)
10100e40:	014003c4 	movi	r5,15
10100e44:	1107c83a 	sub	r3,r2,r4
10100e48:	28ffdd0e 	bge	r5,r3,10100dc0 <_malloc_trim_r+0x70>
10100e4c:	01440474 	movhi	r5,4113
10100e50:	29471a04 	addi	r5,r5,7272
10100e54:	29400017 	ldw	r5,0(r5)
10100e58:	18c00054 	ori	r3,r3,1
10100e5c:	20c00115 	stw	r3,4(r4)
10100e60:	00c40474 	movhi	r3,4113
10100e64:	1145c83a 	sub	r2,r2,r5
10100e68:	18cdf204 	addi	r3,r3,14280
10100e6c:	18800015 	stw	r2,0(r3)
10100e70:	003fd306 	br	10100dc0 <_malloc_trim_r+0x70>

10100e74 <_free_r>:
10100e74:	28004126 	beq	r5,zero,10100f7c <_free_r+0x108>
10100e78:	defffd04 	addi	sp,sp,-12
10100e7c:	dc400115 	stw	r17,4(sp)
10100e80:	dc000015 	stw	r16,0(sp)
10100e84:	2023883a 	mov	r17,r4
10100e88:	2821883a 	mov	r16,r5
10100e8c:	dfc00215 	stw	ra,8(sp)
10100e90:	010dfbc0 	call	1010dfbc <__malloc_lock>
10100e94:	81ffff17 	ldw	r7,-4(r16)
10100e98:	00bfff84 	movi	r2,-2
10100e9c:	01040474 	movhi	r4,4113
10100ea0:	81bffe04 	addi	r6,r16,-8
10100ea4:	3884703a 	and	r2,r7,r2
10100ea8:	21017604 	addi	r4,r4,1496
10100eac:	308b883a 	add	r5,r6,r2
10100eb0:	2a400117 	ldw	r9,4(r5)
10100eb4:	22000217 	ldw	r8,8(r4)
10100eb8:	00ffff04 	movi	r3,-4
10100ebc:	48c6703a 	and	r3,r9,r3
10100ec0:	2a005726 	beq	r5,r8,10101020 <_free_r+0x1ac>
10100ec4:	28c00115 	stw	r3,4(r5)
10100ec8:	39c0004c 	andi	r7,r7,1
10100ecc:	3800091e 	bne	r7,zero,10100ef4 <_free_r+0x80>
10100ed0:	823ffe17 	ldw	r8,-8(r16)
10100ed4:	22400204 	addi	r9,r4,8
10100ed8:	320dc83a 	sub	r6,r6,r8
10100edc:	31c00217 	ldw	r7,8(r6)
10100ee0:	1205883a 	add	r2,r2,r8
10100ee4:	3a406526 	beq	r7,r9,1010107c <_free_r+0x208>
10100ee8:	32000317 	ldw	r8,12(r6)
10100eec:	3a000315 	stw	r8,12(r7)
10100ef0:	41c00215 	stw	r7,8(r8)
10100ef4:	28cf883a 	add	r7,r5,r3
10100ef8:	39c00117 	ldw	r7,4(r7)
10100efc:	39c0004c 	andi	r7,r7,1
10100f00:	38003a26 	beq	r7,zero,10100fec <_free_r+0x178>
10100f04:	10c00054 	ori	r3,r2,1
10100f08:	30c00115 	stw	r3,4(r6)
10100f0c:	3087883a 	add	r3,r6,r2
10100f10:	18800015 	stw	r2,0(r3)
10100f14:	00c07fc4 	movi	r3,511
10100f18:	18801936 	bltu	r3,r2,10100f80 <_free_r+0x10c>
10100f1c:	1004d0fa 	srli	r2,r2,3
10100f20:	01c00044 	movi	r7,1
10100f24:	21400117 	ldw	r5,4(r4)
10100f28:	10c00044 	addi	r3,r2,1
10100f2c:	18c7883a 	add	r3,r3,r3
10100f30:	1005d0ba 	srai	r2,r2,2
10100f34:	18c7883a 	add	r3,r3,r3
10100f38:	18c7883a 	add	r3,r3,r3
10100f3c:	1907883a 	add	r3,r3,r4
10100f40:	3884983a 	sll	r2,r7,r2
10100f44:	19c00017 	ldw	r7,0(r3)
10100f48:	1a3ffe04 	addi	r8,r3,-8
10100f4c:	1144b03a 	or	r2,r2,r5
10100f50:	32000315 	stw	r8,12(r6)
10100f54:	31c00215 	stw	r7,8(r6)
10100f58:	20800115 	stw	r2,4(r4)
10100f5c:	19800015 	stw	r6,0(r3)
10100f60:	39800315 	stw	r6,12(r7)
10100f64:	8809883a 	mov	r4,r17
10100f68:	dfc00217 	ldw	ra,8(sp)
10100f6c:	dc400117 	ldw	r17,4(sp)
10100f70:	dc000017 	ldw	r16,0(sp)
10100f74:	dec00304 	addi	sp,sp,12
10100f78:	010dfe01 	jmpi	1010dfe0 <__malloc_unlock>
10100f7c:	f800283a 	ret
10100f80:	100ad27a 	srli	r5,r2,9
10100f84:	00c00104 	movi	r3,4
10100f88:	19404a36 	bltu	r3,r5,101010b4 <_free_r+0x240>
10100f8c:	100ad1ba 	srli	r5,r2,6
10100f90:	28c00e44 	addi	r3,r5,57
10100f94:	18c7883a 	add	r3,r3,r3
10100f98:	29400e04 	addi	r5,r5,56
10100f9c:	18c7883a 	add	r3,r3,r3
10100fa0:	18c7883a 	add	r3,r3,r3
10100fa4:	1909883a 	add	r4,r3,r4
10100fa8:	20c00017 	ldw	r3,0(r4)
10100fac:	01c40474 	movhi	r7,4113
10100fb0:	213ffe04 	addi	r4,r4,-8
10100fb4:	39c17604 	addi	r7,r7,1496
10100fb8:	20c04426 	beq	r4,r3,101010cc <_free_r+0x258>
10100fbc:	01ffff04 	movi	r7,-4
10100fc0:	19400117 	ldw	r5,4(r3)
10100fc4:	29ca703a 	and	r5,r5,r7
10100fc8:	1140022e 	bgeu	r2,r5,10100fd4 <_free_r+0x160>
10100fcc:	18c00217 	ldw	r3,8(r3)
10100fd0:	20fffb1e 	bne	r4,r3,10100fc0 <_free_r+0x14c>
10100fd4:	19000317 	ldw	r4,12(r3)
10100fd8:	31000315 	stw	r4,12(r6)
10100fdc:	30c00215 	stw	r3,8(r6)
10100fe0:	21800215 	stw	r6,8(r4)
10100fe4:	19800315 	stw	r6,12(r3)
10100fe8:	003fde06 	br	10100f64 <_free_r+0xf0>
10100fec:	29c00217 	ldw	r7,8(r5)
10100ff0:	10c5883a 	add	r2,r2,r3
10100ff4:	00c40474 	movhi	r3,4113
10100ff8:	18c17804 	addi	r3,r3,1504
10100ffc:	38c03b26 	beq	r7,r3,101010ec <_free_r+0x278>
10101000:	2a000317 	ldw	r8,12(r5)
10101004:	11400054 	ori	r5,r2,1
10101008:	3087883a 	add	r3,r6,r2
1010100c:	3a000315 	stw	r8,12(r7)
10101010:	41c00215 	stw	r7,8(r8)
10101014:	31400115 	stw	r5,4(r6)
10101018:	18800015 	stw	r2,0(r3)
1010101c:	003fbd06 	br	10100f14 <_free_r+0xa0>
10101020:	39c0004c 	andi	r7,r7,1
10101024:	10c5883a 	add	r2,r2,r3
10101028:	3800071e 	bne	r7,zero,10101048 <_free_r+0x1d4>
1010102c:	81fffe17 	ldw	r7,-8(r16)
10101030:	31cdc83a 	sub	r6,r6,r7
10101034:	30c00317 	ldw	r3,12(r6)
10101038:	31400217 	ldw	r5,8(r6)
1010103c:	11c5883a 	add	r2,r2,r7
10101040:	28c00315 	stw	r3,12(r5)
10101044:	19400215 	stw	r5,8(r3)
10101048:	10c00054 	ori	r3,r2,1
1010104c:	30c00115 	stw	r3,4(r6)
10101050:	00c40474 	movhi	r3,4113
10101054:	18c71b04 	addi	r3,r3,7276
10101058:	18c00017 	ldw	r3,0(r3)
1010105c:	21800215 	stw	r6,8(r4)
10101060:	10ffc036 	bltu	r2,r3,10100f64 <_free_r+0xf0>
10101064:	00840474 	movhi	r2,4113
10101068:	108de704 	addi	r2,r2,14236
1010106c:	11400017 	ldw	r5,0(r2)
10101070:	8809883a 	mov	r4,r17
10101074:	0100d500 	call	10100d50 <_malloc_trim_r>
10101078:	003fba06 	br	10100f64 <_free_r+0xf0>
1010107c:	28c9883a 	add	r4,r5,r3
10101080:	21000117 	ldw	r4,4(r4)
10101084:	2100004c 	andi	r4,r4,1
10101088:	2000391e 	bne	r4,zero,10101170 <_free_r+0x2fc>
1010108c:	29c00217 	ldw	r7,8(r5)
10101090:	29000317 	ldw	r4,12(r5)
10101094:	1885883a 	add	r2,r3,r2
10101098:	10c00054 	ori	r3,r2,1
1010109c:	39000315 	stw	r4,12(r7)
101010a0:	21c00215 	stw	r7,8(r4)
101010a4:	30c00115 	stw	r3,4(r6)
101010a8:	308d883a 	add	r6,r6,r2
101010ac:	30800015 	stw	r2,0(r6)
101010b0:	003fac06 	br	10100f64 <_free_r+0xf0>
101010b4:	00c00504 	movi	r3,20
101010b8:	19401536 	bltu	r3,r5,10101110 <_free_r+0x29c>
101010bc:	28c01704 	addi	r3,r5,92
101010c0:	18c7883a 	add	r3,r3,r3
101010c4:	294016c4 	addi	r5,r5,91
101010c8:	003fb406 	br	10100f9c <_free_r+0x128>
101010cc:	280bd0ba 	srai	r5,r5,2
101010d0:	00c00044 	movi	r3,1
101010d4:	38800117 	ldw	r2,4(r7)
101010d8:	194a983a 	sll	r5,r3,r5
101010dc:	2007883a 	mov	r3,r4
101010e0:	2884b03a 	or	r2,r5,r2
101010e4:	38800115 	stw	r2,4(r7)
101010e8:	003fbb06 	br	10100fd8 <_free_r+0x164>
101010ec:	21800515 	stw	r6,20(r4)
101010f0:	21800415 	stw	r6,16(r4)
101010f4:	10c00054 	ori	r3,r2,1
101010f8:	31c00315 	stw	r7,12(r6)
101010fc:	31c00215 	stw	r7,8(r6)
10101100:	30c00115 	stw	r3,4(r6)
10101104:	308d883a 	add	r6,r6,r2
10101108:	30800015 	stw	r2,0(r6)
1010110c:	003f9506 	br	10100f64 <_free_r+0xf0>
10101110:	00c01504 	movi	r3,84
10101114:	19400536 	bltu	r3,r5,1010112c <_free_r+0x2b8>
10101118:	100ad33a 	srli	r5,r2,12
1010111c:	28c01bc4 	addi	r3,r5,111
10101120:	18c7883a 	add	r3,r3,r3
10101124:	29401b84 	addi	r5,r5,110
10101128:	003f9c06 	br	10100f9c <_free_r+0x128>
1010112c:	00c05504 	movi	r3,340
10101130:	19400536 	bltu	r3,r5,10101148 <_free_r+0x2d4>
10101134:	100ad3fa 	srli	r5,r2,15
10101138:	28c01e04 	addi	r3,r5,120
1010113c:	18c7883a 	add	r3,r3,r3
10101140:	29401dc4 	addi	r5,r5,119
10101144:	003f9506 	br	10100f9c <_free_r+0x128>
10101148:	00c15504 	movi	r3,1364
1010114c:	19400536 	bltu	r3,r5,10101164 <_free_r+0x2f0>
10101150:	100ad4ba 	srli	r5,r2,18
10101154:	28c01f44 	addi	r3,r5,125
10101158:	18c7883a 	add	r3,r3,r3
1010115c:	29401f04 	addi	r5,r5,124
10101160:	003f8e06 	br	10100f9c <_free_r+0x128>
10101164:	00c03f84 	movi	r3,254
10101168:	01401f84 	movi	r5,126
1010116c:	003f8b06 	br	10100f9c <_free_r+0x128>
10101170:	10c00054 	ori	r3,r2,1
10101174:	30c00115 	stw	r3,4(r6)
10101178:	308d883a 	add	r6,r6,r2
1010117c:	30800015 	stw	r2,0(r6)
10101180:	003f7806 	br	10100f64 <_free_r+0xf0>

10101184 <_fseek_r>:
10101184:	01011a41 	jmpi	101011a4 <_fseeko_r>

10101188 <fseek>:
10101188:	00840474 	movhi	r2,4113
1010118c:	10871904 	addi	r2,r2,7268
10101190:	300f883a 	mov	r7,r6
10101194:	280d883a 	mov	r6,r5
10101198:	200b883a 	mov	r5,r4
1010119c:	11000017 	ldw	r4,0(r2)
101011a0:	01011a41 	jmpi	101011a4 <_fseeko_r>

101011a4 <_fseeko_r>:
101011a4:	deffe804 	addi	sp,sp,-96
101011a8:	dd401415 	stw	r21,80(sp)
101011ac:	dc801115 	stw	r18,68(sp)
101011b0:	dc401015 	stw	r17,64(sp)
101011b4:	dc000f15 	stw	r16,60(sp)
101011b8:	dfc01715 	stw	ra,92(sp)
101011bc:	ddc01615 	stw	r23,88(sp)
101011c0:	dd801515 	stw	r22,84(sp)
101011c4:	dd001315 	stw	r20,76(sp)
101011c8:	dcc01215 	stw	r19,72(sp)
101011cc:	2023883a 	mov	r17,r4
101011d0:	2821883a 	mov	r16,r5
101011d4:	302b883a 	mov	r21,r6
101011d8:	3825883a 	mov	r18,r7
101011dc:	20000226 	beq	r4,zero,101011e8 <_fseeko_r+0x44>
101011e0:	20800e17 	ldw	r2,56(r4)
101011e4:	10005a26 	beq	r2,zero,10101350 <_fseeko_r+0x1ac>
101011e8:	8080030b 	ldhu	r2,12(r16)
101011ec:	00c04204 	movi	r3,264
101011f0:	1080420c 	andi	r2,r2,264
101011f4:	10c05b26 	beq	r2,r3,10101364 <_fseeko_r+0x1c0>
101011f8:	85000a17 	ldw	r20,40(r16)
101011fc:	a000f626 	beq	r20,zero,101015d8 <_fseeko_r+0x434>
10101200:	00800044 	movi	r2,1
10101204:	90803e26 	beq	r18,r2,10101300 <_fseeko_r+0x15c>
10101208:	00800084 	movi	r2,2
1010120c:	90801026 	beq	r18,r2,10101250 <_fseeko_r+0xac>
10101210:	90000f26 	beq	r18,zero,10101250 <_fseeko_r+0xac>
10101214:	00800584 	movi	r2,22
10101218:	88800015 	stw	r2,0(r17)
1010121c:	04ffffc4 	movi	r19,-1
10101220:	9805883a 	mov	r2,r19
10101224:	dfc01717 	ldw	ra,92(sp)
10101228:	ddc01617 	ldw	r23,88(sp)
1010122c:	dd801517 	ldw	r22,84(sp)
10101230:	dd401417 	ldw	r21,80(sp)
10101234:	dd001317 	ldw	r20,76(sp)
10101238:	dcc01217 	ldw	r19,72(sp)
1010123c:	dc801117 	ldw	r18,68(sp)
10101240:	dc401017 	ldw	r17,64(sp)
10101244:	dc000f17 	ldw	r16,60(sp)
10101248:	dec01804 	addi	sp,sp,96
1010124c:	f800283a 	ret
10101250:	80800417 	ldw	r2,16(r16)
10101254:	002f883a 	mov	r23,zero
10101258:	0027883a 	mov	r19,zero
1010125c:	1000cb26 	beq	r2,zero,1010158c <_fseeko_r+0x3e8>
10101260:	8080030b 	ldhu	r2,12(r16)
10101264:	10c2068c 	andi	r3,r2,2074
10101268:	1800071e 	bne	r3,zero,10101288 <_fseeko_r+0xe4>
1010126c:	10c1000c 	andi	r3,r2,1024
10101270:	1800451e 	bne	r3,zero,10101388 <_fseeko_r+0x1e4>
10101274:	00c40434 	movhi	r3,4112
10101278:	18ca2504 	addi	r3,r3,10388
1010127c:	a0c0b726 	beq	r20,r3,1010155c <_fseeko_r+0x3b8>
10101280:	10820014 	ori	r2,r2,2048
10101284:	8080030d 	sth	r2,12(r16)
10101288:	800b883a 	mov	r5,r16
1010128c:	8809883a 	mov	r4,r17
10101290:	01007cc0 	call	101007cc <_fflush_r>
10101294:	1027883a 	mov	r19,r2
10101298:	103fe01e 	bne	r2,zero,1010121c <_fseeko_r+0x78>
1010129c:	81400717 	ldw	r5,28(r16)
101012a0:	900f883a 	mov	r7,r18
101012a4:	a80d883a 	mov	r6,r21
101012a8:	8809883a 	mov	r4,r17
101012ac:	a03ee83a 	callr	r20
101012b0:	00ffffc4 	movi	r3,-1
101012b4:	10ffd926 	beq	r2,r3,1010121c <_fseeko_r+0x78>
101012b8:	81400c17 	ldw	r5,48(r16)
101012bc:	28000526 	beq	r5,zero,101012d4 <_fseeko_r+0x130>
101012c0:	80801004 	addi	r2,r16,64
101012c4:	28800226 	beq	r5,r2,101012d0 <_fseeko_r+0x12c>
101012c8:	8809883a 	mov	r4,r17
101012cc:	0100e740 	call	10100e74 <_free_r>
101012d0:	80000c15 	stw	zero,48(r16)
101012d4:	8080030b 	ldhu	r2,12(r16)
101012d8:	80c00417 	ldw	r3,16(r16)
101012dc:	80000115 	stw	zero,4(r16)
101012e0:	10bdf7cc 	andi	r2,r2,63455
101012e4:	80c00015 	stw	r3,0(r16)
101012e8:	8080030d 	sth	r2,12(r16)
101012ec:	01800204 	movi	r6,8
101012f0:	000b883a 	mov	r5,zero
101012f4:	81001704 	addi	r4,r16,92
101012f8:	01022b00 	call	101022b0 <memset>
101012fc:	003fc806 	br	10101220 <_fseeko_r+0x7c>
10101300:	800b883a 	mov	r5,r16
10101304:	8809883a 	mov	r4,r17
10101308:	01007cc0 	call	101007cc <_fflush_r>
1010130c:	8080030b 	ldhu	r2,12(r16)
10101310:	10c4000c 	andi	r3,r2,4096
10101314:	18008726 	beq	r3,zero,10101534 <_fseeko_r+0x390>
10101318:	84c01417 	ldw	r19,80(r16)
1010131c:	10c0010c 	andi	r3,r2,4
10101320:	1800431e 	bne	r3,zero,10101430 <_fseeko_r+0x28c>
10101324:	1080020c 	andi	r2,r2,8
10101328:	10008026 	beq	r2,zero,1010152c <_fseeko_r+0x388>
1010132c:	80c00017 	ldw	r3,0(r16)
10101330:	80800417 	ldw	r2,16(r16)
10101334:	18000226 	beq	r3,zero,10101340 <_fseeko_r+0x19c>
10101338:	1887c83a 	sub	r3,r3,r2
1010133c:	98e7883a 	add	r19,r19,r3
10101340:	aceb883a 	add	r21,r21,r19
10101344:	05c00044 	movi	r23,1
10101348:	0025883a 	mov	r18,zero
1010134c:	003fc306 	br	1010125c <_fseeko_r+0xb8>
10101350:	0100ba80 	call	10100ba8 <__sinit>
10101354:	8080030b 	ldhu	r2,12(r16)
10101358:	00c04204 	movi	r3,264
1010135c:	1080420c 	andi	r2,r2,264
10101360:	10ffa51e 	bne	r2,r3,101011f8 <_fseeko_r+0x54>
10101364:	800b883a 	mov	r5,r16
10101368:	8809883a 	mov	r4,r17
1010136c:	01007cc0 	call	101007cc <_fflush_r>
10101370:	003fa106 	br	101011f8 <_fseeko_r+0x54>
10101374:	8080030b 	ldhu	r2,12(r16)
10101378:	00c10004 	movi	r3,1024
1010137c:	80c01315 	stw	r3,76(r16)
10101380:	10c4b03a 	or	r2,r2,r3
10101384:	8080030d 	sth	r2,12(r16)
10101388:	9000311e 	bne	r18,zero,10101450 <_fseeko_r+0x2ac>
1010138c:	a82d883a 	mov	r22,r21
10101390:	b800371e 	bne	r23,zero,10101470 <_fseeko_r+0x2cc>
10101394:	8080030b 	ldhu	r2,12(r16)
10101398:	1084000c 	andi	r2,r2,4096
1010139c:	10007f26 	beq	r2,zero,1010159c <_fseeko_r+0x3f8>
101013a0:	80801417 	ldw	r2,80(r16)
101013a4:	81800117 	ldw	r6,4(r16)
101013a8:	81400c17 	ldw	r5,48(r16)
101013ac:	11a7c83a 	sub	r19,r2,r6
101013b0:	28008226 	beq	r5,zero,101015bc <_fseeko_r+0x418>
101013b4:	81c00f17 	ldw	r7,60(r16)
101013b8:	99e7c83a 	sub	r19,r19,r7
101013bc:	81000e17 	ldw	r4,56(r16)
101013c0:	80800417 	ldw	r2,16(r16)
101013c4:	99a7883a 	add	r19,r19,r6
101013c8:	2087c83a 	sub	r3,r4,r2
101013cc:	98e7c83a 	sub	r19,r19,r3
101013d0:	38c7883a 	add	r3,r7,r3
101013d4:	b4c02b16 	blt	r22,r19,10101484 <_fseeko_r+0x2e0>
101013d8:	98c9883a 	add	r4,r19,r3
101013dc:	b100292e 	bgeu	r22,r4,10101484 <_fseeko_r+0x2e0>
101013e0:	b4e7c83a 	sub	r19,r22,r19
101013e4:	14c5883a 	add	r2,r2,r19
101013e8:	1ce7c83a 	sub	r19,r3,r19
101013ec:	80800015 	stw	r2,0(r16)
101013f0:	84c00115 	stw	r19,4(r16)
101013f4:	28000526 	beq	r5,zero,1010140c <_fseeko_r+0x268>
101013f8:	80801004 	addi	r2,r16,64
101013fc:	28800226 	beq	r5,r2,10101408 <_fseeko_r+0x264>
10101400:	8809883a 	mov	r4,r17
10101404:	0100e740 	call	10100e74 <_free_r>
10101408:	80000c15 	stw	zero,48(r16)
1010140c:	8080030b 	ldhu	r2,12(r16)
10101410:	01800204 	movi	r6,8
10101414:	000b883a 	mov	r5,zero
10101418:	10bff7cc 	andi	r2,r2,65503
1010141c:	8080030d 	sth	r2,12(r16)
10101420:	81001704 	addi	r4,r16,92
10101424:	01022b00 	call	101022b0 <memset>
10101428:	0027883a 	mov	r19,zero
1010142c:	003f7c06 	br	10101220 <_fseeko_r+0x7c>
10101430:	80c00117 	ldw	r3,4(r16)
10101434:	80800c17 	ldw	r2,48(r16)
10101438:	98e7c83a 	sub	r19,r19,r3
1010143c:	10003b26 	beq	r2,zero,1010152c <_fseeko_r+0x388>
10101440:	80c00f17 	ldw	r3,60(r16)
10101444:	80800417 	ldw	r2,16(r16)
10101448:	98e7c83a 	sub	r19,r19,r3
1010144c:	003fbc06 	br	10101340 <_fseeko_r+0x19c>
10101450:	8140038f 	ldh	r5,14(r16)
10101454:	d80d883a 	mov	r6,sp
10101458:	8809883a 	mov	r4,r17
1010145c:	01016040 	call	10101604 <_fstat_r>
10101460:	103f891e 	bne	r2,zero,10101288 <_fseeko_r+0xe4>
10101464:	dd800417 	ldw	r22,16(sp)
10101468:	adad883a 	add	r22,r21,r22
1010146c:	b83fc926 	beq	r23,zero,10101394 <_fseeko_r+0x1f0>
10101470:	81400c17 	ldw	r5,48(r16)
10101474:	81800117 	ldw	r6,4(r16)
10101478:	28005026 	beq	r5,zero,101015bc <_fseeko_r+0x418>
1010147c:	81c00f17 	ldw	r7,60(r16)
10101480:	003fce06 	br	101013bc <_fseeko_r+0x218>
10101484:	84c01317 	ldw	r19,76(r16)
10101488:	81400717 	ldw	r5,28(r16)
1010148c:	000f883a 	mov	r7,zero
10101490:	04e7c83a 	sub	r19,zero,r19
10101494:	9da6703a 	and	r19,r19,r22
10101498:	980d883a 	mov	r6,r19
1010149c:	8809883a 	mov	r4,r17
101014a0:	a03ee83a 	callr	r20
101014a4:	00ffffc4 	movi	r3,-1
101014a8:	10ff7726 	beq	r2,r3,10101288 <_fseeko_r+0xe4>
101014ac:	80800417 	ldw	r2,16(r16)
101014b0:	81400c17 	ldw	r5,48(r16)
101014b4:	80000115 	stw	zero,4(r16)
101014b8:	80800015 	stw	r2,0(r16)
101014bc:	28000526 	beq	r5,zero,101014d4 <_fseeko_r+0x330>
101014c0:	80801004 	addi	r2,r16,64
101014c4:	28800226 	beq	r5,r2,101014d0 <_fseeko_r+0x32c>
101014c8:	8809883a 	mov	r4,r17
101014cc:	0100e740 	call	10100e74 <_free_r>
101014d0:	80000c15 	stw	zero,48(r16)
101014d4:	8080030b 	ldhu	r2,12(r16)
101014d8:	b4e7c83a 	sub	r19,r22,r19
101014dc:	10bff7cc 	andi	r2,r2,65503
101014e0:	8080030d 	sth	r2,12(r16)
101014e4:	98000b26 	beq	r19,zero,10101514 <_fseeko_r+0x370>
101014e8:	800b883a 	mov	r5,r16
101014ec:	8809883a 	mov	r4,r17
101014f0:	01025940 	call	10102594 <__srefill_r>
101014f4:	103f641e 	bne	r2,zero,10101288 <_fseeko_r+0xe4>
101014f8:	80800117 	ldw	r2,4(r16)
101014fc:	14ff6236 	bltu	r2,r19,10101288 <_fseeko_r+0xe4>
10101500:	80c00017 	ldw	r3,0(r16)
10101504:	14c5c83a 	sub	r2,r2,r19
10101508:	80800115 	stw	r2,4(r16)
1010150c:	1ce7883a 	add	r19,r3,r19
10101510:	84c00015 	stw	r19,0(r16)
10101514:	01800204 	movi	r6,8
10101518:	000b883a 	mov	r5,zero
1010151c:	81001704 	addi	r4,r16,92
10101520:	01022b00 	call	101022b0 <memset>
10101524:	0027883a 	mov	r19,zero
10101528:	003f3d06 	br	10101220 <_fseeko_r+0x7c>
1010152c:	80800417 	ldw	r2,16(r16)
10101530:	003f8306 	br	10101340 <_fseeko_r+0x19c>
10101534:	81400717 	ldw	r5,28(r16)
10101538:	900f883a 	mov	r7,r18
1010153c:	000d883a 	mov	r6,zero
10101540:	8809883a 	mov	r4,r17
10101544:	a03ee83a 	callr	r20
10101548:	1027883a 	mov	r19,r2
1010154c:	00bfffc4 	movi	r2,-1
10101550:	98bf3226 	beq	r19,r2,1010121c <_fseeko_r+0x78>
10101554:	8080030b 	ldhu	r2,12(r16)
10101558:	003f7006 	br	1010131c <_fseeko_r+0x178>
1010155c:	8140038f 	ldh	r5,14(r16)
10101560:	283f4716 	blt	r5,zero,10101280 <_fseeko_r+0xdc>
10101564:	d80d883a 	mov	r6,sp
10101568:	8809883a 	mov	r4,r17
1010156c:	01016040 	call	10101604 <_fstat_r>
10101570:	1000041e 	bne	r2,zero,10101584 <_fseeko_r+0x3e0>
10101574:	d8800117 	ldw	r2,4(sp)
10101578:	00e00014 	movui	r3,32768
1010157c:	10bc000c 	andi	r2,r2,61440
10101580:	10ff7c26 	beq	r2,r3,10101374 <_fseeko_r+0x1d0>
10101584:	8080030b 	ldhu	r2,12(r16)
10101588:	003f3d06 	br	10101280 <_fseeko_r+0xdc>
1010158c:	800b883a 	mov	r5,r16
10101590:	8809883a 	mov	r4,r17
10101594:	01018e80 	call	101018e8 <__smakebuf_r>
10101598:	003f3106 	br	10101260 <_fseeko_r+0xbc>
1010159c:	81400717 	ldw	r5,28(r16)
101015a0:	01c00044 	movi	r7,1
101015a4:	000d883a 	mov	r6,zero
101015a8:	8809883a 	mov	r4,r17
101015ac:	a03ee83a 	callr	r20
101015b0:	00ffffc4 	movi	r3,-1
101015b4:	10ff7b1e 	bne	r2,r3,101013a4 <_fseeko_r+0x200>
101015b8:	003f3306 	br	10101288 <_fseeko_r+0xe4>
101015bc:	80c00017 	ldw	r3,0(r16)
101015c0:	80800417 	ldw	r2,16(r16)
101015c4:	000b883a 	mov	r5,zero
101015c8:	1887c83a 	sub	r3,r3,r2
101015cc:	98e7c83a 	sub	r19,r19,r3
101015d0:	30c7883a 	add	r3,r6,r3
101015d4:	003f7f06 	br	101013d4 <_fseeko_r+0x230>
101015d8:	00800744 	movi	r2,29
101015dc:	88800015 	stw	r2,0(r17)
101015e0:	04ffffc4 	movi	r19,-1
101015e4:	003f0e06 	br	10101220 <_fseeko_r+0x7c>

101015e8 <fseeko>:
101015e8:	00840474 	movhi	r2,4113
101015ec:	10871904 	addi	r2,r2,7268
101015f0:	300f883a 	mov	r7,r6
101015f4:	280d883a 	mov	r6,r5
101015f8:	200b883a 	mov	r5,r4
101015fc:	11000017 	ldw	r4,0(r2)
10101600:	01011a41 	jmpi	101011a4 <_fseeko_r>

10101604 <_fstat_r>:
10101604:	defffd04 	addi	sp,sp,-12
10101608:	2805883a 	mov	r2,r5
1010160c:	dc000015 	stw	r16,0(sp)
10101610:	04040474 	movhi	r16,4113
10101614:	dc400115 	stw	r17,4(sp)
10101618:	840de404 	addi	r16,r16,14224
1010161c:	2023883a 	mov	r17,r4
10101620:	300b883a 	mov	r5,r6
10101624:	1009883a 	mov	r4,r2
10101628:	dfc00215 	stw	ra,8(sp)
1010162c:	80000015 	stw	zero,0(r16)
10101630:	010d9140 	call	1010d914 <fstat>
10101634:	00ffffc4 	movi	r3,-1
10101638:	10c00526 	beq	r2,r3,10101650 <_fstat_r+0x4c>
1010163c:	dfc00217 	ldw	ra,8(sp)
10101640:	dc400117 	ldw	r17,4(sp)
10101644:	dc000017 	ldw	r16,0(sp)
10101648:	dec00304 	addi	sp,sp,12
1010164c:	f800283a 	ret
10101650:	80c00017 	ldw	r3,0(r16)
10101654:	183ff926 	beq	r3,zero,1010163c <_fstat_r+0x38>
10101658:	88c00015 	stw	r3,0(r17)
1010165c:	003ff706 	br	1010163c <_fstat_r+0x38>

10101660 <_fwalk>:
10101660:	defff704 	addi	sp,sp,-36
10101664:	dd000415 	stw	r20,16(sp)
10101668:	dfc00815 	stw	ra,32(sp)
1010166c:	ddc00715 	stw	r23,28(sp)
10101670:	dd800615 	stw	r22,24(sp)
10101674:	dd400515 	stw	r21,20(sp)
10101678:	dcc00315 	stw	r19,12(sp)
1010167c:	dc800215 	stw	r18,8(sp)
10101680:	dc400115 	stw	r17,4(sp)
10101684:	dc000015 	stw	r16,0(sp)
10101688:	2500b804 	addi	r20,r4,736
1010168c:	a0002326 	beq	r20,zero,1010171c <_fwalk+0xbc>
10101690:	282b883a 	mov	r21,r5
10101694:	002f883a 	mov	r23,zero
10101698:	05800044 	movi	r22,1
1010169c:	04ffffc4 	movi	r19,-1
101016a0:	a4400117 	ldw	r17,4(r20)
101016a4:	a4800217 	ldw	r18,8(r20)
101016a8:	8c7fffc4 	addi	r17,r17,-1
101016ac:	88000d16 	blt	r17,zero,101016e4 <_fwalk+0x84>
101016b0:	94000304 	addi	r16,r18,12
101016b4:	94800384 	addi	r18,r18,14
101016b8:	8080000b 	ldhu	r2,0(r16)
101016bc:	8c7fffc4 	addi	r17,r17,-1
101016c0:	813ffd04 	addi	r4,r16,-12
101016c4:	b080042e 	bgeu	r22,r2,101016d8 <_fwalk+0x78>
101016c8:	9080000f 	ldh	r2,0(r18)
101016cc:	14c00226 	beq	r2,r19,101016d8 <_fwalk+0x78>
101016d0:	a83ee83a 	callr	r21
101016d4:	b8aeb03a 	or	r23,r23,r2
101016d8:	84001a04 	addi	r16,r16,104
101016dc:	94801a04 	addi	r18,r18,104
101016e0:	8cfff51e 	bne	r17,r19,101016b8 <_fwalk+0x58>
101016e4:	a5000017 	ldw	r20,0(r20)
101016e8:	a03fed1e 	bne	r20,zero,101016a0 <_fwalk+0x40>
101016ec:	b805883a 	mov	r2,r23
101016f0:	dfc00817 	ldw	ra,32(sp)
101016f4:	ddc00717 	ldw	r23,28(sp)
101016f8:	dd800617 	ldw	r22,24(sp)
101016fc:	dd400517 	ldw	r21,20(sp)
10101700:	dd000417 	ldw	r20,16(sp)
10101704:	dcc00317 	ldw	r19,12(sp)
10101708:	dc800217 	ldw	r18,8(sp)
1010170c:	dc400117 	ldw	r17,4(sp)
10101710:	dc000017 	ldw	r16,0(sp)
10101714:	dec00904 	addi	sp,sp,36
10101718:	f800283a 	ret
1010171c:	002f883a 	mov	r23,zero
10101720:	003ff206 	br	101016ec <_fwalk+0x8c>

10101724 <_fwalk_reent>:
10101724:	defff704 	addi	sp,sp,-36
10101728:	dd000415 	stw	r20,16(sp)
1010172c:	dfc00815 	stw	ra,32(sp)
10101730:	ddc00715 	stw	r23,28(sp)
10101734:	dd800615 	stw	r22,24(sp)
10101738:	dd400515 	stw	r21,20(sp)
1010173c:	dcc00315 	stw	r19,12(sp)
10101740:	dc800215 	stw	r18,8(sp)
10101744:	dc400115 	stw	r17,4(sp)
10101748:	dc000015 	stw	r16,0(sp)
1010174c:	2500b804 	addi	r20,r4,736
10101750:	a0002326 	beq	r20,zero,101017e0 <_fwalk_reent+0xbc>
10101754:	282b883a 	mov	r21,r5
10101758:	2027883a 	mov	r19,r4
1010175c:	002f883a 	mov	r23,zero
10101760:	05800044 	movi	r22,1
10101764:	04bfffc4 	movi	r18,-1
10101768:	a4400117 	ldw	r17,4(r20)
1010176c:	a4000217 	ldw	r16,8(r20)
10101770:	8c7fffc4 	addi	r17,r17,-1
10101774:	88000c16 	blt	r17,zero,101017a8 <_fwalk_reent+0x84>
10101778:	84000304 	addi	r16,r16,12
1010177c:	8080000b 	ldhu	r2,0(r16)
10101780:	8c7fffc4 	addi	r17,r17,-1
10101784:	817ffd04 	addi	r5,r16,-12
10101788:	b080052e 	bgeu	r22,r2,101017a0 <_fwalk_reent+0x7c>
1010178c:	8080008f 	ldh	r2,2(r16)
10101790:	9809883a 	mov	r4,r19
10101794:	14800226 	beq	r2,r18,101017a0 <_fwalk_reent+0x7c>
10101798:	a83ee83a 	callr	r21
1010179c:	b8aeb03a 	or	r23,r23,r2
101017a0:	84001a04 	addi	r16,r16,104
101017a4:	8cbff51e 	bne	r17,r18,1010177c <_fwalk_reent+0x58>
101017a8:	a5000017 	ldw	r20,0(r20)
101017ac:	a03fee1e 	bne	r20,zero,10101768 <_fwalk_reent+0x44>
101017b0:	b805883a 	mov	r2,r23
101017b4:	dfc00817 	ldw	ra,32(sp)
101017b8:	ddc00717 	ldw	r23,28(sp)
101017bc:	dd800617 	ldw	r22,24(sp)
101017c0:	dd400517 	ldw	r21,20(sp)
101017c4:	dd000417 	ldw	r20,16(sp)
101017c8:	dcc00317 	ldw	r19,12(sp)
101017cc:	dc800217 	ldw	r18,8(sp)
101017d0:	dc400117 	ldw	r17,4(sp)
101017d4:	dc000017 	ldw	r16,0(sp)
101017d8:	dec00904 	addi	sp,sp,36
101017dc:	f800283a 	ret
101017e0:	002f883a 	mov	r23,zero
101017e4:	003ff206 	br	101017b0 <_fwalk_reent+0x8c>

101017e8 <_fwrite_r>:
101017e8:	defff504 	addi	sp,sp,-44
101017ec:	dc800815 	stw	r18,32(sp)
101017f0:	39a5383a 	mul	r18,r7,r6
101017f4:	d8800304 	addi	r2,sp,12
101017f8:	d8800015 	stw	r2,0(sp)
101017fc:	00800044 	movi	r2,1
10101800:	dcc00915 	stw	r19,36(sp)
10101804:	dc400715 	stw	r17,28(sp)
10101808:	dc000615 	stw	r16,24(sp)
1010180c:	d9400315 	stw	r5,12(sp)
10101810:	dfc00a15 	stw	ra,40(sp)
10101814:	dc800415 	stw	r18,16(sp)
10101818:	dc800215 	stw	r18,8(sp)
1010181c:	d8800115 	stw	r2,4(sp)
10101820:	3027883a 	mov	r19,r6
10101824:	3821883a 	mov	r16,r7
10101828:	2023883a 	mov	r17,r4
1010182c:	d9400b17 	ldw	r5,44(sp)
10101830:	20000226 	beq	r4,zero,1010183c <_fwrite_r+0x54>
10101834:	20800e17 	ldw	r2,56(r4)
10101838:	10001a26 	beq	r2,zero,101018a4 <_fwrite_r+0xbc>
1010183c:	2880030b 	ldhu	r2,12(r5)
10101840:	10c8000c 	andi	r3,r2,8192
10101844:	1800061e 	bne	r3,zero,10101860 <_fwrite_r+0x78>
10101848:	29001917 	ldw	r4,100(r5)
1010184c:	00f7ffc4 	movi	r3,-8193
10101850:	10880014 	ori	r2,r2,8192
10101854:	20c6703a 	and	r3,r4,r3
10101858:	2880030d 	sth	r2,12(r5)
1010185c:	28c01915 	stw	r3,100(r5)
10101860:	d80d883a 	mov	r6,sp
10101864:	8809883a 	mov	r4,r17
10101868:	010679c0 	call	1010679c <__sfvwrite_r>
1010186c:	10000b26 	beq	r2,zero,1010189c <_fwrite_r+0xb4>
10101870:	d9000217 	ldw	r4,8(sp)
10101874:	980b883a 	mov	r5,r19
10101878:	9109c83a 	sub	r4,r18,r4
1010187c:	010b07c0 	call	1010b07c <__udivsi3>
10101880:	dfc00a17 	ldw	ra,40(sp)
10101884:	dcc00917 	ldw	r19,36(sp)
10101888:	dc800817 	ldw	r18,32(sp)
1010188c:	dc400717 	ldw	r17,28(sp)
10101890:	dc000617 	ldw	r16,24(sp)
10101894:	dec00b04 	addi	sp,sp,44
10101898:	f800283a 	ret
1010189c:	8005883a 	mov	r2,r16
101018a0:	003ff706 	br	10101880 <_fwrite_r+0x98>
101018a4:	d9400515 	stw	r5,20(sp)
101018a8:	0100ba80 	call	10100ba8 <__sinit>
101018ac:	d9400517 	ldw	r5,20(sp)
101018b0:	003fe206 	br	1010183c <_fwrite_r+0x54>

101018b4 <fwrite>:
101018b4:	defffe04 	addi	sp,sp,-8
101018b8:	00840474 	movhi	r2,4113
101018bc:	d9c00015 	stw	r7,0(sp)
101018c0:	10871904 	addi	r2,r2,7268
101018c4:	300f883a 	mov	r7,r6
101018c8:	280d883a 	mov	r6,r5
101018cc:	200b883a 	mov	r5,r4
101018d0:	11000017 	ldw	r4,0(r2)
101018d4:	dfc00115 	stw	ra,4(sp)
101018d8:	01017e80 	call	101017e8 <_fwrite_r>
101018dc:	dfc00117 	ldw	ra,4(sp)
101018e0:	dec00204 	addi	sp,sp,8
101018e4:	f800283a 	ret

101018e8 <__smakebuf_r>:
101018e8:	2880030b 	ldhu	r2,12(r5)
101018ec:	10c0008c 	andi	r3,r2,2
101018f0:	1800411e 	bne	r3,zero,101019f8 <__smakebuf_r+0x110>
101018f4:	deffec04 	addi	sp,sp,-80
101018f8:	dc000f15 	stw	r16,60(sp)
101018fc:	2821883a 	mov	r16,r5
10101900:	2940038f 	ldh	r5,14(r5)
10101904:	dc401015 	stw	r17,64(sp)
10101908:	dfc01315 	stw	ra,76(sp)
1010190c:	dcc01215 	stw	r19,72(sp)
10101910:	dc801115 	stw	r18,68(sp)
10101914:	2023883a 	mov	r17,r4
10101918:	28001c16 	blt	r5,zero,1010198c <__smakebuf_r+0xa4>
1010191c:	d80d883a 	mov	r6,sp
10101920:	01016040 	call	10101604 <_fstat_r>
10101924:	10001816 	blt	r2,zero,10101988 <__smakebuf_r+0xa0>
10101928:	d8800117 	ldw	r2,4(sp)
1010192c:	00e00014 	movui	r3,32768
10101930:	10bc000c 	andi	r2,r2,61440
10101934:	14c80020 	cmpeqi	r19,r2,8192
10101938:	10c03726 	beq	r2,r3,10101a18 <__smakebuf_r+0x130>
1010193c:	80c0030b 	ldhu	r3,12(r16)
10101940:	18c20014 	ori	r3,r3,2048
10101944:	80c0030d 	sth	r3,12(r16)
10101948:	00c80004 	movi	r3,8192
1010194c:	10c0521e 	bne	r2,r3,10101a98 <__smakebuf_r+0x1b0>
10101950:	8140038f 	ldh	r5,14(r16)
10101954:	8809883a 	mov	r4,r17
10101958:	0106c580 	call	10106c58 <_isatty_r>
1010195c:	10004c26 	beq	r2,zero,10101a90 <__smakebuf_r+0x1a8>
10101960:	8080030b 	ldhu	r2,12(r16)
10101964:	80c010c4 	addi	r3,r16,67
10101968:	80c00015 	stw	r3,0(r16)
1010196c:	10800054 	ori	r2,r2,1
10101970:	8080030d 	sth	r2,12(r16)
10101974:	00800044 	movi	r2,1
10101978:	80c00415 	stw	r3,16(r16)
1010197c:	80800515 	stw	r2,20(r16)
10101980:	04810004 	movi	r18,1024
10101984:	00000706 	br	101019a4 <__smakebuf_r+0xbc>
10101988:	8080030b 	ldhu	r2,12(r16)
1010198c:	10c0200c 	andi	r3,r2,128
10101990:	18001f1e 	bne	r3,zero,10101a10 <__smakebuf_r+0x128>
10101994:	04810004 	movi	r18,1024
10101998:	10820014 	ori	r2,r2,2048
1010199c:	8080030d 	sth	r2,12(r16)
101019a0:	0027883a 	mov	r19,zero
101019a4:	900b883a 	mov	r5,r18
101019a8:	8809883a 	mov	r4,r17
101019ac:	0101aa40 	call	10101aa4 <_malloc_r>
101019b0:	10002c26 	beq	r2,zero,10101a64 <__smakebuf_r+0x17c>
101019b4:	80c0030b 	ldhu	r3,12(r16)
101019b8:	01040434 	movhi	r4,4112
101019bc:	21021804 	addi	r4,r4,2144
101019c0:	89000f15 	stw	r4,60(r17)
101019c4:	18c02014 	ori	r3,r3,128
101019c8:	80c0030d 	sth	r3,12(r16)
101019cc:	80800015 	stw	r2,0(r16)
101019d0:	80800415 	stw	r2,16(r16)
101019d4:	84800515 	stw	r18,20(r16)
101019d8:	98001a1e 	bne	r19,zero,10101a44 <__smakebuf_r+0x15c>
101019dc:	dfc01317 	ldw	ra,76(sp)
101019e0:	dcc01217 	ldw	r19,72(sp)
101019e4:	dc801117 	ldw	r18,68(sp)
101019e8:	dc401017 	ldw	r17,64(sp)
101019ec:	dc000f17 	ldw	r16,60(sp)
101019f0:	dec01404 	addi	sp,sp,80
101019f4:	f800283a 	ret
101019f8:	288010c4 	addi	r2,r5,67
101019fc:	28800015 	stw	r2,0(r5)
10101a00:	28800415 	stw	r2,16(r5)
10101a04:	00800044 	movi	r2,1
10101a08:	28800515 	stw	r2,20(r5)
10101a0c:	f800283a 	ret
10101a10:	04801004 	movi	r18,64
10101a14:	003fe006 	br	10101998 <__smakebuf_r+0xb0>
10101a18:	81000a17 	ldw	r4,40(r16)
10101a1c:	00c40434 	movhi	r3,4112
10101a20:	18ca2504 	addi	r3,r3,10388
10101a24:	20ffc51e 	bne	r4,r3,1010193c <__smakebuf_r+0x54>
10101a28:	8080030b 	ldhu	r2,12(r16)
10101a2c:	04810004 	movi	r18,1024
10101a30:	84801315 	stw	r18,76(r16)
10101a34:	1484b03a 	or	r2,r2,r18
10101a38:	8080030d 	sth	r2,12(r16)
10101a3c:	0027883a 	mov	r19,zero
10101a40:	003fd806 	br	101019a4 <__smakebuf_r+0xbc>
10101a44:	8140038f 	ldh	r5,14(r16)
10101a48:	8809883a 	mov	r4,r17
10101a4c:	0106c580 	call	10106c58 <_isatty_r>
10101a50:	103fe226 	beq	r2,zero,101019dc <__smakebuf_r+0xf4>
10101a54:	8080030b 	ldhu	r2,12(r16)
10101a58:	10800054 	ori	r2,r2,1
10101a5c:	8080030d 	sth	r2,12(r16)
10101a60:	003fde06 	br	101019dc <__smakebuf_r+0xf4>
10101a64:	8080030b 	ldhu	r2,12(r16)
10101a68:	10c0800c 	andi	r3,r2,512
10101a6c:	183fdb1e 	bne	r3,zero,101019dc <__smakebuf_r+0xf4>
10101a70:	10800094 	ori	r2,r2,2
10101a74:	80c010c4 	addi	r3,r16,67
10101a78:	8080030d 	sth	r2,12(r16)
10101a7c:	00800044 	movi	r2,1
10101a80:	80c00015 	stw	r3,0(r16)
10101a84:	80c00415 	stw	r3,16(r16)
10101a88:	80800515 	stw	r2,20(r16)
10101a8c:	003fd306 	br	101019dc <__smakebuf_r+0xf4>
10101a90:	04810004 	movi	r18,1024
10101a94:	003fc306 	br	101019a4 <__smakebuf_r+0xbc>
10101a98:	0027883a 	mov	r19,zero
10101a9c:	04810004 	movi	r18,1024
10101aa0:	003fc006 	br	101019a4 <__smakebuf_r+0xbc>

10101aa4 <_malloc_r>:
10101aa4:	defff504 	addi	sp,sp,-44
10101aa8:	dc800315 	stw	r18,12(sp)
10101aac:	dfc00a15 	stw	ra,40(sp)
10101ab0:	df000915 	stw	fp,36(sp)
10101ab4:	ddc00815 	stw	r23,32(sp)
10101ab8:	dd800715 	stw	r22,28(sp)
10101abc:	dd400615 	stw	r21,24(sp)
10101ac0:	dd000515 	stw	r20,20(sp)
10101ac4:	dcc00415 	stw	r19,16(sp)
10101ac8:	dc400215 	stw	r17,8(sp)
10101acc:	dc000115 	stw	r16,4(sp)
10101ad0:	288002c4 	addi	r2,r5,11
10101ad4:	00c00584 	movi	r3,22
10101ad8:	2025883a 	mov	r18,r4
10101adc:	18807f2e 	bgeu	r3,r2,10101cdc <_malloc_r+0x238>
10101ae0:	047ffe04 	movi	r17,-8
10101ae4:	1462703a 	and	r17,r2,r17
10101ae8:	8800a316 	blt	r17,zero,10101d78 <_malloc_r+0x2d4>
10101aec:	8940a236 	bltu	r17,r5,10101d78 <_malloc_r+0x2d4>
10101af0:	010dfbc0 	call	1010dfbc <__malloc_lock>
10101af4:	00807dc4 	movi	r2,503
10101af8:	1441e92e 	bgeu	r2,r17,101022a0 <_malloc_r+0x7fc>
10101afc:	8804d27a 	srli	r2,r17,9
10101b00:	1000a126 	beq	r2,zero,10101d88 <_malloc_r+0x2e4>
10101b04:	00c00104 	movi	r3,4
10101b08:	18811e36 	bltu	r3,r2,10101f84 <_malloc_r+0x4e0>
10101b0c:	8804d1ba 	srli	r2,r17,6
10101b10:	12000e44 	addi	r8,r2,57
10101b14:	11c00e04 	addi	r7,r2,56
10101b18:	4209883a 	add	r4,r8,r8
10101b1c:	04c40474 	movhi	r19,4113
10101b20:	2109883a 	add	r4,r4,r4
10101b24:	9cc17604 	addi	r19,r19,1496
10101b28:	2109883a 	add	r4,r4,r4
10101b2c:	9909883a 	add	r4,r19,r4
10101b30:	24000117 	ldw	r16,4(r4)
10101b34:	213ffe04 	addi	r4,r4,-8
10101b38:	24009726 	beq	r4,r16,10101d98 <_malloc_r+0x2f4>
10101b3c:	80800117 	ldw	r2,4(r16)
10101b40:	01bfff04 	movi	r6,-4
10101b44:	014003c4 	movi	r5,15
10101b48:	1184703a 	and	r2,r2,r6
10101b4c:	1447c83a 	sub	r3,r2,r17
10101b50:	28c00716 	blt	r5,r3,10101b70 <_malloc_r+0xcc>
10101b54:	1800920e 	bge	r3,zero,10101da0 <_malloc_r+0x2fc>
10101b58:	84000317 	ldw	r16,12(r16)
10101b5c:	24008e26 	beq	r4,r16,10101d98 <_malloc_r+0x2f4>
10101b60:	80800117 	ldw	r2,4(r16)
10101b64:	1184703a 	and	r2,r2,r6
10101b68:	1447c83a 	sub	r3,r2,r17
10101b6c:	28fff90e 	bge	r5,r3,10101b54 <_malloc_r+0xb0>
10101b70:	3809883a 	mov	r4,r7
10101b74:	01840474 	movhi	r6,4113
10101b78:	9c000417 	ldw	r16,16(r19)
10101b7c:	31817604 	addi	r6,r6,1496
10101b80:	32000204 	addi	r8,r6,8
10101b84:	82013426 	beq	r16,r8,10102058 <_malloc_r+0x5b4>
10101b88:	80c00117 	ldw	r3,4(r16)
10101b8c:	00bfff04 	movi	r2,-4
10101b90:	188e703a 	and	r7,r3,r2
10101b94:	3c45c83a 	sub	r2,r7,r17
10101b98:	00c003c4 	movi	r3,15
10101b9c:	18811f16 	blt	r3,r2,1010201c <_malloc_r+0x578>
10101ba0:	32000515 	stw	r8,20(r6)
10101ba4:	32000415 	stw	r8,16(r6)
10101ba8:	10007f0e 	bge	r2,zero,10101da8 <_malloc_r+0x304>
10101bac:	00807fc4 	movi	r2,511
10101bb0:	11c0fd36 	bltu	r2,r7,10101fa8 <_malloc_r+0x504>
10101bb4:	3806d0fa 	srli	r3,r7,3
10101bb8:	01c00044 	movi	r7,1
10101bbc:	30800117 	ldw	r2,4(r6)
10101bc0:	19400044 	addi	r5,r3,1
10101bc4:	294b883a 	add	r5,r5,r5
10101bc8:	1807d0ba 	srai	r3,r3,2
10101bcc:	294b883a 	add	r5,r5,r5
10101bd0:	294b883a 	add	r5,r5,r5
10101bd4:	298b883a 	add	r5,r5,r6
10101bd8:	38c6983a 	sll	r3,r7,r3
10101bdc:	29c00017 	ldw	r7,0(r5)
10101be0:	2a7ffe04 	addi	r9,r5,-8
10101be4:	1886b03a 	or	r3,r3,r2
10101be8:	82400315 	stw	r9,12(r16)
10101bec:	81c00215 	stw	r7,8(r16)
10101bf0:	30c00115 	stw	r3,4(r6)
10101bf4:	2c000015 	stw	r16,0(r5)
10101bf8:	3c000315 	stw	r16,12(r7)
10101bfc:	2005d0ba 	srai	r2,r4,2
10101c00:	01400044 	movi	r5,1
10101c04:	288a983a 	sll	r5,r5,r2
10101c08:	19406f36 	bltu	r3,r5,10101dc8 <_malloc_r+0x324>
10101c0c:	28c4703a 	and	r2,r5,r3
10101c10:	10000a1e 	bne	r2,zero,10101c3c <_malloc_r+0x198>
10101c14:	00bfff04 	movi	r2,-4
10101c18:	294b883a 	add	r5,r5,r5
10101c1c:	2088703a 	and	r4,r4,r2
10101c20:	28c4703a 	and	r2,r5,r3
10101c24:	21000104 	addi	r4,r4,4
10101c28:	1000041e 	bne	r2,zero,10101c3c <_malloc_r+0x198>
10101c2c:	294b883a 	add	r5,r5,r5
10101c30:	28c4703a 	and	r2,r5,r3
10101c34:	21000104 	addi	r4,r4,4
10101c38:	103ffc26 	beq	r2,zero,10101c2c <_malloc_r+0x188>
10101c3c:	02bfff04 	movi	r10,-4
10101c40:	024003c4 	movi	r9,15
10101c44:	21800044 	addi	r6,r4,1
10101c48:	318d883a 	add	r6,r6,r6
10101c4c:	318d883a 	add	r6,r6,r6
10101c50:	318d883a 	add	r6,r6,r6
10101c54:	998d883a 	add	r6,r19,r6
10101c58:	333ffe04 	addi	r12,r6,-8
10101c5c:	2017883a 	mov	r11,r4
10101c60:	31800104 	addi	r6,r6,4
10101c64:	34000017 	ldw	r16,0(r6)
10101c68:	31fffd04 	addi	r7,r6,-12
10101c6c:	81c0041e 	bne	r16,r7,10101c80 <_malloc_r+0x1dc>
10101c70:	0000fb06 	br	10102060 <_malloc_r+0x5bc>
10101c74:	1801030e 	bge	r3,zero,10102084 <_malloc_r+0x5e0>
10101c78:	84000317 	ldw	r16,12(r16)
10101c7c:	81c0f826 	beq	r16,r7,10102060 <_malloc_r+0x5bc>
10101c80:	80800117 	ldw	r2,4(r16)
10101c84:	1284703a 	and	r2,r2,r10
10101c88:	1447c83a 	sub	r3,r2,r17
10101c8c:	48fff90e 	bge	r9,r3,10101c74 <_malloc_r+0x1d0>
10101c90:	80800317 	ldw	r2,12(r16)
10101c94:	81000217 	ldw	r4,8(r16)
10101c98:	89400054 	ori	r5,r17,1
10101c9c:	81400115 	stw	r5,4(r16)
10101ca0:	20800315 	stw	r2,12(r4)
10101ca4:	11000215 	stw	r4,8(r2)
10101ca8:	8463883a 	add	r17,r16,r17
10101cac:	9c400515 	stw	r17,20(r19)
10101cb0:	9c400415 	stw	r17,16(r19)
10101cb4:	18800054 	ori	r2,r3,1
10101cb8:	88800115 	stw	r2,4(r17)
10101cbc:	8a000315 	stw	r8,12(r17)
10101cc0:	8a000215 	stw	r8,8(r17)
10101cc4:	88e3883a 	add	r17,r17,r3
10101cc8:	88c00015 	stw	r3,0(r17)
10101ccc:	9009883a 	mov	r4,r18
10101cd0:	010dfe00 	call	1010dfe0 <__malloc_unlock>
10101cd4:	80800204 	addi	r2,r16,8
10101cd8:	00001b06 	br	10101d48 <_malloc_r+0x2a4>
10101cdc:	04400404 	movi	r17,16
10101ce0:	89402536 	bltu	r17,r5,10101d78 <_malloc_r+0x2d4>
10101ce4:	010dfbc0 	call	1010dfbc <__malloc_lock>
10101ce8:	00800184 	movi	r2,6
10101cec:	01000084 	movi	r4,2
10101cf0:	04c40474 	movhi	r19,4113
10101cf4:	1085883a 	add	r2,r2,r2
10101cf8:	9cc17604 	addi	r19,r19,1496
10101cfc:	1085883a 	add	r2,r2,r2
10101d00:	9885883a 	add	r2,r19,r2
10101d04:	14000117 	ldw	r16,4(r2)
10101d08:	10fffe04 	addi	r3,r2,-8
10101d0c:	80c0d926 	beq	r16,r3,10102074 <_malloc_r+0x5d0>
10101d10:	80c00117 	ldw	r3,4(r16)
10101d14:	81000317 	ldw	r4,12(r16)
10101d18:	00bfff04 	movi	r2,-4
10101d1c:	1884703a 	and	r2,r3,r2
10101d20:	81400217 	ldw	r5,8(r16)
10101d24:	8085883a 	add	r2,r16,r2
10101d28:	10c00117 	ldw	r3,4(r2)
10101d2c:	29000315 	stw	r4,12(r5)
10101d30:	21400215 	stw	r5,8(r4)
10101d34:	18c00054 	ori	r3,r3,1
10101d38:	10c00115 	stw	r3,4(r2)
10101d3c:	9009883a 	mov	r4,r18
10101d40:	010dfe00 	call	1010dfe0 <__malloc_unlock>
10101d44:	80800204 	addi	r2,r16,8
10101d48:	dfc00a17 	ldw	ra,40(sp)
10101d4c:	df000917 	ldw	fp,36(sp)
10101d50:	ddc00817 	ldw	r23,32(sp)
10101d54:	dd800717 	ldw	r22,28(sp)
10101d58:	dd400617 	ldw	r21,24(sp)
10101d5c:	dd000517 	ldw	r20,20(sp)
10101d60:	dcc00417 	ldw	r19,16(sp)
10101d64:	dc800317 	ldw	r18,12(sp)
10101d68:	dc400217 	ldw	r17,8(sp)
10101d6c:	dc000117 	ldw	r16,4(sp)
10101d70:	dec00b04 	addi	sp,sp,44
10101d74:	f800283a 	ret
10101d78:	00800304 	movi	r2,12
10101d7c:	90800015 	stw	r2,0(r18)
10101d80:	0005883a 	mov	r2,zero
10101d84:	003ff006 	br	10101d48 <_malloc_r+0x2a4>
10101d88:	01002004 	movi	r4,128
10101d8c:	02001004 	movi	r8,64
10101d90:	01c00fc4 	movi	r7,63
10101d94:	003f6106 	br	10101b1c <_malloc_r+0x78>
10101d98:	4009883a 	mov	r4,r8
10101d9c:	003f7506 	br	10101b74 <_malloc_r+0xd0>
10101da0:	81000317 	ldw	r4,12(r16)
10101da4:	003fde06 	br	10101d20 <_malloc_r+0x27c>
10101da8:	81c5883a 	add	r2,r16,r7
10101dac:	11400117 	ldw	r5,4(r2)
10101db0:	9009883a 	mov	r4,r18
10101db4:	29400054 	ori	r5,r5,1
10101db8:	11400115 	stw	r5,4(r2)
10101dbc:	010dfe00 	call	1010dfe0 <__malloc_unlock>
10101dc0:	80800204 	addi	r2,r16,8
10101dc4:	003fe006 	br	10101d48 <_malloc_r+0x2a4>
10101dc8:	9c000217 	ldw	r16,8(r19)
10101dcc:	00bfff04 	movi	r2,-4
10101dd0:	85800117 	ldw	r22,4(r16)
10101dd4:	b0ac703a 	and	r22,r22,r2
10101dd8:	b4400336 	bltu	r22,r17,10101de8 <_malloc_r+0x344>
10101ddc:	b445c83a 	sub	r2,r22,r17
10101de0:	00c003c4 	movi	r3,15
10101de4:	18805d16 	blt	r3,r2,10101f5c <_malloc_r+0x4b8>
10101de8:	05c40474 	movhi	r23,4113
10101dec:	00840474 	movhi	r2,4113
10101df0:	108de704 	addi	r2,r2,14236
10101df4:	bdc71a04 	addi	r23,r23,7272
10101df8:	15400017 	ldw	r21,0(r2)
10101dfc:	b8c00017 	ldw	r3,0(r23)
10101e00:	00bfffc4 	movi	r2,-1
10101e04:	858d883a 	add	r6,r16,r22
10101e08:	8d6b883a 	add	r21,r17,r21
10101e0c:	1880ea26 	beq	r3,r2,101021b8 <_malloc_r+0x714>
10101e10:	ad4403c4 	addi	r21,r21,4111
10101e14:	00bc0004 	movi	r2,-4096
10101e18:	a8aa703a 	and	r21,r21,r2
10101e1c:	a80b883a 	mov	r5,r21
10101e20:	9009883a 	mov	r4,r18
10101e24:	d9800015 	stw	r6,0(sp)
10101e28:	01027680 	call	10102768 <_sbrk_r>
10101e2c:	1029883a 	mov	r20,r2
10101e30:	00bfffc4 	movi	r2,-1
10101e34:	d9800017 	ldw	r6,0(sp)
10101e38:	a080e826 	beq	r20,r2,101021dc <_malloc_r+0x738>
10101e3c:	a180a636 	bltu	r20,r6,101020d8 <_malloc_r+0x634>
10101e40:	07040474 	movhi	fp,4113
10101e44:	e70df204 	addi	fp,fp,14280
10101e48:	e0800017 	ldw	r2,0(fp)
10101e4c:	a887883a 	add	r3,r21,r2
10101e50:	e0c00015 	stw	r3,0(fp)
10101e54:	3500e626 	beq	r6,r20,101021f0 <_malloc_r+0x74c>
10101e58:	b9000017 	ldw	r4,0(r23)
10101e5c:	00bfffc4 	movi	r2,-1
10101e60:	2080ee26 	beq	r4,r2,1010221c <_malloc_r+0x778>
10101e64:	a185c83a 	sub	r2,r20,r6
10101e68:	10c5883a 	add	r2,r2,r3
10101e6c:	e0800015 	stw	r2,0(fp)
10101e70:	a0c001cc 	andi	r3,r20,7
10101e74:	1800bc26 	beq	r3,zero,10102168 <_malloc_r+0x6c4>
10101e78:	a0e9c83a 	sub	r20,r20,r3
10101e7c:	00840204 	movi	r2,4104
10101e80:	a5000204 	addi	r20,r20,8
10101e84:	10c7c83a 	sub	r3,r2,r3
10101e88:	a545883a 	add	r2,r20,r21
10101e8c:	1083ffcc 	andi	r2,r2,4095
10101e90:	18abc83a 	sub	r21,r3,r2
10101e94:	a80b883a 	mov	r5,r21
10101e98:	9009883a 	mov	r4,r18
10101e9c:	01027680 	call	10102768 <_sbrk_r>
10101ea0:	00ffffc4 	movi	r3,-1
10101ea4:	10c0e126 	beq	r2,r3,1010222c <_malloc_r+0x788>
10101ea8:	1505c83a 	sub	r2,r2,r20
10101eac:	1545883a 	add	r2,r2,r21
10101eb0:	10800054 	ori	r2,r2,1
10101eb4:	e0c00017 	ldw	r3,0(fp)
10101eb8:	9d000215 	stw	r20,8(r19)
10101ebc:	a0800115 	stw	r2,4(r20)
10101ec0:	a8c7883a 	add	r3,r21,r3
10101ec4:	e0c00015 	stw	r3,0(fp)
10101ec8:	84c00e26 	beq	r16,r19,10101f04 <_malloc_r+0x460>
10101ecc:	018003c4 	movi	r6,15
10101ed0:	3580a72e 	bgeu	r6,r22,10102170 <_malloc_r+0x6cc>
10101ed4:	81400117 	ldw	r5,4(r16)
10101ed8:	013ffe04 	movi	r4,-8
10101edc:	b0bffd04 	addi	r2,r22,-12
10101ee0:	1104703a 	and	r2,r2,r4
10101ee4:	2900004c 	andi	r4,r5,1
10101ee8:	2088b03a 	or	r4,r4,r2
10101eec:	81000115 	stw	r4,4(r16)
10101ef0:	01400144 	movi	r5,5
10101ef4:	8089883a 	add	r4,r16,r2
10101ef8:	21400115 	stw	r5,4(r4)
10101efc:	21400215 	stw	r5,8(r4)
10101f00:	3080cd36 	bltu	r6,r2,10102238 <_malloc_r+0x794>
10101f04:	00840474 	movhi	r2,4113
10101f08:	108de604 	addi	r2,r2,14232
10101f0c:	11000017 	ldw	r4,0(r2)
10101f10:	20c0012e 	bgeu	r4,r3,10101f18 <_malloc_r+0x474>
10101f14:	10c00015 	stw	r3,0(r2)
10101f18:	00840474 	movhi	r2,4113
10101f1c:	108de504 	addi	r2,r2,14228
10101f20:	11000017 	ldw	r4,0(r2)
10101f24:	9c000217 	ldw	r16,8(r19)
10101f28:	20c0012e 	bgeu	r4,r3,10101f30 <_malloc_r+0x48c>
10101f2c:	10c00015 	stw	r3,0(r2)
10101f30:	80c00117 	ldw	r3,4(r16)
10101f34:	00bfff04 	movi	r2,-4
10101f38:	1886703a 	and	r3,r3,r2
10101f3c:	1c45c83a 	sub	r2,r3,r17
10101f40:	1c400236 	bltu	r3,r17,10101f4c <_malloc_r+0x4a8>
10101f44:	00c003c4 	movi	r3,15
10101f48:	18800416 	blt	r3,r2,10101f5c <_malloc_r+0x4b8>
10101f4c:	9009883a 	mov	r4,r18
10101f50:	010dfe00 	call	1010dfe0 <__malloc_unlock>
10101f54:	0005883a 	mov	r2,zero
10101f58:	003f7b06 	br	10101d48 <_malloc_r+0x2a4>
10101f5c:	88c00054 	ori	r3,r17,1
10101f60:	80c00115 	stw	r3,4(r16)
10101f64:	8463883a 	add	r17,r16,r17
10101f68:	10800054 	ori	r2,r2,1
10101f6c:	9c400215 	stw	r17,8(r19)
10101f70:	88800115 	stw	r2,4(r17)
10101f74:	9009883a 	mov	r4,r18
10101f78:	010dfe00 	call	1010dfe0 <__malloc_unlock>
10101f7c:	80800204 	addi	r2,r16,8
10101f80:	003f7106 	br	10101d48 <_malloc_r+0x2a4>
10101f84:	00c00504 	movi	r3,20
10101f88:	18804a2e 	bgeu	r3,r2,101020b4 <_malloc_r+0x610>
10101f8c:	00c01504 	movi	r3,84
10101f90:	18806e36 	bltu	r3,r2,1010214c <_malloc_r+0x6a8>
10101f94:	8804d33a 	srli	r2,r17,12
10101f98:	12001bc4 	addi	r8,r2,111
10101f9c:	11c01b84 	addi	r7,r2,110
10101fa0:	4209883a 	add	r4,r8,r8
10101fa4:	003edd06 	br	10101b1c <_malloc_r+0x78>
10101fa8:	3804d27a 	srli	r2,r7,9
10101fac:	00c00104 	movi	r3,4
10101fb0:	1880442e 	bgeu	r3,r2,101020c4 <_malloc_r+0x620>
10101fb4:	00c00504 	movi	r3,20
10101fb8:	18808136 	bltu	r3,r2,101021c0 <_malloc_r+0x71c>
10101fbc:	11401704 	addi	r5,r2,92
10101fc0:	10c016c4 	addi	r3,r2,91
10101fc4:	294b883a 	add	r5,r5,r5
10101fc8:	294b883a 	add	r5,r5,r5
10101fcc:	294b883a 	add	r5,r5,r5
10101fd0:	994b883a 	add	r5,r19,r5
10101fd4:	28800017 	ldw	r2,0(r5)
10101fd8:	01840474 	movhi	r6,4113
10101fdc:	297ffe04 	addi	r5,r5,-8
10101fe0:	31817604 	addi	r6,r6,1496
10101fe4:	28806526 	beq	r5,r2,1010217c <_malloc_r+0x6d8>
10101fe8:	01bfff04 	movi	r6,-4
10101fec:	10c00117 	ldw	r3,4(r2)
10101ff0:	1986703a 	and	r3,r3,r6
10101ff4:	38c0022e 	bgeu	r7,r3,10102000 <_malloc_r+0x55c>
10101ff8:	10800217 	ldw	r2,8(r2)
10101ffc:	28bffb1e 	bne	r5,r2,10101fec <_malloc_r+0x548>
10102000:	11400317 	ldw	r5,12(r2)
10102004:	98c00117 	ldw	r3,4(r19)
10102008:	81400315 	stw	r5,12(r16)
1010200c:	80800215 	stw	r2,8(r16)
10102010:	2c000215 	stw	r16,8(r5)
10102014:	14000315 	stw	r16,12(r2)
10102018:	003ef806 	br	10101bfc <_malloc_r+0x158>
1010201c:	88c00054 	ori	r3,r17,1
10102020:	80c00115 	stw	r3,4(r16)
10102024:	8463883a 	add	r17,r16,r17
10102028:	34400515 	stw	r17,20(r6)
1010202c:	34400415 	stw	r17,16(r6)
10102030:	10c00054 	ori	r3,r2,1
10102034:	8a000315 	stw	r8,12(r17)
10102038:	8a000215 	stw	r8,8(r17)
1010203c:	88c00115 	stw	r3,4(r17)
10102040:	88a3883a 	add	r17,r17,r2
10102044:	88800015 	stw	r2,0(r17)
10102048:	9009883a 	mov	r4,r18
1010204c:	010dfe00 	call	1010dfe0 <__malloc_unlock>
10102050:	80800204 	addi	r2,r16,8
10102054:	003f3c06 	br	10101d48 <_malloc_r+0x2a4>
10102058:	30c00117 	ldw	r3,4(r6)
1010205c:	003ee706 	br	10101bfc <_malloc_r+0x158>
10102060:	5ac00044 	addi	r11,r11,1
10102064:	588000cc 	andi	r2,r11,3
10102068:	31800204 	addi	r6,r6,8
1010206c:	103efd1e 	bne	r2,zero,10101c64 <_malloc_r+0x1c0>
10102070:	00002406 	br	10102104 <_malloc_r+0x660>
10102074:	14000317 	ldw	r16,12(r2)
10102078:	143f251e 	bne	r2,r16,10101d10 <_malloc_r+0x26c>
1010207c:	21000084 	addi	r4,r4,2
10102080:	003ebc06 	br	10101b74 <_malloc_r+0xd0>
10102084:	8085883a 	add	r2,r16,r2
10102088:	10c00117 	ldw	r3,4(r2)
1010208c:	81000317 	ldw	r4,12(r16)
10102090:	81400217 	ldw	r5,8(r16)
10102094:	18c00054 	ori	r3,r3,1
10102098:	10c00115 	stw	r3,4(r2)
1010209c:	29000315 	stw	r4,12(r5)
101020a0:	21400215 	stw	r5,8(r4)
101020a4:	9009883a 	mov	r4,r18
101020a8:	010dfe00 	call	1010dfe0 <__malloc_unlock>
101020ac:	80800204 	addi	r2,r16,8
101020b0:	003f2506 	br	10101d48 <_malloc_r+0x2a4>
101020b4:	12001704 	addi	r8,r2,92
101020b8:	11c016c4 	addi	r7,r2,91
101020bc:	4209883a 	add	r4,r8,r8
101020c0:	003e9606 	br	10101b1c <_malloc_r+0x78>
101020c4:	3804d1ba 	srli	r2,r7,6
101020c8:	11400e44 	addi	r5,r2,57
101020cc:	10c00e04 	addi	r3,r2,56
101020d0:	294b883a 	add	r5,r5,r5
101020d4:	003fbc06 	br	10101fc8 <_malloc_r+0x524>
101020d8:	84ff5926 	beq	r16,r19,10101e40 <_malloc_r+0x39c>
101020dc:	00840474 	movhi	r2,4113
101020e0:	10817604 	addi	r2,r2,1496
101020e4:	14000217 	ldw	r16,8(r2)
101020e8:	00bfff04 	movi	r2,-4
101020ec:	80c00117 	ldw	r3,4(r16)
101020f0:	1886703a 	and	r3,r3,r2
101020f4:	003f9106 	br	10101f3c <_malloc_r+0x498>
101020f8:	60800217 	ldw	r2,8(r12)
101020fc:	213fffc4 	addi	r4,r4,-1
10102100:	1300651e 	bne	r2,r12,10102298 <_malloc_r+0x7f4>
10102104:	208000cc 	andi	r2,r4,3
10102108:	633ffe04 	addi	r12,r12,-8
1010210c:	103ffa1e 	bne	r2,zero,101020f8 <_malloc_r+0x654>
10102110:	98800117 	ldw	r2,4(r19)
10102114:	0146303a 	nor	r3,zero,r5
10102118:	1884703a 	and	r2,r3,r2
1010211c:	98800115 	stw	r2,4(r19)
10102120:	294b883a 	add	r5,r5,r5
10102124:	117f2836 	bltu	r2,r5,10101dc8 <_malloc_r+0x324>
10102128:	283f2726 	beq	r5,zero,10101dc8 <_malloc_r+0x324>
1010212c:	2886703a 	and	r3,r5,r2
10102130:	5809883a 	mov	r4,r11
10102134:	183ec31e 	bne	r3,zero,10101c44 <_malloc_r+0x1a0>
10102138:	294b883a 	add	r5,r5,r5
1010213c:	2886703a 	and	r3,r5,r2
10102140:	21000104 	addi	r4,r4,4
10102144:	183ffc26 	beq	r3,zero,10102138 <_malloc_r+0x694>
10102148:	003ebe06 	br	10101c44 <_malloc_r+0x1a0>
1010214c:	00c05504 	movi	r3,340
10102150:	18801236 	bltu	r3,r2,1010219c <_malloc_r+0x6f8>
10102154:	8804d3fa 	srli	r2,r17,15
10102158:	12001e04 	addi	r8,r2,120
1010215c:	11c01dc4 	addi	r7,r2,119
10102160:	4209883a 	add	r4,r8,r8
10102164:	003e6d06 	br	10101b1c <_malloc_r+0x78>
10102168:	00c40004 	movi	r3,4096
1010216c:	003f4606 	br	10101e88 <_malloc_r+0x3e4>
10102170:	00800044 	movi	r2,1
10102174:	a0800115 	stw	r2,4(r20)
10102178:	003f7406 	br	10101f4c <_malloc_r+0x4a8>
1010217c:	1805d0ba 	srai	r2,r3,2
10102180:	01c00044 	movi	r7,1
10102184:	30c00117 	ldw	r3,4(r6)
10102188:	388e983a 	sll	r7,r7,r2
1010218c:	2805883a 	mov	r2,r5
10102190:	38c6b03a 	or	r3,r7,r3
10102194:	30c00115 	stw	r3,4(r6)
10102198:	003f9b06 	br	10102008 <_malloc_r+0x564>
1010219c:	00c15504 	movi	r3,1364
101021a0:	18801a36 	bltu	r3,r2,1010220c <_malloc_r+0x768>
101021a4:	8804d4ba 	srli	r2,r17,18
101021a8:	12001f44 	addi	r8,r2,125
101021ac:	11c01f04 	addi	r7,r2,124
101021b0:	4209883a 	add	r4,r8,r8
101021b4:	003e5906 	br	10101b1c <_malloc_r+0x78>
101021b8:	ad400404 	addi	r21,r21,16
101021bc:	003f1706 	br	10101e1c <_malloc_r+0x378>
101021c0:	00c01504 	movi	r3,84
101021c4:	18802336 	bltu	r3,r2,10102254 <_malloc_r+0x7b0>
101021c8:	3804d33a 	srli	r2,r7,12
101021cc:	11401bc4 	addi	r5,r2,111
101021d0:	10c01b84 	addi	r3,r2,110
101021d4:	294b883a 	add	r5,r5,r5
101021d8:	003f7b06 	br	10101fc8 <_malloc_r+0x524>
101021dc:	9c000217 	ldw	r16,8(r19)
101021e0:	00bfff04 	movi	r2,-4
101021e4:	80c00117 	ldw	r3,4(r16)
101021e8:	1886703a 	and	r3,r3,r2
101021ec:	003f5306 	br	10101f3c <_malloc_r+0x498>
101021f0:	3083ffcc 	andi	r2,r6,4095
101021f4:	103f181e 	bne	r2,zero,10101e58 <_malloc_r+0x3b4>
101021f8:	99000217 	ldw	r4,8(r19)
101021fc:	b545883a 	add	r2,r22,r21
10102200:	10800054 	ori	r2,r2,1
10102204:	20800115 	stw	r2,4(r4)
10102208:	003f3e06 	br	10101f04 <_malloc_r+0x460>
1010220c:	01003f84 	movi	r4,254
10102210:	02001fc4 	movi	r8,127
10102214:	01c01f84 	movi	r7,126
10102218:	003e4006 	br	10101b1c <_malloc_r+0x78>
1010221c:	00840474 	movhi	r2,4113
10102220:	10871a04 	addi	r2,r2,7272
10102224:	15000015 	stw	r20,0(r2)
10102228:	003f1106 	br	10101e70 <_malloc_r+0x3cc>
1010222c:	00800044 	movi	r2,1
10102230:	002b883a 	mov	r21,zero
10102234:	003f1f06 	br	10101eb4 <_malloc_r+0x410>
10102238:	81400204 	addi	r5,r16,8
1010223c:	9009883a 	mov	r4,r18
10102240:	0100e740 	call	10100e74 <_free_r>
10102244:	00840474 	movhi	r2,4113
10102248:	108df204 	addi	r2,r2,14280
1010224c:	10c00017 	ldw	r3,0(r2)
10102250:	003f2c06 	br	10101f04 <_malloc_r+0x460>
10102254:	00c05504 	movi	r3,340
10102258:	18800536 	bltu	r3,r2,10102270 <_malloc_r+0x7cc>
1010225c:	3804d3fa 	srli	r2,r7,15
10102260:	11401e04 	addi	r5,r2,120
10102264:	10c01dc4 	addi	r3,r2,119
10102268:	294b883a 	add	r5,r5,r5
1010226c:	003f5606 	br	10101fc8 <_malloc_r+0x524>
10102270:	00c15504 	movi	r3,1364
10102274:	18800536 	bltu	r3,r2,1010228c <_malloc_r+0x7e8>
10102278:	3804d4ba 	srli	r2,r7,18
1010227c:	11401f44 	addi	r5,r2,125
10102280:	10c01f04 	addi	r3,r2,124
10102284:	294b883a 	add	r5,r5,r5
10102288:	003f4f06 	br	10101fc8 <_malloc_r+0x524>
1010228c:	01403f84 	movi	r5,254
10102290:	00c01f84 	movi	r3,126
10102294:	003f4c06 	br	10101fc8 <_malloc_r+0x524>
10102298:	98800117 	ldw	r2,4(r19)
1010229c:	003fa006 	br	10102120 <_malloc_r+0x67c>
101022a0:	8808d0fa 	srli	r4,r17,3
101022a4:	20800044 	addi	r2,r4,1
101022a8:	1085883a 	add	r2,r2,r2
101022ac:	003e9006 	br	10101cf0 <_malloc_r+0x24c>

101022b0 <memset>:
101022b0:	20c000cc 	andi	r3,r4,3
101022b4:	2005883a 	mov	r2,r4
101022b8:	18004426 	beq	r3,zero,101023cc <memset+0x11c>
101022bc:	31ffffc4 	addi	r7,r6,-1
101022c0:	30004026 	beq	r6,zero,101023c4 <memset+0x114>
101022c4:	2813883a 	mov	r9,r5
101022c8:	200d883a 	mov	r6,r4
101022cc:	2007883a 	mov	r3,r4
101022d0:	00000406 	br	101022e4 <memset+0x34>
101022d4:	3a3fffc4 	addi	r8,r7,-1
101022d8:	31800044 	addi	r6,r6,1
101022dc:	38003926 	beq	r7,zero,101023c4 <memset+0x114>
101022e0:	400f883a 	mov	r7,r8
101022e4:	18c00044 	addi	r3,r3,1
101022e8:	32400005 	stb	r9,0(r6)
101022ec:	1a0000cc 	andi	r8,r3,3
101022f0:	403ff81e 	bne	r8,zero,101022d4 <memset+0x24>
101022f4:	010000c4 	movi	r4,3
101022f8:	21c02d2e 	bgeu	r4,r7,101023b0 <memset+0x100>
101022fc:	29003fcc 	andi	r4,r5,255
10102300:	200c923a 	slli	r6,r4,8
10102304:	3108b03a 	or	r4,r6,r4
10102308:	200c943a 	slli	r6,r4,16
1010230c:	218cb03a 	or	r6,r4,r6
10102310:	010003c4 	movi	r4,15
10102314:	21c0182e 	bgeu	r4,r7,10102378 <memset+0xc8>
10102318:	3b3ffc04 	addi	r12,r7,-16
1010231c:	6018d13a 	srli	r12,r12,4
10102320:	1a000104 	addi	r8,r3,4
10102324:	1ac00204 	addi	r11,r3,8
10102328:	6008913a 	slli	r4,r12,4
1010232c:	1a800304 	addi	r10,r3,12
10102330:	1813883a 	mov	r9,r3
10102334:	21000504 	addi	r4,r4,20
10102338:	1909883a 	add	r4,r3,r4
1010233c:	49800015 	stw	r6,0(r9)
10102340:	41800015 	stw	r6,0(r8)
10102344:	59800015 	stw	r6,0(r11)
10102348:	51800015 	stw	r6,0(r10)
1010234c:	42000404 	addi	r8,r8,16
10102350:	4a400404 	addi	r9,r9,16
10102354:	5ac00404 	addi	r11,r11,16
10102358:	52800404 	addi	r10,r10,16
1010235c:	413ff71e 	bne	r8,r4,1010233c <memset+0x8c>
10102360:	63000044 	addi	r12,r12,1
10102364:	6018913a 	slli	r12,r12,4
10102368:	39c003cc 	andi	r7,r7,15
1010236c:	010000c4 	movi	r4,3
10102370:	1b07883a 	add	r3,r3,r12
10102374:	21c00e2e 	bgeu	r4,r7,101023b0 <memset+0x100>
10102378:	1813883a 	mov	r9,r3
1010237c:	3811883a 	mov	r8,r7
10102380:	010000c4 	movi	r4,3
10102384:	49800015 	stw	r6,0(r9)
10102388:	423fff04 	addi	r8,r8,-4
1010238c:	4a400104 	addi	r9,r9,4
10102390:	223ffc36 	bltu	r4,r8,10102384 <memset+0xd4>
10102394:	393fff04 	addi	r4,r7,-4
10102398:	2008d0ba 	srli	r4,r4,2
1010239c:	39c000cc 	andi	r7,r7,3
101023a0:	21000044 	addi	r4,r4,1
101023a4:	2109883a 	add	r4,r4,r4
101023a8:	2109883a 	add	r4,r4,r4
101023ac:	1907883a 	add	r3,r3,r4
101023b0:	38000526 	beq	r7,zero,101023c8 <memset+0x118>
101023b4:	19cf883a 	add	r7,r3,r7
101023b8:	19400005 	stb	r5,0(r3)
101023bc:	18c00044 	addi	r3,r3,1
101023c0:	38fffd1e 	bne	r7,r3,101023b8 <memset+0x108>
101023c4:	f800283a 	ret
101023c8:	f800283a 	ret
101023cc:	2007883a 	mov	r3,r4
101023d0:	300f883a 	mov	r7,r6
101023d4:	003fc706 	br	101022f4 <memset+0x44>

101023d8 <_open_r>:
101023d8:	defffd04 	addi	sp,sp,-12
101023dc:	2805883a 	mov	r2,r5
101023e0:	dc000015 	stw	r16,0(sp)
101023e4:	04040474 	movhi	r16,4113
101023e8:	dc400115 	stw	r17,4(sp)
101023ec:	300b883a 	mov	r5,r6
101023f0:	840de404 	addi	r16,r16,14224
101023f4:	2023883a 	mov	r17,r4
101023f8:	380d883a 	mov	r6,r7
101023fc:	1009883a 	mov	r4,r2
10102400:	dfc00215 	stw	ra,8(sp)
10102404:	80000015 	stw	zero,0(r16)
10102408:	010e1040 	call	1010e104 <open>
1010240c:	00ffffc4 	movi	r3,-1
10102410:	10c00526 	beq	r2,r3,10102428 <_open_r+0x50>
10102414:	dfc00217 	ldw	ra,8(sp)
10102418:	dc400117 	ldw	r17,4(sp)
1010241c:	dc000017 	ldw	r16,0(sp)
10102420:	dec00304 	addi	sp,sp,12
10102424:	f800283a 	ret
10102428:	80c00017 	ldw	r3,0(r16)
1010242c:	183ff926 	beq	r3,zero,10102414 <_open_r+0x3c>
10102430:	88c00015 	stw	r3,0(r17)
10102434:	003ff706 	br	10102414 <_open_r+0x3c>

10102438 <_printf_r>:
10102438:	defffd04 	addi	sp,sp,-12
1010243c:	2805883a 	mov	r2,r5
10102440:	dfc00015 	stw	ra,0(sp)
10102444:	d9800115 	stw	r6,4(sp)
10102448:	d9c00215 	stw	r7,8(sp)
1010244c:	21400217 	ldw	r5,8(r4)
10102450:	d9c00104 	addi	r7,sp,4
10102454:	100d883a 	mov	r6,r2
10102458:	01029900 	call	10102990 <___vfprintf_internal_r>
1010245c:	dfc00017 	ldw	ra,0(sp)
10102460:	dec00304 	addi	sp,sp,12
10102464:	f800283a 	ret

10102468 <printf>:
10102468:	defffc04 	addi	sp,sp,-16
1010246c:	dfc00015 	stw	ra,0(sp)
10102470:	d9400115 	stw	r5,4(sp)
10102474:	d9800215 	stw	r6,8(sp)
10102478:	d9c00315 	stw	r7,12(sp)
1010247c:	00840474 	movhi	r2,4113
10102480:	10871904 	addi	r2,r2,7268
10102484:	10800017 	ldw	r2,0(r2)
10102488:	200b883a 	mov	r5,r4
1010248c:	d9800104 	addi	r6,sp,4
10102490:	11000217 	ldw	r4,8(r2)
10102494:	0104b880 	call	10104b88 <__vfprintf_internal>
10102498:	dfc00017 	ldw	ra,0(sp)
1010249c:	dec00404 	addi	sp,sp,16
101024a0:	f800283a 	ret

101024a4 <_puts_r>:
101024a4:	defff604 	addi	sp,sp,-40
101024a8:	dc000715 	stw	r16,28(sp)
101024ac:	2021883a 	mov	r16,r4
101024b0:	2809883a 	mov	r4,r5
101024b4:	dc400815 	stw	r17,32(sp)
101024b8:	dfc00915 	stw	ra,36(sp)
101024bc:	2823883a 	mov	r17,r5
101024c0:	01028f80 	call	101028f8 <strlen>
101024c4:	10c00044 	addi	r3,r2,1
101024c8:	d8800115 	stw	r2,4(sp)
101024cc:	00840474 	movhi	r2,4113
101024d0:	10bfae04 	addi	r2,r2,-328
101024d4:	d8800215 	stw	r2,8(sp)
101024d8:	00800044 	movi	r2,1
101024dc:	d8800315 	stw	r2,12(sp)
101024e0:	00800084 	movi	r2,2
101024e4:	dc400015 	stw	r17,0(sp)
101024e8:	d8c00615 	stw	r3,24(sp)
101024ec:	dec00415 	stw	sp,16(sp)
101024f0:	d8800515 	stw	r2,20(sp)
101024f4:	80000226 	beq	r16,zero,10102500 <_puts_r+0x5c>
101024f8:	80800e17 	ldw	r2,56(r16)
101024fc:	10001426 	beq	r2,zero,10102550 <_puts_r+0xac>
10102500:	81400217 	ldw	r5,8(r16)
10102504:	2880030b 	ldhu	r2,12(r5)
10102508:	10c8000c 	andi	r3,r2,8192
1010250c:	1800061e 	bne	r3,zero,10102528 <_puts_r+0x84>
10102510:	29001917 	ldw	r4,100(r5)
10102514:	00f7ffc4 	movi	r3,-8193
10102518:	10880014 	ori	r2,r2,8192
1010251c:	20c6703a 	and	r3,r4,r3
10102520:	2880030d 	sth	r2,12(r5)
10102524:	28c01915 	stw	r3,100(r5)
10102528:	d9800404 	addi	r6,sp,16
1010252c:	8009883a 	mov	r4,r16
10102530:	010679c0 	call	1010679c <__sfvwrite_r>
10102534:	1000091e 	bne	r2,zero,1010255c <_puts_r+0xb8>
10102538:	00800284 	movi	r2,10
1010253c:	dfc00917 	ldw	ra,36(sp)
10102540:	dc400817 	ldw	r17,32(sp)
10102544:	dc000717 	ldw	r16,28(sp)
10102548:	dec00a04 	addi	sp,sp,40
1010254c:	f800283a 	ret
10102550:	8009883a 	mov	r4,r16
10102554:	0100ba80 	call	10100ba8 <__sinit>
10102558:	003fe906 	br	10102500 <_puts_r+0x5c>
1010255c:	00bfffc4 	movi	r2,-1
10102560:	003ff606 	br	1010253c <_puts_r+0x98>

10102564 <puts>:
10102564:	00840474 	movhi	r2,4113
10102568:	10871904 	addi	r2,r2,7268
1010256c:	200b883a 	mov	r5,r4
10102570:	11000017 	ldw	r4,0(r2)
10102574:	01024a41 	jmpi	101024a4 <_puts_r>

10102578 <lflush>:
10102578:	2080030b 	ldhu	r2,12(r4)
1010257c:	00c00244 	movi	r3,9
10102580:	1080024c 	andi	r2,r2,9
10102584:	10c00226 	beq	r2,r3,10102590 <lflush+0x18>
10102588:	0005883a 	mov	r2,zero
1010258c:	f800283a 	ret
10102590:	01008281 	jmpi	10100828 <fflush>

10102594 <__srefill_r>:
10102594:	defffc04 	addi	sp,sp,-16
10102598:	dc400115 	stw	r17,4(sp)
1010259c:	dc000015 	stw	r16,0(sp)
101025a0:	dfc00315 	stw	ra,12(sp)
101025a4:	dc800215 	stw	r18,8(sp)
101025a8:	2023883a 	mov	r17,r4
101025ac:	2821883a 	mov	r16,r5
101025b0:	20000226 	beq	r4,zero,101025bc <__srefill_r+0x28>
101025b4:	20800e17 	ldw	r2,56(r4)
101025b8:	10003c26 	beq	r2,zero,101026ac <__srefill_r+0x118>
101025bc:	80c0030b 	ldhu	r3,12(r16)
101025c0:	1908000c 	andi	r4,r3,8192
101025c4:	1805883a 	mov	r2,r3
101025c8:	2000071e 	bne	r4,zero,101025e8 <__srefill_r+0x54>
101025cc:	81001917 	ldw	r4,100(r16)
101025d0:	18880014 	ori	r2,r3,8192
101025d4:	00f7ffc4 	movi	r3,-8193
101025d8:	20c8703a 	and	r4,r4,r3
101025dc:	8080030d 	sth	r2,12(r16)
101025e0:	1007883a 	mov	r3,r2
101025e4:	81001915 	stw	r4,100(r16)
101025e8:	80000115 	stw	zero,4(r16)
101025ec:	1100080c 	andi	r4,r2,32
101025f0:	2000571e 	bne	r4,zero,10102750 <__srefill_r+0x1bc>
101025f4:	1100010c 	andi	r4,r2,4
101025f8:	20001f26 	beq	r4,zero,10102678 <__srefill_r+0xe4>
101025fc:	81400c17 	ldw	r5,48(r16)
10102600:	28000826 	beq	r5,zero,10102624 <__srefill_r+0x90>
10102604:	80801004 	addi	r2,r16,64
10102608:	28800226 	beq	r5,r2,10102614 <__srefill_r+0x80>
1010260c:	8809883a 	mov	r4,r17
10102610:	0100e740 	call	10100e74 <_free_r>
10102614:	80800f17 	ldw	r2,60(r16)
10102618:	80000c15 	stw	zero,48(r16)
1010261c:	80800115 	stw	r2,4(r16)
10102620:	1000391e 	bne	r2,zero,10102708 <__srefill_r+0x174>
10102624:	80800417 	ldw	r2,16(r16)
10102628:	10004b26 	beq	r2,zero,10102758 <__srefill_r+0x1c4>
1010262c:	8480030b 	ldhu	r18,12(r16)
10102630:	908000cc 	andi	r2,r18,3
10102634:	10001f1e 	bne	r2,zero,101026b4 <__srefill_r+0x120>
10102638:	81800417 	ldw	r6,16(r16)
1010263c:	80800817 	ldw	r2,32(r16)
10102640:	81c00517 	ldw	r7,20(r16)
10102644:	81400717 	ldw	r5,28(r16)
10102648:	81800015 	stw	r6,0(r16)
1010264c:	8809883a 	mov	r4,r17
10102650:	103ee83a 	callr	r2
10102654:	80800115 	stw	r2,4(r16)
10102658:	00800e0e 	bge	zero,r2,10102694 <__srefill_r+0x100>
1010265c:	0005883a 	mov	r2,zero
10102660:	dfc00317 	ldw	ra,12(sp)
10102664:	dc800217 	ldw	r18,8(sp)
10102668:	dc400117 	ldw	r17,4(sp)
1010266c:	dc000017 	ldw	r16,0(sp)
10102670:	dec00404 	addi	sp,sp,16
10102674:	f800283a 	ret
10102678:	1100040c 	andi	r4,r2,16
1010267c:	20003026 	beq	r4,zero,10102740 <__srefill_r+0x1ac>
10102680:	1080020c 	andi	r2,r2,8
10102684:	1000241e 	bne	r2,zero,10102718 <__srefill_r+0x184>
10102688:	18c00114 	ori	r3,r3,4
1010268c:	80c0030d 	sth	r3,12(r16)
10102690:	003fe406 	br	10102624 <__srefill_r+0x90>
10102694:	80c0030b 	ldhu	r3,12(r16)
10102698:	1000161e 	bne	r2,zero,101026f4 <__srefill_r+0x160>
1010269c:	18c00814 	ori	r3,r3,32
101026a0:	00bfffc4 	movi	r2,-1
101026a4:	80c0030d 	sth	r3,12(r16)
101026a8:	003fed06 	br	10102660 <__srefill_r+0xcc>
101026ac:	0100ba80 	call	10100ba8 <__sinit>
101026b0:	003fc206 	br	101025bc <__srefill_r+0x28>
101026b4:	00840474 	movhi	r2,4113
101026b8:	10871804 	addi	r2,r2,7264
101026bc:	11000017 	ldw	r4,0(r2)
101026c0:	01440434 	movhi	r5,4112
101026c4:	00800044 	movi	r2,1
101026c8:	29495e04 	addi	r5,r5,9592
101026cc:	8080030d 	sth	r2,12(r16)
101026d0:	01016600 	call	10101660 <_fwalk>
101026d4:	00800244 	movi	r2,9
101026d8:	8480030d 	sth	r18,12(r16)
101026dc:	9480024c 	andi	r18,r18,9
101026e0:	90bfd51e 	bne	r18,r2,10102638 <__srefill_r+0xa4>
101026e4:	800b883a 	mov	r5,r16
101026e8:	8809883a 	mov	r4,r17
101026ec:	01005b00 	call	101005b0 <__sflush_r>
101026f0:	003fd106 	br	10102638 <__srefill_r+0xa4>
101026f4:	18c01014 	ori	r3,r3,64
101026f8:	80000115 	stw	zero,4(r16)
101026fc:	00bfffc4 	movi	r2,-1
10102700:	80c0030d 	sth	r3,12(r16)
10102704:	003fd606 	br	10102660 <__srefill_r+0xcc>
10102708:	80c00e17 	ldw	r3,56(r16)
1010270c:	0005883a 	mov	r2,zero
10102710:	80c00015 	stw	r3,0(r16)
10102714:	003fd206 	br	10102660 <__srefill_r+0xcc>
10102718:	800b883a 	mov	r5,r16
1010271c:	8809883a 	mov	r4,r17
10102720:	01007cc0 	call	101007cc <_fflush_r>
10102724:	10000a1e 	bne	r2,zero,10102750 <__srefill_r+0x1bc>
10102728:	8080030b 	ldhu	r2,12(r16)
1010272c:	00fffdc4 	movi	r3,-9
10102730:	80000215 	stw	zero,8(r16)
10102734:	1886703a 	and	r3,r3,r2
10102738:	80000615 	stw	zero,24(r16)
1010273c:	003fd206 	br	10102688 <__srefill_r+0xf4>
10102740:	00800244 	movi	r2,9
10102744:	88800015 	stw	r2,0(r17)
10102748:	18c01014 	ori	r3,r3,64
1010274c:	80c0030d 	sth	r3,12(r16)
10102750:	00bfffc4 	movi	r2,-1
10102754:	003fc206 	br	10102660 <__srefill_r+0xcc>
10102758:	800b883a 	mov	r5,r16
1010275c:	8809883a 	mov	r4,r17
10102760:	01018e80 	call	101018e8 <__smakebuf_r>
10102764:	003fb106 	br	1010262c <__srefill_r+0x98>

10102768 <_sbrk_r>:
10102768:	defffd04 	addi	sp,sp,-12
1010276c:	dc000015 	stw	r16,0(sp)
10102770:	04040474 	movhi	r16,4113
10102774:	dc400115 	stw	r17,4(sp)
10102778:	840de404 	addi	r16,r16,14224
1010277c:	2023883a 	mov	r17,r4
10102780:	2809883a 	mov	r4,r5
10102784:	dfc00215 	stw	ra,8(sp)
10102788:	80000015 	stw	zero,0(r16)
1010278c:	010e3f40 	call	1010e3f4 <sbrk>
10102790:	00ffffc4 	movi	r3,-1
10102794:	10c00526 	beq	r2,r3,101027ac <_sbrk_r+0x44>
10102798:	dfc00217 	ldw	ra,8(sp)
1010279c:	dc400117 	ldw	r17,4(sp)
101027a0:	dc000017 	ldw	r16,0(sp)
101027a4:	dec00304 	addi	sp,sp,12
101027a8:	f800283a 	ret
101027ac:	80c00017 	ldw	r3,0(r16)
101027b0:	183ff926 	beq	r3,zero,10102798 <_sbrk_r+0x30>
101027b4:	88c00015 	stw	r3,0(r17)
101027b8:	003ff706 	br	10102798 <_sbrk_r+0x30>

101027bc <__sread>:
101027bc:	defffe04 	addi	sp,sp,-8
101027c0:	dc000015 	stw	r16,0(sp)
101027c4:	2821883a 	mov	r16,r5
101027c8:	2940038f 	ldh	r5,14(r5)
101027cc:	dfc00115 	stw	ra,4(sp)
101027d0:	010816c0 	call	1010816c <_read_r>
101027d4:	10000716 	blt	r2,zero,101027f4 <__sread+0x38>
101027d8:	80c01417 	ldw	r3,80(r16)
101027dc:	1887883a 	add	r3,r3,r2
101027e0:	80c01415 	stw	r3,80(r16)
101027e4:	dfc00117 	ldw	ra,4(sp)
101027e8:	dc000017 	ldw	r16,0(sp)
101027ec:	dec00204 	addi	sp,sp,8
101027f0:	f800283a 	ret
101027f4:	80c0030b 	ldhu	r3,12(r16)
101027f8:	18fbffcc 	andi	r3,r3,61439
101027fc:	80c0030d 	sth	r3,12(r16)
10102800:	dfc00117 	ldw	ra,4(sp)
10102804:	dc000017 	ldw	r16,0(sp)
10102808:	dec00204 	addi	sp,sp,8
1010280c:	f800283a 	ret

10102810 <__seofread>:
10102810:	0005883a 	mov	r2,zero
10102814:	f800283a 	ret

10102818 <__swrite>:
10102818:	2880030b 	ldhu	r2,12(r5)
1010281c:	defffb04 	addi	sp,sp,-20
10102820:	dcc00315 	stw	r19,12(sp)
10102824:	dc800215 	stw	r18,8(sp)
10102828:	dc400115 	stw	r17,4(sp)
1010282c:	dc000015 	stw	r16,0(sp)
10102830:	dfc00415 	stw	ra,16(sp)
10102834:	10c0400c 	andi	r3,r2,256
10102838:	2821883a 	mov	r16,r5
1010283c:	2023883a 	mov	r17,r4
10102840:	3025883a 	mov	r18,r6
10102844:	3827883a 	mov	r19,r7
10102848:	18000526 	beq	r3,zero,10102860 <__swrite+0x48>
1010284c:	2940038f 	ldh	r5,14(r5)
10102850:	01c00084 	movi	r7,2
10102854:	000d883a 	mov	r6,zero
10102858:	0106d880 	call	10106d88 <_lseek_r>
1010285c:	8080030b 	ldhu	r2,12(r16)
10102860:	8140038f 	ldh	r5,14(r16)
10102864:	10bbffcc 	andi	r2,r2,61439
10102868:	980f883a 	mov	r7,r19
1010286c:	900d883a 	mov	r6,r18
10102870:	8809883a 	mov	r4,r17
10102874:	8080030d 	sth	r2,12(r16)
10102878:	dfc00417 	ldw	ra,16(sp)
1010287c:	dcc00317 	ldw	r19,12(sp)
10102880:	dc800217 	ldw	r18,8(sp)
10102884:	dc400117 	ldw	r17,4(sp)
10102888:	dc000017 	ldw	r16,0(sp)
1010288c:	dec00504 	addi	sp,sp,20
10102890:	0104c601 	jmpi	10104c60 <_write_r>

10102894 <__sseek>:
10102894:	defffe04 	addi	sp,sp,-8
10102898:	dc000015 	stw	r16,0(sp)
1010289c:	2821883a 	mov	r16,r5
101028a0:	2940038f 	ldh	r5,14(r5)
101028a4:	dfc00115 	stw	ra,4(sp)
101028a8:	0106d880 	call	10106d88 <_lseek_r>
101028ac:	00ffffc4 	movi	r3,-1
101028b0:	10c00826 	beq	r2,r3,101028d4 <__sseek+0x40>
101028b4:	80c0030b 	ldhu	r3,12(r16)
101028b8:	80801415 	stw	r2,80(r16)
101028bc:	18c40014 	ori	r3,r3,4096
101028c0:	80c0030d 	sth	r3,12(r16)
101028c4:	dfc00117 	ldw	ra,4(sp)
101028c8:	dc000017 	ldw	r16,0(sp)
101028cc:	dec00204 	addi	sp,sp,8
101028d0:	f800283a 	ret
101028d4:	80c0030b 	ldhu	r3,12(r16)
101028d8:	18fbffcc 	andi	r3,r3,61439
101028dc:	80c0030d 	sth	r3,12(r16)
101028e0:	dfc00117 	ldw	ra,4(sp)
101028e4:	dc000017 	ldw	r16,0(sp)
101028e8:	dec00204 	addi	sp,sp,8
101028ec:	f800283a 	ret

101028f0 <__sclose>:
101028f0:	2940038f 	ldh	r5,14(r5)
101028f4:	0104e141 	jmpi	10104e14 <_close_r>

101028f8 <strlen>:
101028f8:	208000cc 	andi	r2,r4,3
101028fc:	10002026 	beq	r2,zero,10102980 <strlen+0x88>
10102900:	20800007 	ldb	r2,0(r4)
10102904:	10002026 	beq	r2,zero,10102988 <strlen+0x90>
10102908:	2005883a 	mov	r2,r4
1010290c:	00000206 	br	10102918 <strlen+0x20>
10102910:	10c00007 	ldb	r3,0(r2)
10102914:	18001826 	beq	r3,zero,10102978 <strlen+0x80>
10102918:	10800044 	addi	r2,r2,1
1010291c:	10c000cc 	andi	r3,r2,3
10102920:	183ffb1e 	bne	r3,zero,10102910 <strlen+0x18>
10102924:	10c00017 	ldw	r3,0(r2)
10102928:	01ffbff4 	movhi	r7,65279
1010292c:	39ffbfc4 	addi	r7,r7,-257
10102930:	00ca303a 	nor	r5,zero,r3
10102934:	01a02074 	movhi	r6,32897
10102938:	19c7883a 	add	r3,r3,r7
1010293c:	31a02004 	addi	r6,r6,-32640
10102940:	1946703a 	and	r3,r3,r5
10102944:	1986703a 	and	r3,r3,r6
10102948:	1800091e 	bne	r3,zero,10102970 <strlen+0x78>
1010294c:	10800104 	addi	r2,r2,4
10102950:	10c00017 	ldw	r3,0(r2)
10102954:	19cb883a 	add	r5,r3,r7
10102958:	00c6303a 	nor	r3,zero,r3
1010295c:	28c6703a 	and	r3,r5,r3
10102960:	1986703a 	and	r3,r3,r6
10102964:	183ff926 	beq	r3,zero,1010294c <strlen+0x54>
10102968:	00000106 	br	10102970 <strlen+0x78>
1010296c:	10800044 	addi	r2,r2,1
10102970:	10c00007 	ldb	r3,0(r2)
10102974:	183ffd1e 	bne	r3,zero,1010296c <strlen+0x74>
10102978:	1105c83a 	sub	r2,r2,r4
1010297c:	f800283a 	ret
10102980:	2005883a 	mov	r2,r4
10102984:	003fe706 	br	10102924 <strlen+0x2c>
10102988:	0005883a 	mov	r2,zero
1010298c:	f800283a 	ret

10102990 <___vfprintf_internal_r>:
10102990:	deffb804 	addi	sp,sp,-288
10102994:	dfc04715 	stw	ra,284(sp)
10102998:	ddc04515 	stw	r23,276(sp)
1010299c:	dd404315 	stw	r21,268(sp)
101029a0:	d9002c15 	stw	r4,176(sp)
101029a4:	282f883a 	mov	r23,r5
101029a8:	302b883a 	mov	r21,r6
101029ac:	d9c02d15 	stw	r7,180(sp)
101029b0:	df004615 	stw	fp,280(sp)
101029b4:	dd804415 	stw	r22,272(sp)
101029b8:	dd004215 	stw	r20,264(sp)
101029bc:	dcc04115 	stw	r19,260(sp)
101029c0:	dc804015 	stw	r18,256(sp)
101029c4:	dc403f15 	stw	r17,252(sp)
101029c8:	dc003e15 	stw	r16,248(sp)
101029cc:	0106d580 	call	10106d58 <_localeconv_r>
101029d0:	10800017 	ldw	r2,0(r2)
101029d4:	1009883a 	mov	r4,r2
101029d8:	d8803415 	stw	r2,208(sp)
101029dc:	01028f80 	call	101028f8 <strlen>
101029e0:	d8803715 	stw	r2,220(sp)
101029e4:	d8802c17 	ldw	r2,176(sp)
101029e8:	10000226 	beq	r2,zero,101029f4 <___vfprintf_internal_r+0x64>
101029ec:	10800e17 	ldw	r2,56(r2)
101029f0:	1000f926 	beq	r2,zero,10102dd8 <___vfprintf_internal_r+0x448>
101029f4:	b880030b 	ldhu	r2,12(r23)
101029f8:	10c8000c 	andi	r3,r2,8192
101029fc:	1800061e 	bne	r3,zero,10102a18 <___vfprintf_internal_r+0x88>
10102a00:	b9001917 	ldw	r4,100(r23)
10102a04:	00f7ffc4 	movi	r3,-8193
10102a08:	10880014 	ori	r2,r2,8192
10102a0c:	20c6703a 	and	r3,r4,r3
10102a10:	b880030d 	sth	r2,12(r23)
10102a14:	b8c01915 	stw	r3,100(r23)
10102a18:	10c0020c 	andi	r3,r2,8
10102a1c:	1800c126 	beq	r3,zero,10102d24 <___vfprintf_internal_r+0x394>
10102a20:	b8c00417 	ldw	r3,16(r23)
10102a24:	1800bf26 	beq	r3,zero,10102d24 <___vfprintf_internal_r+0x394>
10102a28:	1080068c 	andi	r2,r2,26
10102a2c:	00c00284 	movi	r3,10
10102a30:	10c0c426 	beq	r2,r3,10102d44 <___vfprintf_internal_r+0x3b4>
10102a34:	d8c00404 	addi	r3,sp,16
10102a38:	05040474 	movhi	r20,4113
10102a3c:	d9001e04 	addi	r4,sp,120
10102a40:	a53fbf84 	addi	r20,r20,-258
10102a44:	d8c01e15 	stw	r3,120(sp)
10102a48:	d8002015 	stw	zero,128(sp)
10102a4c:	d8001f15 	stw	zero,124(sp)
10102a50:	d8003315 	stw	zero,204(sp)
10102a54:	d8003615 	stw	zero,216(sp)
10102a58:	d8003815 	stw	zero,224(sp)
10102a5c:	1811883a 	mov	r8,r3
10102a60:	d8003915 	stw	zero,228(sp)
10102a64:	d8003a15 	stw	zero,232(sp)
10102a68:	d8002f15 	stw	zero,188(sp)
10102a6c:	d9002815 	stw	r4,160(sp)
10102a70:	a8800007 	ldb	r2,0(r21)
10102a74:	10027b26 	beq	r2,zero,10103464 <___vfprintf_internal_r+0xad4>
10102a78:	00c00944 	movi	r3,37
10102a7c:	a821883a 	mov	r16,r21
10102a80:	10c0021e 	bne	r2,r3,10102a8c <___vfprintf_internal_r+0xfc>
10102a84:	00001406 	br	10102ad8 <___vfprintf_internal_r+0x148>
10102a88:	10c00326 	beq	r2,r3,10102a98 <___vfprintf_internal_r+0x108>
10102a8c:	84000044 	addi	r16,r16,1
10102a90:	80800007 	ldb	r2,0(r16)
10102a94:	103ffc1e 	bne	r2,zero,10102a88 <___vfprintf_internal_r+0xf8>
10102a98:	8563c83a 	sub	r17,r16,r21
10102a9c:	88000e26 	beq	r17,zero,10102ad8 <___vfprintf_internal_r+0x148>
10102aa0:	d8c02017 	ldw	r3,128(sp)
10102aa4:	d8801f17 	ldw	r2,124(sp)
10102aa8:	45400015 	stw	r21,0(r8)
10102aac:	1c47883a 	add	r3,r3,r17
10102ab0:	10800044 	addi	r2,r2,1
10102ab4:	d8c02015 	stw	r3,128(sp)
10102ab8:	44400115 	stw	r17,4(r8)
10102abc:	d8801f15 	stw	r2,124(sp)
10102ac0:	00c001c4 	movi	r3,7
10102ac4:	1880a716 	blt	r3,r2,10102d64 <___vfprintf_internal_r+0x3d4>
10102ac8:	42000204 	addi	r8,r8,8
10102acc:	d9402f17 	ldw	r5,188(sp)
10102ad0:	2c4b883a 	add	r5,r5,r17
10102ad4:	d9402f15 	stw	r5,188(sp)
10102ad8:	80800007 	ldb	r2,0(r16)
10102adc:	1000a826 	beq	r2,zero,10102d80 <___vfprintf_internal_r+0x3f0>
10102ae0:	84400047 	ldb	r17,1(r16)
10102ae4:	00bfffc4 	movi	r2,-1
10102ae8:	85400044 	addi	r21,r16,1
10102aec:	d8002785 	stb	zero,158(sp)
10102af0:	0007883a 	mov	r3,zero
10102af4:	000f883a 	mov	r7,zero
10102af8:	d8802915 	stw	r2,164(sp)
10102afc:	d8003115 	stw	zero,196(sp)
10102b00:	0025883a 	mov	r18,zero
10102b04:	01401604 	movi	r5,88
10102b08:	01800244 	movi	r6,9
10102b0c:	02800a84 	movi	r10,42
10102b10:	02401b04 	movi	r9,108
10102b14:	ad400044 	addi	r21,r21,1
10102b18:	88bff804 	addi	r2,r17,-32
10102b1c:	28830436 	bltu	r5,r2,10103730 <___vfprintf_internal_r+0xda0>
10102b20:	100490ba 	slli	r2,r2,2
10102b24:	01040434 	movhi	r4,4112
10102b28:	210ace04 	addi	r4,r4,11064
10102b2c:	1105883a 	add	r2,r2,r4
10102b30:	10800017 	ldw	r2,0(r2)
10102b34:	1000683a 	jmp	r2
10102b38:	10103650 	cmplti	zero,r2,16601
10102b3c:	10103730 	cmpltui	zero,r2,16604
10102b40:	10103730 	cmpltui	zero,r2,16604
10102b44:	10103670 	cmpltui	zero,r2,16601
10102b48:	10103730 	cmpltui	zero,r2,16604
10102b4c:	10103730 	cmpltui	zero,r2,16604
10102b50:	10103730 	cmpltui	zero,r2,16604
10102b54:	10103730 	cmpltui	zero,r2,16604
10102b58:	10103730 	cmpltui	zero,r2,16604
10102b5c:	10103730 	cmpltui	zero,r2,16604
10102b60:	10102de4 	muli	zero,r2,16567
10102b64:	1010358c 	andi	zero,r2,16598
10102b68:	10103730 	cmpltui	zero,r2,16604
10102b6c:	10102cac 	andhi	zero,r2,16562
10102b70:	10102e0c 	andi	zero,r2,16568
10102b74:	10103730 	cmpltui	zero,r2,16604
10102b78:	10102e4c 	andi	zero,r2,16569
10102b7c:	10102e58 	cmpnei	zero,r2,16569
10102b80:	10102e58 	cmpnei	zero,r2,16569
10102b84:	10102e58 	cmpnei	zero,r2,16569
10102b88:	10102e58 	cmpnei	zero,r2,16569
10102b8c:	10102e58 	cmpnei	zero,r2,16569
10102b90:	10102e58 	cmpnei	zero,r2,16569
10102b94:	10102e58 	cmpnei	zero,r2,16569
10102b98:	10102e58 	cmpnei	zero,r2,16569
10102b9c:	10102e58 	cmpnei	zero,r2,16569
10102ba0:	10103730 	cmpltui	zero,r2,16604
10102ba4:	10103730 	cmpltui	zero,r2,16604
10102ba8:	10103730 	cmpltui	zero,r2,16604
10102bac:	10103730 	cmpltui	zero,r2,16604
10102bb0:	10103730 	cmpltui	zero,r2,16604
10102bb4:	10103730 	cmpltui	zero,r2,16604
10102bb8:	10103730 	cmpltui	zero,r2,16604
10102bbc:	10103730 	cmpltui	zero,r2,16604
10102bc0:	10103730 	cmpltui	zero,r2,16604
10102bc4:	10103730 	cmpltui	zero,r2,16604
10102bc8:	10102e8c 	andi	zero,r2,16570
10102bcc:	10102f48 	cmpgei	zero,r2,16573
10102bd0:	10103730 	cmpltui	zero,r2,16604
10102bd4:	10102f48 	cmpgei	zero,r2,16573
10102bd8:	10103730 	cmpltui	zero,r2,16604
10102bdc:	10103730 	cmpltui	zero,r2,16604
10102be0:	10103730 	cmpltui	zero,r2,16604
10102be4:	10103730 	cmpltui	zero,r2,16604
10102be8:	10102fe8 	cmpgeui	zero,r2,16575
10102bec:	10103730 	cmpltui	zero,r2,16604
10102bf0:	10103730 	cmpltui	zero,r2,16604
10102bf4:	10102ff4 	orhi	zero,r2,16575
10102bf8:	10103730 	cmpltui	zero,r2,16604
10102bfc:	10103730 	cmpltui	zero,r2,16604
10102c00:	10103730 	cmpltui	zero,r2,16604
10102c04:	10103730 	cmpltui	zero,r2,16604
10102c08:	10103730 	cmpltui	zero,r2,16604
10102c0c:	1010346c 	andhi	zero,r2,16593
10102c10:	10103730 	cmpltui	zero,r2,16604
10102c14:	10103730 	cmpltui	zero,r2,16604
10102c18:	101034cc 	andi	zero,r2,16595
10102c1c:	10103730 	cmpltui	zero,r2,16604
10102c20:	10103730 	cmpltui	zero,r2,16604
10102c24:	10103730 	cmpltui	zero,r2,16604
10102c28:	10103730 	cmpltui	zero,r2,16604
10102c2c:	10103730 	cmpltui	zero,r2,16604
10102c30:	10103730 	cmpltui	zero,r2,16604
10102c34:	10103730 	cmpltui	zero,r2,16604
10102c38:	10103730 	cmpltui	zero,r2,16604
10102c3c:	10103730 	cmpltui	zero,r2,16604
10102c40:	10103730 	cmpltui	zero,r2,16604
10102c44:	101036dc 	xori	zero,r2,16603
10102c48:	1010367c 	xorhi	zero,r2,16601
10102c4c:	10102f48 	cmpgei	zero,r2,16573
10102c50:	10102f48 	cmpgei	zero,r2,16573
10102c54:	10102f48 	cmpgei	zero,r2,16573
10102c58:	1010368c 	andi	zero,r2,16602
10102c5c:	1010367c 	xorhi	zero,r2,16601
10102c60:	10103730 	cmpltui	zero,r2,16604
10102c64:	10103730 	cmpltui	zero,r2,16604
10102c68:	10103698 	cmpnei	zero,r2,16602
10102c6c:	10103730 	cmpltui	zero,r2,16604
10102c70:	101036a8 	cmpgeui	zero,r2,16602
10102c74:	1010357c 	xorhi	zero,r2,16597
10102c78:	10102cb8 	rdprs	zero,r2,16562
10102c7c:	1010359c 	xori	zero,r2,16598
10102c80:	10103730 	cmpltui	zero,r2,16604
10102c84:	101035a8 	cmpgeui	zero,r2,16598
10102c88:	10103730 	cmpltui	zero,r2,16604
10102c8c:	10103604 	addi	zero,r2,16600
10102c90:	10103730 	cmpltui	zero,r2,16604
10102c94:	10103730 	cmpltui	zero,r2,16604
10102c98:	10103614 	ori	zero,r2,16600
10102c9c:	d9003117 	ldw	r4,196(sp)
10102ca0:	d8802d15 	stw	r2,180(sp)
10102ca4:	0109c83a 	sub	r4,zero,r4
10102ca8:	d9003115 	stw	r4,196(sp)
10102cac:	94800114 	ori	r18,r18,4
10102cb0:	ac400007 	ldb	r17,0(r21)
10102cb4:	003f9706 	br	10102b14 <___vfprintf_internal_r+0x184>
10102cb8:	00800c04 	movi	r2,48
10102cbc:	d9002d17 	ldw	r4,180(sp)
10102cc0:	d9402917 	ldw	r5,164(sp)
10102cc4:	d8802705 	stb	r2,156(sp)
10102cc8:	00801e04 	movi	r2,120
10102ccc:	d8802745 	stb	r2,157(sp)
10102cd0:	d8002785 	stb	zero,158(sp)
10102cd4:	20c00104 	addi	r3,r4,4
10102cd8:	24c00017 	ldw	r19,0(r4)
10102cdc:	002d883a 	mov	r22,zero
10102ce0:	90800094 	ori	r2,r18,2
10102ce4:	28029a16 	blt	r5,zero,10103750 <___vfprintf_internal_r+0xdc0>
10102ce8:	00bfdfc4 	movi	r2,-129
10102cec:	90a4703a 	and	r18,r18,r2
10102cf0:	d8c02d15 	stw	r3,180(sp)
10102cf4:	94800094 	ori	r18,r18,2
10102cf8:	9802871e 	bne	r19,zero,10103718 <___vfprintf_internal_r+0xd88>
10102cfc:	00840474 	movhi	r2,4113
10102d00:	10bfb804 	addi	r2,r2,-288
10102d04:	d8803915 	stw	r2,228(sp)
10102d08:	04401e04 	movi	r17,120
10102d0c:	d8802917 	ldw	r2,164(sp)
10102d10:	0039883a 	mov	fp,zero
10102d14:	1001e926 	beq	r2,zero,101034bc <___vfprintf_internal_r+0xb2c>
10102d18:	0027883a 	mov	r19,zero
10102d1c:	002d883a 	mov	r22,zero
10102d20:	00020506 	br	10103538 <___vfprintf_internal_r+0xba8>
10102d24:	d9002c17 	ldw	r4,176(sp)
10102d28:	b80b883a 	mov	r5,r23
10102d2c:	0104cc00 	call	10104cc0 <__swsetup_r>
10102d30:	1005ac1e 	bne	r2,zero,101043e4 <___vfprintf_internal_r+0x1a54>
10102d34:	b880030b 	ldhu	r2,12(r23)
10102d38:	00c00284 	movi	r3,10
10102d3c:	1080068c 	andi	r2,r2,26
10102d40:	10ff3c1e 	bne	r2,r3,10102a34 <___vfprintf_internal_r+0xa4>
10102d44:	b880038f 	ldh	r2,14(r23)
10102d48:	103f3a16 	blt	r2,zero,10102a34 <___vfprintf_internal_r+0xa4>
10102d4c:	d9c02d17 	ldw	r7,180(sp)
10102d50:	d9002c17 	ldw	r4,176(sp)
10102d54:	a80d883a 	mov	r6,r21
10102d58:	b80b883a 	mov	r5,r23
10102d5c:	0104ba40 	call	10104ba4 <__sbprintf>
10102d60:	00001106 	br	10102da8 <___vfprintf_internal_r+0x418>
10102d64:	d9002c17 	ldw	r4,176(sp)
10102d68:	d9801e04 	addi	r6,sp,120
10102d6c:	b80b883a 	mov	r5,r23
10102d70:	010897c0 	call	1010897c <__sprint_r>
10102d74:	1000081e 	bne	r2,zero,10102d98 <___vfprintf_internal_r+0x408>
10102d78:	da000404 	addi	r8,sp,16
10102d7c:	003f5306 	br	10102acc <___vfprintf_internal_r+0x13c>
10102d80:	d8802017 	ldw	r2,128(sp)
10102d84:	10000426 	beq	r2,zero,10102d98 <___vfprintf_internal_r+0x408>
10102d88:	d9002c17 	ldw	r4,176(sp)
10102d8c:	d9801e04 	addi	r6,sp,120
10102d90:	b80b883a 	mov	r5,r23
10102d94:	010897c0 	call	1010897c <__sprint_r>
10102d98:	b880030b 	ldhu	r2,12(r23)
10102d9c:	1080100c 	andi	r2,r2,64
10102da0:	1005901e 	bne	r2,zero,101043e4 <___vfprintf_internal_r+0x1a54>
10102da4:	d8802f17 	ldw	r2,188(sp)
10102da8:	dfc04717 	ldw	ra,284(sp)
10102dac:	df004617 	ldw	fp,280(sp)
10102db0:	ddc04517 	ldw	r23,276(sp)
10102db4:	dd804417 	ldw	r22,272(sp)
10102db8:	dd404317 	ldw	r21,268(sp)
10102dbc:	dd004217 	ldw	r20,264(sp)
10102dc0:	dcc04117 	ldw	r19,260(sp)
10102dc4:	dc804017 	ldw	r18,256(sp)
10102dc8:	dc403f17 	ldw	r17,252(sp)
10102dcc:	dc003e17 	ldw	r16,248(sp)
10102dd0:	dec04804 	addi	sp,sp,288
10102dd4:	f800283a 	ret
10102dd8:	d9002c17 	ldw	r4,176(sp)
10102ddc:	0100ba80 	call	10100ba8 <__sinit>
10102de0:	003f0406 	br	101029f4 <___vfprintf_internal_r+0x64>
10102de4:	d8802d17 	ldw	r2,180(sp)
10102de8:	d9002d17 	ldw	r4,180(sp)
10102dec:	10800017 	ldw	r2,0(r2)
10102df0:	d8803115 	stw	r2,196(sp)
10102df4:	20800104 	addi	r2,r4,4
10102df8:	d9003117 	ldw	r4,196(sp)
10102dfc:	203fa716 	blt	r4,zero,10102c9c <___vfprintf_internal_r+0x30c>
10102e00:	d8802d15 	stw	r2,180(sp)
10102e04:	ac400007 	ldb	r17,0(r21)
10102e08:	003f4206 	br	10102b14 <___vfprintf_internal_r+0x184>
10102e0c:	ac400007 	ldb	r17,0(r21)
10102e10:	aac00044 	addi	r11,r21,1
10102e14:	8a872826 	beq	r17,r10,10104ab8 <___vfprintf_internal_r+0x2128>
10102e18:	88bff404 	addi	r2,r17,-48
10102e1c:	0009883a 	mov	r4,zero
10102e20:	30867d36 	bltu	r6,r2,10104818 <___vfprintf_internal_r+0x1e88>
10102e24:	5c400007 	ldb	r17,0(r11)
10102e28:	210002a4 	muli	r4,r4,10
10102e2c:	5d400044 	addi	r21,r11,1
10102e30:	a817883a 	mov	r11,r21
10102e34:	2089883a 	add	r4,r4,r2
10102e38:	88bff404 	addi	r2,r17,-48
10102e3c:	30bff92e 	bgeu	r6,r2,10102e24 <___vfprintf_internal_r+0x494>
10102e40:	2005c916 	blt	r4,zero,10104568 <___vfprintf_internal_r+0x1bd8>
10102e44:	d9002915 	stw	r4,164(sp)
10102e48:	003f3306 	br	10102b18 <___vfprintf_internal_r+0x188>
10102e4c:	94802014 	ori	r18,r18,128
10102e50:	ac400007 	ldb	r17,0(r21)
10102e54:	003f2f06 	br	10102b14 <___vfprintf_internal_r+0x184>
10102e58:	a809883a 	mov	r4,r21
10102e5c:	d8003115 	stw	zero,196(sp)
10102e60:	88bff404 	addi	r2,r17,-48
10102e64:	0017883a 	mov	r11,zero
10102e68:	24400007 	ldb	r17,0(r4)
10102e6c:	5ac002a4 	muli	r11,r11,10
10102e70:	ad400044 	addi	r21,r21,1
10102e74:	a809883a 	mov	r4,r21
10102e78:	12d7883a 	add	r11,r2,r11
10102e7c:	88bff404 	addi	r2,r17,-48
10102e80:	30bff92e 	bgeu	r6,r2,10102e68 <___vfprintf_internal_r+0x4d8>
10102e84:	dac03115 	stw	r11,196(sp)
10102e88:	003f2306 	br	10102b18 <___vfprintf_internal_r+0x188>
10102e8c:	18c03fcc 	andi	r3,r3,255
10102e90:	18072b1e 	bne	r3,zero,10104b40 <___vfprintf_internal_r+0x21b0>
10102e94:	94800414 	ori	r18,r18,16
10102e98:	9080080c 	andi	r2,r18,32
10102e9c:	10037b26 	beq	r2,zero,10103c8c <___vfprintf_internal_r+0x12fc>
10102ea0:	d9402d17 	ldw	r5,180(sp)
10102ea4:	28800117 	ldw	r2,4(r5)
10102ea8:	2cc00017 	ldw	r19,0(r5)
10102eac:	29400204 	addi	r5,r5,8
10102eb0:	d9402d15 	stw	r5,180(sp)
10102eb4:	102d883a 	mov	r22,r2
10102eb8:	10044b16 	blt	r2,zero,10103fe8 <___vfprintf_internal_r+0x1658>
10102ebc:	d9402917 	ldw	r5,164(sp)
10102ec0:	df002783 	ldbu	fp,158(sp)
10102ec4:	2803bc16 	blt	r5,zero,10103db8 <___vfprintf_internal_r+0x1428>
10102ec8:	00ffdfc4 	movi	r3,-129
10102ecc:	9d84b03a 	or	r2,r19,r22
10102ed0:	90e4703a 	and	r18,r18,r3
10102ed4:	10017726 	beq	r2,zero,101034b4 <___vfprintf_internal_r+0xb24>
10102ed8:	b0038326 	beq	r22,zero,10103ce8 <___vfprintf_internal_r+0x1358>
10102edc:	dc402a15 	stw	r17,168(sp)
10102ee0:	dc001e04 	addi	r16,sp,120
10102ee4:	b023883a 	mov	r17,r22
10102ee8:	402d883a 	mov	r22,r8
10102eec:	9809883a 	mov	r4,r19
10102ef0:	880b883a 	mov	r5,r17
10102ef4:	01800284 	movi	r6,10
10102ef8:	000f883a 	mov	r7,zero
10102efc:	010aa4c0 	call	1010aa4c <__umoddi3>
10102f00:	10800c04 	addi	r2,r2,48
10102f04:	843fffc4 	addi	r16,r16,-1
10102f08:	9809883a 	mov	r4,r19
10102f0c:	880b883a 	mov	r5,r17
10102f10:	80800005 	stb	r2,0(r16)
10102f14:	01800284 	movi	r6,10
10102f18:	000f883a 	mov	r7,zero
10102f1c:	010a4d40 	call	1010a4d4 <__udivdi3>
10102f20:	1027883a 	mov	r19,r2
10102f24:	10c4b03a 	or	r2,r2,r3
10102f28:	1823883a 	mov	r17,r3
10102f2c:	103fef1e 	bne	r2,zero,10102eec <___vfprintf_internal_r+0x55c>
10102f30:	d8c02817 	ldw	r3,160(sp)
10102f34:	dc402a17 	ldw	r17,168(sp)
10102f38:	b011883a 	mov	r8,r22
10102f3c:	1c07c83a 	sub	r3,r3,r16
10102f40:	d8c02e15 	stw	r3,184(sp)
10102f44:	00005906 	br	101030ac <___vfprintf_internal_r+0x71c>
10102f48:	18c03fcc 	andi	r3,r3,255
10102f4c:	1806fa1e 	bne	r3,zero,10104b38 <___vfprintf_internal_r+0x21a8>
10102f50:	9080020c 	andi	r2,r18,8
10102f54:	10048a26 	beq	r2,zero,10104180 <___vfprintf_internal_r+0x17f0>
10102f58:	d8c02d17 	ldw	r3,180(sp)
10102f5c:	d9002d17 	ldw	r4,180(sp)
10102f60:	d9402d17 	ldw	r5,180(sp)
10102f64:	18c00017 	ldw	r3,0(r3)
10102f68:	21000117 	ldw	r4,4(r4)
10102f6c:	29400204 	addi	r5,r5,8
10102f70:	d8c03615 	stw	r3,216(sp)
10102f74:	d9003815 	stw	r4,224(sp)
10102f78:	d9402d15 	stw	r5,180(sp)
10102f7c:	d9003617 	ldw	r4,216(sp)
10102f80:	d9403817 	ldw	r5,224(sp)
10102f84:	da003d15 	stw	r8,244(sp)
10102f88:	04000044 	movi	r16,1
10102f8c:	01087300 	call	10108730 <__fpclassifyd>
10102f90:	da003d17 	ldw	r8,244(sp)
10102f94:	14041f1e 	bne	r2,r16,10104014 <___vfprintf_internal_r+0x1684>
10102f98:	d9003617 	ldw	r4,216(sp)
10102f9c:	d9403817 	ldw	r5,224(sp)
10102fa0:	000d883a 	mov	r6,zero
10102fa4:	000f883a 	mov	r7,zero
10102fa8:	010c4300 	call	1010c430 <__ledf2>
10102fac:	da003d17 	ldw	r8,244(sp)
10102fb0:	1005be16 	blt	r2,zero,101046ac <___vfprintf_internal_r+0x1d1c>
10102fb4:	df002783 	ldbu	fp,158(sp)
10102fb8:	008011c4 	movi	r2,71
10102fbc:	1445330e 	bge	r2,r17,1010448c <___vfprintf_internal_r+0x1afc>
10102fc0:	04040474 	movhi	r16,4113
10102fc4:	843fb004 	addi	r16,r16,-320
10102fc8:	00c000c4 	movi	r3,3
10102fcc:	00bfdfc4 	movi	r2,-129
10102fd0:	d8c02a15 	stw	r3,168(sp)
10102fd4:	90a4703a 	and	r18,r18,r2
10102fd8:	d8c02e15 	stw	r3,184(sp)
10102fdc:	d8002915 	stw	zero,164(sp)
10102fe0:	d8003215 	stw	zero,200(sp)
10102fe4:	00003706 	br	101030c4 <___vfprintf_internal_r+0x734>
10102fe8:	94800214 	ori	r18,r18,8
10102fec:	ac400007 	ldb	r17,0(r21)
10102ff0:	003ec806 	br	10102b14 <___vfprintf_internal_r+0x184>
10102ff4:	18c03fcc 	andi	r3,r3,255
10102ff8:	1806db1e 	bne	r3,zero,10104b68 <___vfprintf_internal_r+0x21d8>
10102ffc:	94800414 	ori	r18,r18,16
10103000:	9080080c 	andi	r2,r18,32
10103004:	1002d826 	beq	r2,zero,10103b68 <___vfprintf_internal_r+0x11d8>
10103008:	d9402d17 	ldw	r5,180(sp)
1010300c:	d8c02917 	ldw	r3,164(sp)
10103010:	d8002785 	stb	zero,158(sp)
10103014:	28800204 	addi	r2,r5,8
10103018:	2cc00017 	ldw	r19,0(r5)
1010301c:	2d800117 	ldw	r22,4(r5)
10103020:	18048f16 	blt	r3,zero,10104260 <___vfprintf_internal_r+0x18d0>
10103024:	013fdfc4 	movi	r4,-129
10103028:	9d86b03a 	or	r3,r19,r22
1010302c:	d8802d15 	stw	r2,180(sp)
10103030:	9124703a 	and	r18,r18,r4
10103034:	1802d91e 	bne	r3,zero,10103b9c <___vfprintf_internal_r+0x120c>
10103038:	d8c02917 	ldw	r3,164(sp)
1010303c:	0039883a 	mov	fp,zero
10103040:	1805c326 	beq	r3,zero,10104750 <___vfprintf_internal_r+0x1dc0>
10103044:	0027883a 	mov	r19,zero
10103048:	002d883a 	mov	r22,zero
1010304c:	dc001e04 	addi	r16,sp,120
10103050:	9806d0fa 	srli	r3,r19,3
10103054:	b008977a 	slli	r4,r22,29
10103058:	b02cd0fa 	srli	r22,r22,3
1010305c:	9cc001cc 	andi	r19,r19,7
10103060:	98800c04 	addi	r2,r19,48
10103064:	843fffc4 	addi	r16,r16,-1
10103068:	20e6b03a 	or	r19,r4,r3
1010306c:	80800005 	stb	r2,0(r16)
10103070:	9d86b03a 	or	r3,r19,r22
10103074:	183ff61e 	bne	r3,zero,10103050 <___vfprintf_internal_r+0x6c0>
10103078:	90c0004c 	andi	r3,r18,1
1010307c:	18013b26 	beq	r3,zero,1010356c <___vfprintf_internal_r+0xbdc>
10103080:	10803fcc 	andi	r2,r2,255
10103084:	1080201c 	xori	r2,r2,128
10103088:	10bfe004 	addi	r2,r2,-128
1010308c:	00c00c04 	movi	r3,48
10103090:	10c13626 	beq	r2,r3,1010356c <___vfprintf_internal_r+0xbdc>
10103094:	80ffffc5 	stb	r3,-1(r16)
10103098:	d8c02817 	ldw	r3,160(sp)
1010309c:	80bfffc4 	addi	r2,r16,-1
101030a0:	1021883a 	mov	r16,r2
101030a4:	1887c83a 	sub	r3,r3,r2
101030a8:	d8c02e15 	stw	r3,184(sp)
101030ac:	d8802e17 	ldw	r2,184(sp)
101030b0:	d9002917 	ldw	r4,164(sp)
101030b4:	1100010e 	bge	r2,r4,101030bc <___vfprintf_internal_r+0x72c>
101030b8:	2005883a 	mov	r2,r4
101030bc:	d8802a15 	stw	r2,168(sp)
101030c0:	d8003215 	stw	zero,200(sp)
101030c4:	e7003fcc 	andi	fp,fp,255
101030c8:	e700201c 	xori	fp,fp,128
101030cc:	e73fe004 	addi	fp,fp,-128
101030d0:	e0000326 	beq	fp,zero,101030e0 <___vfprintf_internal_r+0x750>
101030d4:	d8c02a17 	ldw	r3,168(sp)
101030d8:	18c00044 	addi	r3,r3,1
101030dc:	d8c02a15 	stw	r3,168(sp)
101030e0:	90c0008c 	andi	r3,r18,2
101030e4:	d8c02b15 	stw	r3,172(sp)
101030e8:	18000326 	beq	r3,zero,101030f8 <___vfprintf_internal_r+0x768>
101030ec:	d8c02a17 	ldw	r3,168(sp)
101030f0:	18c00084 	addi	r3,r3,2
101030f4:	d8c02a15 	stw	r3,168(sp)
101030f8:	90c0210c 	andi	r3,r18,132
101030fc:	d8c03015 	stw	r3,192(sp)
10103100:	1801a31e 	bne	r3,zero,10103790 <___vfprintf_internal_r+0xe00>
10103104:	d9003117 	ldw	r4,196(sp)
10103108:	d8c02a17 	ldw	r3,168(sp)
1010310c:	20e7c83a 	sub	r19,r4,r3
10103110:	04c19f0e 	bge	zero,r19,10103790 <___vfprintf_internal_r+0xe00>
10103114:	02400404 	movi	r9,16
10103118:	d8c02017 	ldw	r3,128(sp)
1010311c:	d8801f17 	ldw	r2,124(sp)
10103120:	4cc50d0e 	bge	r9,r19,10104558 <___vfprintf_internal_r+0x1bc8>
10103124:	01440474 	movhi	r5,4113
10103128:	297fc384 	addi	r5,r5,-242
1010312c:	dc403b15 	stw	r17,236(sp)
10103130:	d9403515 	stw	r5,212(sp)
10103134:	9823883a 	mov	r17,r19
10103138:	482d883a 	mov	r22,r9
1010313c:	9027883a 	mov	r19,r18
10103140:	070001c4 	movi	fp,7
10103144:	8025883a 	mov	r18,r16
10103148:	dc002c17 	ldw	r16,176(sp)
1010314c:	00000306 	br	1010315c <___vfprintf_internal_r+0x7cc>
10103150:	8c7ffc04 	addi	r17,r17,-16
10103154:	42000204 	addi	r8,r8,8
10103158:	b440130e 	bge	r22,r17,101031a8 <___vfprintf_internal_r+0x818>
1010315c:	01040474 	movhi	r4,4113
10103160:	18c00404 	addi	r3,r3,16
10103164:	10800044 	addi	r2,r2,1
10103168:	213fc384 	addi	r4,r4,-242
1010316c:	41000015 	stw	r4,0(r8)
10103170:	45800115 	stw	r22,4(r8)
10103174:	d8c02015 	stw	r3,128(sp)
10103178:	d8801f15 	stw	r2,124(sp)
1010317c:	e0bff40e 	bge	fp,r2,10103150 <___vfprintf_internal_r+0x7c0>
10103180:	d9801e04 	addi	r6,sp,120
10103184:	b80b883a 	mov	r5,r23
10103188:	8009883a 	mov	r4,r16
1010318c:	010897c0 	call	1010897c <__sprint_r>
10103190:	103f011e 	bne	r2,zero,10102d98 <___vfprintf_internal_r+0x408>
10103194:	8c7ffc04 	addi	r17,r17,-16
10103198:	d8c02017 	ldw	r3,128(sp)
1010319c:	d8801f17 	ldw	r2,124(sp)
101031a0:	da000404 	addi	r8,sp,16
101031a4:	b47fed16 	blt	r22,r17,1010315c <___vfprintf_internal_r+0x7cc>
101031a8:	9021883a 	mov	r16,r18
101031ac:	9825883a 	mov	r18,r19
101031b0:	8827883a 	mov	r19,r17
101031b4:	dc403b17 	ldw	r17,236(sp)
101031b8:	d9403517 	ldw	r5,212(sp)
101031bc:	98c7883a 	add	r3,r19,r3
101031c0:	10800044 	addi	r2,r2,1
101031c4:	41400015 	stw	r5,0(r8)
101031c8:	44c00115 	stw	r19,4(r8)
101031cc:	d8c02015 	stw	r3,128(sp)
101031d0:	d8801f15 	stw	r2,124(sp)
101031d4:	010001c4 	movi	r4,7
101031d8:	2082a316 	blt	r4,r2,10103c68 <___vfprintf_internal_r+0x12d8>
101031dc:	df002787 	ldb	fp,158(sp)
101031e0:	42000204 	addi	r8,r8,8
101031e4:	e0000c26 	beq	fp,zero,10103218 <___vfprintf_internal_r+0x888>
101031e8:	d8801f17 	ldw	r2,124(sp)
101031ec:	d9002784 	addi	r4,sp,158
101031f0:	18c00044 	addi	r3,r3,1
101031f4:	10800044 	addi	r2,r2,1
101031f8:	41000015 	stw	r4,0(r8)
101031fc:	01000044 	movi	r4,1
10103200:	41000115 	stw	r4,4(r8)
10103204:	d8c02015 	stw	r3,128(sp)
10103208:	d8801f15 	stw	r2,124(sp)
1010320c:	010001c4 	movi	r4,7
10103210:	20823c16 	blt	r4,r2,10103b04 <___vfprintf_internal_r+0x1174>
10103214:	42000204 	addi	r8,r8,8
10103218:	d8802b17 	ldw	r2,172(sp)
1010321c:	10000c26 	beq	r2,zero,10103250 <___vfprintf_internal_r+0x8c0>
10103220:	d8801f17 	ldw	r2,124(sp)
10103224:	d9002704 	addi	r4,sp,156
10103228:	18c00084 	addi	r3,r3,2
1010322c:	10800044 	addi	r2,r2,1
10103230:	41000015 	stw	r4,0(r8)
10103234:	01000084 	movi	r4,2
10103238:	41000115 	stw	r4,4(r8)
1010323c:	d8c02015 	stw	r3,128(sp)
10103240:	d8801f15 	stw	r2,124(sp)
10103244:	010001c4 	movi	r4,7
10103248:	20823616 	blt	r4,r2,10103b24 <___vfprintf_internal_r+0x1194>
1010324c:	42000204 	addi	r8,r8,8
10103250:	d9003017 	ldw	r4,192(sp)
10103254:	00802004 	movi	r2,128
10103258:	20819926 	beq	r4,r2,101038c0 <___vfprintf_internal_r+0xf30>
1010325c:	d9402917 	ldw	r5,164(sp)
10103260:	d8802e17 	ldw	r2,184(sp)
10103264:	28adc83a 	sub	r22,r5,r2
10103268:	0580310e 	bge	zero,r22,10103330 <___vfprintf_internal_r+0x9a0>
1010326c:	07000404 	movi	fp,16
10103270:	d8801f17 	ldw	r2,124(sp)
10103274:	e584140e 	bge	fp,r22,101042c8 <___vfprintf_internal_r+0x1938>
10103278:	01440474 	movhi	r5,4113
1010327c:	297fbf84 	addi	r5,r5,-258
10103280:	dc402915 	stw	r17,164(sp)
10103284:	d9402b15 	stw	r5,172(sp)
10103288:	b023883a 	mov	r17,r22
1010328c:	04c001c4 	movi	r19,7
10103290:	a82d883a 	mov	r22,r21
10103294:	902b883a 	mov	r21,r18
10103298:	8025883a 	mov	r18,r16
1010329c:	dc002c17 	ldw	r16,176(sp)
101032a0:	00000306 	br	101032b0 <___vfprintf_internal_r+0x920>
101032a4:	8c7ffc04 	addi	r17,r17,-16
101032a8:	42000204 	addi	r8,r8,8
101032ac:	e440110e 	bge	fp,r17,101032f4 <___vfprintf_internal_r+0x964>
101032b0:	18c00404 	addi	r3,r3,16
101032b4:	10800044 	addi	r2,r2,1
101032b8:	45000015 	stw	r20,0(r8)
101032bc:	47000115 	stw	fp,4(r8)
101032c0:	d8c02015 	stw	r3,128(sp)
101032c4:	d8801f15 	stw	r2,124(sp)
101032c8:	98bff60e 	bge	r19,r2,101032a4 <___vfprintf_internal_r+0x914>
101032cc:	d9801e04 	addi	r6,sp,120
101032d0:	b80b883a 	mov	r5,r23
101032d4:	8009883a 	mov	r4,r16
101032d8:	010897c0 	call	1010897c <__sprint_r>
101032dc:	103eae1e 	bne	r2,zero,10102d98 <___vfprintf_internal_r+0x408>
101032e0:	8c7ffc04 	addi	r17,r17,-16
101032e4:	d8c02017 	ldw	r3,128(sp)
101032e8:	d8801f17 	ldw	r2,124(sp)
101032ec:	da000404 	addi	r8,sp,16
101032f0:	e47fef16 	blt	fp,r17,101032b0 <___vfprintf_internal_r+0x920>
101032f4:	9021883a 	mov	r16,r18
101032f8:	a825883a 	mov	r18,r21
101032fc:	b02b883a 	mov	r21,r22
10103300:	882d883a 	mov	r22,r17
10103304:	dc402917 	ldw	r17,164(sp)
10103308:	d9002b17 	ldw	r4,172(sp)
1010330c:	1d87883a 	add	r3,r3,r22
10103310:	10800044 	addi	r2,r2,1
10103314:	41000015 	stw	r4,0(r8)
10103318:	45800115 	stw	r22,4(r8)
1010331c:	d8c02015 	stw	r3,128(sp)
10103320:	d8801f15 	stw	r2,124(sp)
10103324:	010001c4 	movi	r4,7
10103328:	2081ee16 	blt	r4,r2,10103ae4 <___vfprintf_internal_r+0x1154>
1010332c:	42000204 	addi	r8,r8,8
10103330:	9080400c 	andi	r2,r18,256
10103334:	1001181e 	bne	r2,zero,10103798 <___vfprintf_internal_r+0xe08>
10103338:	d9402e17 	ldw	r5,184(sp)
1010333c:	d8801f17 	ldw	r2,124(sp)
10103340:	44000015 	stw	r16,0(r8)
10103344:	1947883a 	add	r3,r3,r5
10103348:	10800044 	addi	r2,r2,1
1010334c:	41400115 	stw	r5,4(r8)
10103350:	d8c02015 	stw	r3,128(sp)
10103354:	d8801f15 	stw	r2,124(sp)
10103358:	010001c4 	movi	r4,7
1010335c:	2081d316 	blt	r4,r2,10103aac <___vfprintf_internal_r+0x111c>
10103360:	42000204 	addi	r8,r8,8
10103364:	9480010c 	andi	r18,r18,4
10103368:	90003226 	beq	r18,zero,10103434 <___vfprintf_internal_r+0xaa4>
1010336c:	d9403117 	ldw	r5,196(sp)
10103370:	d8802a17 	ldw	r2,168(sp)
10103374:	28a1c83a 	sub	r16,r5,r2
10103378:	04002e0e 	bge	zero,r16,10103434 <___vfprintf_internal_r+0xaa4>
1010337c:	04400404 	movi	r17,16
10103380:	d8801f17 	ldw	r2,124(sp)
10103384:	8c04a20e 	bge	r17,r16,10104610 <___vfprintf_internal_r+0x1c80>
10103388:	01440474 	movhi	r5,4113
1010338c:	297fc384 	addi	r5,r5,-242
10103390:	d9403515 	stw	r5,212(sp)
10103394:	048001c4 	movi	r18,7
10103398:	dcc02c17 	ldw	r19,176(sp)
1010339c:	00000306 	br	101033ac <___vfprintf_internal_r+0xa1c>
101033a0:	843ffc04 	addi	r16,r16,-16
101033a4:	42000204 	addi	r8,r8,8
101033a8:	8c00130e 	bge	r17,r16,101033f8 <___vfprintf_internal_r+0xa68>
101033ac:	01040474 	movhi	r4,4113
101033b0:	18c00404 	addi	r3,r3,16
101033b4:	10800044 	addi	r2,r2,1
101033b8:	213fc384 	addi	r4,r4,-242
101033bc:	41000015 	stw	r4,0(r8)
101033c0:	44400115 	stw	r17,4(r8)
101033c4:	d8c02015 	stw	r3,128(sp)
101033c8:	d8801f15 	stw	r2,124(sp)
101033cc:	90bff40e 	bge	r18,r2,101033a0 <___vfprintf_internal_r+0xa10>
101033d0:	d9801e04 	addi	r6,sp,120
101033d4:	b80b883a 	mov	r5,r23
101033d8:	9809883a 	mov	r4,r19
101033dc:	010897c0 	call	1010897c <__sprint_r>
101033e0:	103e6d1e 	bne	r2,zero,10102d98 <___vfprintf_internal_r+0x408>
101033e4:	843ffc04 	addi	r16,r16,-16
101033e8:	d8c02017 	ldw	r3,128(sp)
101033ec:	d8801f17 	ldw	r2,124(sp)
101033f0:	da000404 	addi	r8,sp,16
101033f4:	8c3fed16 	blt	r17,r16,101033ac <___vfprintf_internal_r+0xa1c>
101033f8:	d9403517 	ldw	r5,212(sp)
101033fc:	1c07883a 	add	r3,r3,r16
10103400:	10800044 	addi	r2,r2,1
10103404:	41400015 	stw	r5,0(r8)
10103408:	44000115 	stw	r16,4(r8)
1010340c:	d8c02015 	stw	r3,128(sp)
10103410:	d8801f15 	stw	r2,124(sp)
10103414:	010001c4 	movi	r4,7
10103418:	2080060e 	bge	r4,r2,10103434 <___vfprintf_internal_r+0xaa4>
1010341c:	d9002c17 	ldw	r4,176(sp)
10103420:	d9801e04 	addi	r6,sp,120
10103424:	b80b883a 	mov	r5,r23
10103428:	010897c0 	call	1010897c <__sprint_r>
1010342c:	103e5a1e 	bne	r2,zero,10102d98 <___vfprintf_internal_r+0x408>
10103430:	d8c02017 	ldw	r3,128(sp)
10103434:	d8803117 	ldw	r2,196(sp)
10103438:	d9002a17 	ldw	r4,168(sp)
1010343c:	1100010e 	bge	r2,r4,10103444 <___vfprintf_internal_r+0xab4>
10103440:	2005883a 	mov	r2,r4
10103444:	d9402f17 	ldw	r5,188(sp)
10103448:	288b883a 	add	r5,r5,r2
1010344c:	d9402f15 	stw	r5,188(sp)
10103450:	18019e1e 	bne	r3,zero,10103acc <___vfprintf_internal_r+0x113c>
10103454:	a8800007 	ldb	r2,0(r21)
10103458:	d8001f15 	stw	zero,124(sp)
1010345c:	da000404 	addi	r8,sp,16
10103460:	103d851e 	bne	r2,zero,10102a78 <___vfprintf_internal_r+0xe8>
10103464:	a821883a 	mov	r16,r21
10103468:	003d9b06 	br	10102ad8 <___vfprintf_internal_r+0x148>
1010346c:	18c03fcc 	andi	r3,r3,255
10103470:	1805c11e 	bne	r3,zero,10104b78 <___vfprintf_internal_r+0x21e8>
10103474:	94800414 	ori	r18,r18,16
10103478:	9080080c 	andi	r2,r18,32
1010347c:	10020c26 	beq	r2,zero,10103cb0 <___vfprintf_internal_r+0x1320>
10103480:	d8802d17 	ldw	r2,180(sp)
10103484:	d9002917 	ldw	r4,164(sp)
10103488:	d8002785 	stb	zero,158(sp)
1010348c:	10c00204 	addi	r3,r2,8
10103490:	14c00017 	ldw	r19,0(r2)
10103494:	15800117 	ldw	r22,4(r2)
10103498:	20040f16 	blt	r4,zero,101044d8 <___vfprintf_internal_r+0x1b48>
1010349c:	013fdfc4 	movi	r4,-129
101034a0:	9d84b03a 	or	r2,r19,r22
101034a4:	d8c02d15 	stw	r3,180(sp)
101034a8:	9124703a 	and	r18,r18,r4
101034ac:	0039883a 	mov	fp,zero
101034b0:	103e891e 	bne	r2,zero,10102ed8 <___vfprintf_internal_r+0x548>
101034b4:	d9002917 	ldw	r4,164(sp)
101034b8:	2002c11e 	bne	r4,zero,10103fc0 <___vfprintf_internal_r+0x1630>
101034bc:	d8002915 	stw	zero,164(sp)
101034c0:	d8002e15 	stw	zero,184(sp)
101034c4:	dc001e04 	addi	r16,sp,120
101034c8:	003ef806 	br	101030ac <___vfprintf_internal_r+0x71c>
101034cc:	18c03fcc 	andi	r3,r3,255
101034d0:	18059d1e 	bne	r3,zero,10104b48 <___vfprintf_internal_r+0x21b8>
101034d4:	01440474 	movhi	r5,4113
101034d8:	297fb304 	addi	r5,r5,-308
101034dc:	d9403915 	stw	r5,228(sp)
101034e0:	9080080c 	andi	r2,r18,32
101034e4:	10005226 	beq	r2,zero,10103630 <___vfprintf_internal_r+0xca0>
101034e8:	d8802d17 	ldw	r2,180(sp)
101034ec:	14c00017 	ldw	r19,0(r2)
101034f0:	15800117 	ldw	r22,4(r2)
101034f4:	10800204 	addi	r2,r2,8
101034f8:	d8802d15 	stw	r2,180(sp)
101034fc:	9080004c 	andi	r2,r18,1
10103500:	10019026 	beq	r2,zero,10103b44 <___vfprintf_internal_r+0x11b4>
10103504:	9d84b03a 	or	r2,r19,r22
10103508:	10036926 	beq	r2,zero,101042b0 <___vfprintf_internal_r+0x1920>
1010350c:	d8c02917 	ldw	r3,164(sp)
10103510:	00800c04 	movi	r2,48
10103514:	d8802705 	stb	r2,156(sp)
10103518:	dc402745 	stb	r17,157(sp)
1010351c:	d8002785 	stb	zero,158(sp)
10103520:	90800094 	ori	r2,r18,2
10103524:	18045d16 	blt	r3,zero,1010469c <___vfprintf_internal_r+0x1d0c>
10103528:	00bfdfc4 	movi	r2,-129
1010352c:	90a4703a 	and	r18,r18,r2
10103530:	94800094 	ori	r18,r18,2
10103534:	0039883a 	mov	fp,zero
10103538:	d9003917 	ldw	r4,228(sp)
1010353c:	dc001e04 	addi	r16,sp,120
10103540:	988003cc 	andi	r2,r19,15
10103544:	b006973a 	slli	r3,r22,28
10103548:	2085883a 	add	r2,r4,r2
1010354c:	9826d13a 	srli	r19,r19,4
10103550:	10800003 	ldbu	r2,0(r2)
10103554:	b02cd13a 	srli	r22,r22,4
10103558:	843fffc4 	addi	r16,r16,-1
1010355c:	1ce6b03a 	or	r19,r3,r19
10103560:	80800005 	stb	r2,0(r16)
10103564:	9d84b03a 	or	r2,r19,r22
10103568:	103ff51e 	bne	r2,zero,10103540 <___vfprintf_internal_r+0xbb0>
1010356c:	d8c02817 	ldw	r3,160(sp)
10103570:	1c07c83a 	sub	r3,r3,r16
10103574:	d8c02e15 	stw	r3,184(sp)
10103578:	003ecc06 	br	101030ac <___vfprintf_internal_r+0x71c>
1010357c:	18c03fcc 	andi	r3,r3,255
10103580:	183e9f26 	beq	r3,zero,10103000 <___vfprintf_internal_r+0x670>
10103584:	d9c02785 	stb	r7,158(sp)
10103588:	003e9d06 	br	10103000 <___vfprintf_internal_r+0x670>
1010358c:	00c00044 	movi	r3,1
10103590:	01c00ac4 	movi	r7,43
10103594:	ac400007 	ldb	r17,0(r21)
10103598:	003d5e06 	br	10102b14 <___vfprintf_internal_r+0x184>
1010359c:	94800814 	ori	r18,r18,32
101035a0:	ac400007 	ldb	r17,0(r21)
101035a4:	003d5b06 	br	10102b14 <___vfprintf_internal_r+0x184>
101035a8:	d8c02d17 	ldw	r3,180(sp)
101035ac:	d8002785 	stb	zero,158(sp)
101035b0:	1c000017 	ldw	r16,0(r3)
101035b4:	1cc00104 	addi	r19,r3,4
101035b8:	80041926 	beq	r16,zero,10104620 <___vfprintf_internal_r+0x1c90>
101035bc:	d9002917 	ldw	r4,164(sp)
101035c0:	2003d016 	blt	r4,zero,10104504 <___vfprintf_internal_r+0x1b74>
101035c4:	200d883a 	mov	r6,r4
101035c8:	000b883a 	mov	r5,zero
101035cc:	8009883a 	mov	r4,r16
101035d0:	da003d15 	stw	r8,244(sp)
101035d4:	0106de80 	call	10106de8 <memchr>
101035d8:	da003d17 	ldw	r8,244(sp)
101035dc:	10045426 	beq	r2,zero,10104730 <___vfprintf_internal_r+0x1da0>
101035e0:	1405c83a 	sub	r2,r2,r16
101035e4:	d8802e15 	stw	r2,184(sp)
101035e8:	1003cc16 	blt	r2,zero,1010451c <___vfprintf_internal_r+0x1b8c>
101035ec:	df002783 	ldbu	fp,158(sp)
101035f0:	d8802a15 	stw	r2,168(sp)
101035f4:	dcc02d15 	stw	r19,180(sp)
101035f8:	d8002915 	stw	zero,164(sp)
101035fc:	d8003215 	stw	zero,200(sp)
10103600:	003eb006 	br	101030c4 <___vfprintf_internal_r+0x734>
10103604:	18c03fcc 	andi	r3,r3,255
10103608:	183f9b26 	beq	r3,zero,10103478 <___vfprintf_internal_r+0xae8>
1010360c:	d9c02785 	stb	r7,158(sp)
10103610:	003f9906 	br	10103478 <___vfprintf_internal_r+0xae8>
10103614:	18c03fcc 	andi	r3,r3,255
10103618:	1805551e 	bne	r3,zero,10104b70 <___vfprintf_internal_r+0x21e0>
1010361c:	01440474 	movhi	r5,4113
10103620:	297fb804 	addi	r5,r5,-288
10103624:	d9403915 	stw	r5,228(sp)
10103628:	9080080c 	andi	r2,r18,32
1010362c:	103fae1e 	bne	r2,zero,101034e8 <___vfprintf_internal_r+0xb58>
10103630:	9080040c 	andi	r2,r18,16
10103634:	1002de26 	beq	r2,zero,101041b0 <___vfprintf_internal_r+0x1820>
10103638:	d8c02d17 	ldw	r3,180(sp)
1010363c:	002d883a 	mov	r22,zero
10103640:	1cc00017 	ldw	r19,0(r3)
10103644:	18c00104 	addi	r3,r3,4
10103648:	d8c02d15 	stw	r3,180(sp)
1010364c:	003fab06 	br	101034fc <___vfprintf_internal_r+0xb6c>
10103650:	38803fcc 	andi	r2,r7,255
10103654:	1080201c 	xori	r2,r2,128
10103658:	10bfe004 	addi	r2,r2,-128
1010365c:	1002d21e 	bne	r2,zero,101041a8 <___vfprintf_internal_r+0x1818>
10103660:	00c00044 	movi	r3,1
10103664:	01c00804 	movi	r7,32
10103668:	ac400007 	ldb	r17,0(r21)
1010366c:	003d2906 	br	10102b14 <___vfprintf_internal_r+0x184>
10103670:	94800054 	ori	r18,r18,1
10103674:	ac400007 	ldb	r17,0(r21)
10103678:	003d2606 	br	10102b14 <___vfprintf_internal_r+0x184>
1010367c:	18c03fcc 	andi	r3,r3,255
10103680:	183e0526 	beq	r3,zero,10102e98 <___vfprintf_internal_r+0x508>
10103684:	d9c02785 	stb	r7,158(sp)
10103688:	003e0306 	br	10102e98 <___vfprintf_internal_r+0x508>
1010368c:	94801014 	ori	r18,r18,64
10103690:	ac400007 	ldb	r17,0(r21)
10103694:	003d1f06 	br	10102b14 <___vfprintf_internal_r+0x184>
10103698:	ac400007 	ldb	r17,0(r21)
1010369c:	8a438726 	beq	r17,r9,101044bc <___vfprintf_internal_r+0x1b2c>
101036a0:	94800414 	ori	r18,r18,16
101036a4:	003d1b06 	br	10102b14 <___vfprintf_internal_r+0x184>
101036a8:	18c03fcc 	andi	r3,r3,255
101036ac:	1805341e 	bne	r3,zero,10104b80 <___vfprintf_internal_r+0x21f0>
101036b0:	9080080c 	andi	r2,r18,32
101036b4:	1002cd26 	beq	r2,zero,101041ec <___vfprintf_internal_r+0x185c>
101036b8:	d9402d17 	ldw	r5,180(sp)
101036bc:	d9002f17 	ldw	r4,188(sp)
101036c0:	28800017 	ldw	r2,0(r5)
101036c4:	2007d7fa 	srai	r3,r4,31
101036c8:	29400104 	addi	r5,r5,4
101036cc:	d9402d15 	stw	r5,180(sp)
101036d0:	11000015 	stw	r4,0(r2)
101036d4:	10c00115 	stw	r3,4(r2)
101036d8:	003ce506 	br	10102a70 <___vfprintf_internal_r+0xe0>
101036dc:	d8c02d17 	ldw	r3,180(sp)
101036e0:	d9002d17 	ldw	r4,180(sp)
101036e4:	d8002785 	stb	zero,158(sp)
101036e8:	18800017 	ldw	r2,0(r3)
101036ec:	21000104 	addi	r4,r4,4
101036f0:	00c00044 	movi	r3,1
101036f4:	d8c02a15 	stw	r3,168(sp)
101036f8:	d8801405 	stb	r2,80(sp)
101036fc:	d9002d15 	stw	r4,180(sp)
10103700:	d8c02e15 	stw	r3,184(sp)
10103704:	d8002915 	stw	zero,164(sp)
10103708:	d8003215 	stw	zero,200(sp)
1010370c:	dc001404 	addi	r16,sp,80
10103710:	0039883a 	mov	fp,zero
10103714:	003e7206 	br	101030e0 <___vfprintf_internal_r+0x750>
10103718:	01040474 	movhi	r4,4113
1010371c:	213fb804 	addi	r4,r4,-288
10103720:	0039883a 	mov	fp,zero
10103724:	d9003915 	stw	r4,228(sp)
10103728:	04401e04 	movi	r17,120
1010372c:	003f8206 	br	10103538 <___vfprintf_internal_r+0xba8>
10103730:	18c03fcc 	andi	r3,r3,255
10103734:	1805061e 	bne	r3,zero,10104b50 <___vfprintf_internal_r+0x21c0>
10103738:	883d9126 	beq	r17,zero,10102d80 <___vfprintf_internal_r+0x3f0>
1010373c:	00c00044 	movi	r3,1
10103740:	d8c02a15 	stw	r3,168(sp)
10103744:	dc401405 	stb	r17,80(sp)
10103748:	d8002785 	stb	zero,158(sp)
1010374c:	003fec06 	br	10103700 <___vfprintf_internal_r+0xd70>
10103750:	01440474 	movhi	r5,4113
10103754:	297fb804 	addi	r5,r5,-288
10103758:	d9403915 	stw	r5,228(sp)
1010375c:	d8c02d15 	stw	r3,180(sp)
10103760:	1025883a 	mov	r18,r2
10103764:	04401e04 	movi	r17,120
10103768:	9d84b03a 	or	r2,r19,r22
1010376c:	1000fc1e 	bne	r2,zero,10103b60 <___vfprintf_internal_r+0x11d0>
10103770:	0039883a 	mov	fp,zero
10103774:	00800084 	movi	r2,2
10103778:	10803fcc 	andi	r2,r2,255
1010377c:	00c00044 	movi	r3,1
10103780:	10c20f26 	beq	r2,r3,10103fc0 <___vfprintf_internal_r+0x1630>
10103784:	00c00084 	movi	r3,2
10103788:	10fd6326 	beq	r2,r3,10102d18 <___vfprintf_internal_r+0x388>
1010378c:	003e2d06 	br	10103044 <___vfprintf_internal_r+0x6b4>
10103790:	d8c02017 	ldw	r3,128(sp)
10103794:	003e9306 	br	101031e4 <___vfprintf_internal_r+0x854>
10103798:	00801944 	movi	r2,101
1010379c:	14407e0e 	bge	r2,r17,10103998 <___vfprintf_internal_r+0x1008>
101037a0:	d9003617 	ldw	r4,216(sp)
101037a4:	d9403817 	ldw	r5,224(sp)
101037a8:	000d883a 	mov	r6,zero
101037ac:	000f883a 	mov	r7,zero
101037b0:	d8c03c15 	stw	r3,240(sp)
101037b4:	da003d15 	stw	r8,244(sp)
101037b8:	010c2cc0 	call	1010c2cc <__eqdf2>
101037bc:	d8c03c17 	ldw	r3,240(sp)
101037c0:	da003d17 	ldw	r8,244(sp)
101037c4:	1000f71e 	bne	r2,zero,10103ba4 <___vfprintf_internal_r+0x1214>
101037c8:	d8801f17 	ldw	r2,124(sp)
101037cc:	01040474 	movhi	r4,4113
101037d0:	213fbf04 	addi	r4,r4,-260
101037d4:	18c00044 	addi	r3,r3,1
101037d8:	10800044 	addi	r2,r2,1
101037dc:	41000015 	stw	r4,0(r8)
101037e0:	01000044 	movi	r4,1
101037e4:	41000115 	stw	r4,4(r8)
101037e8:	d8c02015 	stw	r3,128(sp)
101037ec:	d8801f15 	stw	r2,124(sp)
101037f0:	010001c4 	movi	r4,7
101037f4:	2082b816 	blt	r4,r2,101042d8 <___vfprintf_internal_r+0x1948>
101037f8:	42000204 	addi	r8,r8,8
101037fc:	d8802617 	ldw	r2,152(sp)
10103800:	d9403317 	ldw	r5,204(sp)
10103804:	11400216 	blt	r2,r5,10103810 <___vfprintf_internal_r+0xe80>
10103808:	9080004c 	andi	r2,r18,1
1010380c:	103ed526 	beq	r2,zero,10103364 <___vfprintf_internal_r+0x9d4>
10103810:	d8803717 	ldw	r2,220(sp)
10103814:	d9003417 	ldw	r4,208(sp)
10103818:	d9403717 	ldw	r5,220(sp)
1010381c:	1887883a 	add	r3,r3,r2
10103820:	d8801f17 	ldw	r2,124(sp)
10103824:	41000015 	stw	r4,0(r8)
10103828:	41400115 	stw	r5,4(r8)
1010382c:	10800044 	addi	r2,r2,1
10103830:	d8c02015 	stw	r3,128(sp)
10103834:	d8801f15 	stw	r2,124(sp)
10103838:	010001c4 	movi	r4,7
1010383c:	20832916 	blt	r4,r2,101044e4 <___vfprintf_internal_r+0x1b54>
10103840:	42000204 	addi	r8,r8,8
10103844:	d8803317 	ldw	r2,204(sp)
10103848:	143fffc4 	addi	r16,r2,-1
1010384c:	043ec50e 	bge	zero,r16,10103364 <___vfprintf_internal_r+0x9d4>
10103850:	04400404 	movi	r17,16
10103854:	d8801f17 	ldw	r2,124(sp)
10103858:	8c00880e 	bge	r17,r16,10103a7c <___vfprintf_internal_r+0x10ec>
1010385c:	01440474 	movhi	r5,4113
10103860:	297fbf84 	addi	r5,r5,-258
10103864:	d9402b15 	stw	r5,172(sp)
10103868:	058001c4 	movi	r22,7
1010386c:	dcc02c17 	ldw	r19,176(sp)
10103870:	00000306 	br	10103880 <___vfprintf_internal_r+0xef0>
10103874:	42000204 	addi	r8,r8,8
10103878:	843ffc04 	addi	r16,r16,-16
1010387c:	8c00820e 	bge	r17,r16,10103a88 <___vfprintf_internal_r+0x10f8>
10103880:	18c00404 	addi	r3,r3,16
10103884:	10800044 	addi	r2,r2,1
10103888:	45000015 	stw	r20,0(r8)
1010388c:	44400115 	stw	r17,4(r8)
10103890:	d8c02015 	stw	r3,128(sp)
10103894:	d8801f15 	stw	r2,124(sp)
10103898:	b0bff60e 	bge	r22,r2,10103874 <___vfprintf_internal_r+0xee4>
1010389c:	d9801e04 	addi	r6,sp,120
101038a0:	b80b883a 	mov	r5,r23
101038a4:	9809883a 	mov	r4,r19
101038a8:	010897c0 	call	1010897c <__sprint_r>
101038ac:	103d3a1e 	bne	r2,zero,10102d98 <___vfprintf_internal_r+0x408>
101038b0:	d8c02017 	ldw	r3,128(sp)
101038b4:	d8801f17 	ldw	r2,124(sp)
101038b8:	da000404 	addi	r8,sp,16
101038bc:	003fee06 	br	10103878 <___vfprintf_internal_r+0xee8>
101038c0:	d9403117 	ldw	r5,196(sp)
101038c4:	d8802a17 	ldw	r2,168(sp)
101038c8:	28adc83a 	sub	r22,r5,r2
101038cc:	05be630e 	bge	zero,r22,1010325c <___vfprintf_internal_r+0x8cc>
101038d0:	07000404 	movi	fp,16
101038d4:	d8801f17 	ldw	r2,124(sp)
101038d8:	e5838f0e 	bge	fp,r22,10104718 <___vfprintf_internal_r+0x1d88>
101038dc:	01440474 	movhi	r5,4113
101038e0:	297fbf84 	addi	r5,r5,-258
101038e4:	dc403015 	stw	r17,192(sp)
101038e8:	d9402b15 	stw	r5,172(sp)
101038ec:	b023883a 	mov	r17,r22
101038f0:	04c001c4 	movi	r19,7
101038f4:	a82d883a 	mov	r22,r21
101038f8:	902b883a 	mov	r21,r18
101038fc:	8025883a 	mov	r18,r16
10103900:	dc002c17 	ldw	r16,176(sp)
10103904:	00000306 	br	10103914 <___vfprintf_internal_r+0xf84>
10103908:	8c7ffc04 	addi	r17,r17,-16
1010390c:	42000204 	addi	r8,r8,8
10103910:	e440110e 	bge	fp,r17,10103958 <___vfprintf_internal_r+0xfc8>
10103914:	18c00404 	addi	r3,r3,16
10103918:	10800044 	addi	r2,r2,1
1010391c:	45000015 	stw	r20,0(r8)
10103920:	47000115 	stw	fp,4(r8)
10103924:	d8c02015 	stw	r3,128(sp)
10103928:	d8801f15 	stw	r2,124(sp)
1010392c:	98bff60e 	bge	r19,r2,10103908 <___vfprintf_internal_r+0xf78>
10103930:	d9801e04 	addi	r6,sp,120
10103934:	b80b883a 	mov	r5,r23
10103938:	8009883a 	mov	r4,r16
1010393c:	010897c0 	call	1010897c <__sprint_r>
10103940:	103d151e 	bne	r2,zero,10102d98 <___vfprintf_internal_r+0x408>
10103944:	8c7ffc04 	addi	r17,r17,-16
10103948:	d8c02017 	ldw	r3,128(sp)
1010394c:	d8801f17 	ldw	r2,124(sp)
10103950:	da000404 	addi	r8,sp,16
10103954:	e47fef16 	blt	fp,r17,10103914 <___vfprintf_internal_r+0xf84>
10103958:	9021883a 	mov	r16,r18
1010395c:	a825883a 	mov	r18,r21
10103960:	b02b883a 	mov	r21,r22
10103964:	882d883a 	mov	r22,r17
10103968:	dc403017 	ldw	r17,192(sp)
1010396c:	d9002b17 	ldw	r4,172(sp)
10103970:	1d87883a 	add	r3,r3,r22
10103974:	10800044 	addi	r2,r2,1
10103978:	41000015 	stw	r4,0(r8)
1010397c:	45800115 	stw	r22,4(r8)
10103980:	d8c02015 	stw	r3,128(sp)
10103984:	d8801f15 	stw	r2,124(sp)
10103988:	010001c4 	movi	r4,7
1010398c:	20818e16 	blt	r4,r2,10103fc8 <___vfprintf_internal_r+0x1638>
10103990:	42000204 	addi	r8,r8,8
10103994:	003e3106 	br	1010325c <___vfprintf_internal_r+0x8cc>
10103998:	d9403317 	ldw	r5,204(sp)
1010399c:	00800044 	movi	r2,1
101039a0:	18c00044 	addi	r3,r3,1
101039a4:	1141530e 	bge	r2,r5,10103ef4 <___vfprintf_internal_r+0x1564>
101039a8:	dc401f17 	ldw	r17,124(sp)
101039ac:	00800044 	movi	r2,1
101039b0:	40800115 	stw	r2,4(r8)
101039b4:	8c400044 	addi	r17,r17,1
101039b8:	44000015 	stw	r16,0(r8)
101039bc:	d8c02015 	stw	r3,128(sp)
101039c0:	dc401f15 	stw	r17,124(sp)
101039c4:	008001c4 	movi	r2,7
101039c8:	14416b16 	blt	r2,r17,10103f78 <___vfprintf_internal_r+0x15e8>
101039cc:	42000204 	addi	r8,r8,8
101039d0:	d8803717 	ldw	r2,220(sp)
101039d4:	d9003417 	ldw	r4,208(sp)
101039d8:	8c400044 	addi	r17,r17,1
101039dc:	10c7883a 	add	r3,r2,r3
101039e0:	40800115 	stw	r2,4(r8)
101039e4:	41000015 	stw	r4,0(r8)
101039e8:	d8c02015 	stw	r3,128(sp)
101039ec:	dc401f15 	stw	r17,124(sp)
101039f0:	008001c4 	movi	r2,7
101039f4:	14416916 	blt	r2,r17,10103f9c <___vfprintf_internal_r+0x160c>
101039f8:	45800204 	addi	r22,r8,8
101039fc:	d9003617 	ldw	r4,216(sp)
10103a00:	d9403817 	ldw	r5,224(sp)
10103a04:	000d883a 	mov	r6,zero
10103a08:	000f883a 	mov	r7,zero
10103a0c:	d8c03c15 	stw	r3,240(sp)
10103a10:	010c2cc0 	call	1010c2cc <__eqdf2>
10103a14:	d8c03c17 	ldw	r3,240(sp)
10103a18:	1000bc26 	beq	r2,zero,10103d0c <___vfprintf_internal_r+0x137c>
10103a1c:	d9403317 	ldw	r5,204(sp)
10103a20:	84000044 	addi	r16,r16,1
10103a24:	8c400044 	addi	r17,r17,1
10103a28:	28bfffc4 	addi	r2,r5,-1
10103a2c:	1887883a 	add	r3,r3,r2
10103a30:	b0800115 	stw	r2,4(r22)
10103a34:	b4000015 	stw	r16,0(r22)
10103a38:	d8c02015 	stw	r3,128(sp)
10103a3c:	dc401f15 	stw	r17,124(sp)
10103a40:	008001c4 	movi	r2,7
10103a44:	14414316 	blt	r2,r17,10103f54 <___vfprintf_internal_r+0x15c4>
10103a48:	b5800204 	addi	r22,r22,8
10103a4c:	d9003a17 	ldw	r4,232(sp)
10103a50:	df0022c4 	addi	fp,sp,139
10103a54:	8c400044 	addi	r17,r17,1
10103a58:	20c7883a 	add	r3,r4,r3
10103a5c:	b7000015 	stw	fp,0(r22)
10103a60:	b1000115 	stw	r4,4(r22)
10103a64:	d8c02015 	stw	r3,128(sp)
10103a68:	dc401f15 	stw	r17,124(sp)
10103a6c:	008001c4 	movi	r2,7
10103a70:	14400e16 	blt	r2,r17,10103aac <___vfprintf_internal_r+0x111c>
10103a74:	b2000204 	addi	r8,r22,8
10103a78:	003e3a06 	br	10103364 <___vfprintf_internal_r+0x9d4>
10103a7c:	01040474 	movhi	r4,4113
10103a80:	213fbf84 	addi	r4,r4,-258
10103a84:	d9002b15 	stw	r4,172(sp)
10103a88:	d9002b17 	ldw	r4,172(sp)
10103a8c:	1c07883a 	add	r3,r3,r16
10103a90:	44000115 	stw	r16,4(r8)
10103a94:	41000015 	stw	r4,0(r8)
10103a98:	10800044 	addi	r2,r2,1
10103a9c:	d8c02015 	stw	r3,128(sp)
10103aa0:	d8801f15 	stw	r2,124(sp)
10103aa4:	010001c4 	movi	r4,7
10103aa8:	20be2d0e 	bge	r4,r2,10103360 <___vfprintf_internal_r+0x9d0>
10103aac:	d9002c17 	ldw	r4,176(sp)
10103ab0:	d9801e04 	addi	r6,sp,120
10103ab4:	b80b883a 	mov	r5,r23
10103ab8:	010897c0 	call	1010897c <__sprint_r>
10103abc:	103cb61e 	bne	r2,zero,10102d98 <___vfprintf_internal_r+0x408>
10103ac0:	d8c02017 	ldw	r3,128(sp)
10103ac4:	da000404 	addi	r8,sp,16
10103ac8:	003e2606 	br	10103364 <___vfprintf_internal_r+0x9d4>
10103acc:	d9002c17 	ldw	r4,176(sp)
10103ad0:	d9801e04 	addi	r6,sp,120
10103ad4:	b80b883a 	mov	r5,r23
10103ad8:	010897c0 	call	1010897c <__sprint_r>
10103adc:	103e5d26 	beq	r2,zero,10103454 <___vfprintf_internal_r+0xac4>
10103ae0:	003cad06 	br	10102d98 <___vfprintf_internal_r+0x408>
10103ae4:	d9002c17 	ldw	r4,176(sp)
10103ae8:	d9801e04 	addi	r6,sp,120
10103aec:	b80b883a 	mov	r5,r23
10103af0:	010897c0 	call	1010897c <__sprint_r>
10103af4:	103ca81e 	bne	r2,zero,10102d98 <___vfprintf_internal_r+0x408>
10103af8:	d8c02017 	ldw	r3,128(sp)
10103afc:	da000404 	addi	r8,sp,16
10103b00:	003e0b06 	br	10103330 <___vfprintf_internal_r+0x9a0>
10103b04:	d9002c17 	ldw	r4,176(sp)
10103b08:	d9801e04 	addi	r6,sp,120
10103b0c:	b80b883a 	mov	r5,r23
10103b10:	010897c0 	call	1010897c <__sprint_r>
10103b14:	103ca01e 	bne	r2,zero,10102d98 <___vfprintf_internal_r+0x408>
10103b18:	d8c02017 	ldw	r3,128(sp)
10103b1c:	da000404 	addi	r8,sp,16
10103b20:	003dbd06 	br	10103218 <___vfprintf_internal_r+0x888>
10103b24:	d9002c17 	ldw	r4,176(sp)
10103b28:	d9801e04 	addi	r6,sp,120
10103b2c:	b80b883a 	mov	r5,r23
10103b30:	010897c0 	call	1010897c <__sprint_r>
10103b34:	103c981e 	bne	r2,zero,10102d98 <___vfprintf_internal_r+0x408>
10103b38:	d8c02017 	ldw	r3,128(sp)
10103b3c:	da000404 	addi	r8,sp,16
10103b40:	003dc306 	br	10103250 <___vfprintf_internal_r+0x8c0>
10103b44:	d8802917 	ldw	r2,164(sp)
10103b48:	d8002785 	stb	zero,158(sp)
10103b4c:	103f0616 	blt	r2,zero,10103768 <___vfprintf_internal_r+0xdd8>
10103b50:	00ffdfc4 	movi	r3,-129
10103b54:	9d84b03a 	or	r2,r19,r22
10103b58:	90e4703a 	and	r18,r18,r3
10103b5c:	103c6b26 	beq	r2,zero,10102d0c <___vfprintf_internal_r+0x37c>
10103b60:	0039883a 	mov	fp,zero
10103b64:	003e7406 	br	10103538 <___vfprintf_internal_r+0xba8>
10103b68:	9080040c 	andi	r2,r18,16
10103b6c:	1001b326 	beq	r2,zero,1010423c <___vfprintf_internal_r+0x18ac>
10103b70:	d9002d17 	ldw	r4,180(sp)
10103b74:	d9402917 	ldw	r5,164(sp)
10103b78:	d8002785 	stb	zero,158(sp)
10103b7c:	20800104 	addi	r2,r4,4
10103b80:	24c00017 	ldw	r19,0(r4)
10103b84:	002d883a 	mov	r22,zero
10103b88:	2801b516 	blt	r5,zero,10104260 <___vfprintf_internal_r+0x18d0>
10103b8c:	00ffdfc4 	movi	r3,-129
10103b90:	d8802d15 	stw	r2,180(sp)
10103b94:	90e4703a 	and	r18,r18,r3
10103b98:	983d2726 	beq	r19,zero,10103038 <___vfprintf_internal_r+0x6a8>
10103b9c:	0039883a 	mov	fp,zero
10103ba0:	003d2a06 	br	1010304c <___vfprintf_internal_r+0x6bc>
10103ba4:	dc402617 	ldw	r17,152(sp)
10103ba8:	0441d30e 	bge	zero,r17,101042f8 <___vfprintf_internal_r+0x1968>
10103bac:	dc403217 	ldw	r17,200(sp)
10103bb0:	d8803317 	ldw	r2,204(sp)
10103bb4:	1440010e 	bge	r2,r17,10103bbc <___vfprintf_internal_r+0x122c>
10103bb8:	1023883a 	mov	r17,r2
10103bbc:	04400a0e 	bge	zero,r17,10103be8 <___vfprintf_internal_r+0x1258>
10103bc0:	d8801f17 	ldw	r2,124(sp)
10103bc4:	1c47883a 	add	r3,r3,r17
10103bc8:	44000015 	stw	r16,0(r8)
10103bcc:	10800044 	addi	r2,r2,1
10103bd0:	44400115 	stw	r17,4(r8)
10103bd4:	d8c02015 	stw	r3,128(sp)
10103bd8:	d8801f15 	stw	r2,124(sp)
10103bdc:	010001c4 	movi	r4,7
10103be0:	20826516 	blt	r4,r2,10104578 <___vfprintf_internal_r+0x1be8>
10103be4:	42000204 	addi	r8,r8,8
10103be8:	88026116 	blt	r17,zero,10104570 <___vfprintf_internal_r+0x1be0>
10103bec:	d9003217 	ldw	r4,200(sp)
10103bf0:	2463c83a 	sub	r17,r4,r17
10103bf4:	04407b0e 	bge	zero,r17,10103de4 <___vfprintf_internal_r+0x1454>
10103bf8:	05800404 	movi	r22,16
10103bfc:	d8801f17 	ldw	r2,124(sp)
10103c00:	b4419d0e 	bge	r22,r17,10104278 <___vfprintf_internal_r+0x18e8>
10103c04:	01040474 	movhi	r4,4113
10103c08:	213fbf84 	addi	r4,r4,-258
10103c0c:	d9002b15 	stw	r4,172(sp)
10103c10:	070001c4 	movi	fp,7
10103c14:	dcc02c17 	ldw	r19,176(sp)
10103c18:	00000306 	br	10103c28 <___vfprintf_internal_r+0x1298>
10103c1c:	42000204 	addi	r8,r8,8
10103c20:	8c7ffc04 	addi	r17,r17,-16
10103c24:	b441970e 	bge	r22,r17,10104284 <___vfprintf_internal_r+0x18f4>
10103c28:	18c00404 	addi	r3,r3,16
10103c2c:	10800044 	addi	r2,r2,1
10103c30:	45000015 	stw	r20,0(r8)
10103c34:	45800115 	stw	r22,4(r8)
10103c38:	d8c02015 	stw	r3,128(sp)
10103c3c:	d8801f15 	stw	r2,124(sp)
10103c40:	e0bff60e 	bge	fp,r2,10103c1c <___vfprintf_internal_r+0x128c>
10103c44:	d9801e04 	addi	r6,sp,120
10103c48:	b80b883a 	mov	r5,r23
10103c4c:	9809883a 	mov	r4,r19
10103c50:	010897c0 	call	1010897c <__sprint_r>
10103c54:	103c501e 	bne	r2,zero,10102d98 <___vfprintf_internal_r+0x408>
10103c58:	d8c02017 	ldw	r3,128(sp)
10103c5c:	d8801f17 	ldw	r2,124(sp)
10103c60:	da000404 	addi	r8,sp,16
10103c64:	003fee06 	br	10103c20 <___vfprintf_internal_r+0x1290>
10103c68:	d9002c17 	ldw	r4,176(sp)
10103c6c:	d9801e04 	addi	r6,sp,120
10103c70:	b80b883a 	mov	r5,r23
10103c74:	010897c0 	call	1010897c <__sprint_r>
10103c78:	103c471e 	bne	r2,zero,10102d98 <___vfprintf_internal_r+0x408>
10103c7c:	d8c02017 	ldw	r3,128(sp)
10103c80:	df002787 	ldb	fp,158(sp)
10103c84:	da000404 	addi	r8,sp,16
10103c88:	003d5606 	br	101031e4 <___vfprintf_internal_r+0x854>
10103c8c:	9080040c 	andi	r2,r18,16
10103c90:	10016126 	beq	r2,zero,10104218 <___vfprintf_internal_r+0x1888>
10103c94:	d8802d17 	ldw	r2,180(sp)
10103c98:	14c00017 	ldw	r19,0(r2)
10103c9c:	10800104 	addi	r2,r2,4
10103ca0:	d8802d15 	stw	r2,180(sp)
10103ca4:	982dd7fa 	srai	r22,r19,31
10103ca8:	b005883a 	mov	r2,r22
10103cac:	003c8206 	br	10102eb8 <___vfprintf_internal_r+0x528>
10103cb0:	9080040c 	andi	r2,r18,16
10103cb4:	10003526 	beq	r2,zero,10103d8c <___vfprintf_internal_r+0x13fc>
10103cb8:	d9402d17 	ldw	r5,180(sp)
10103cbc:	d8c02917 	ldw	r3,164(sp)
10103cc0:	d8002785 	stb	zero,158(sp)
10103cc4:	28800104 	addi	r2,r5,4
10103cc8:	2cc00017 	ldw	r19,0(r5)
10103ccc:	002d883a 	mov	r22,zero
10103cd0:	18003716 	blt	r3,zero,10103db0 <___vfprintf_internal_r+0x1420>
10103cd4:	00ffdfc4 	movi	r3,-129
10103cd8:	d8802d15 	stw	r2,180(sp)
10103cdc:	90e4703a 	and	r18,r18,r3
10103ce0:	0039883a 	mov	fp,zero
10103ce4:	983df326 	beq	r19,zero,101034b4 <___vfprintf_internal_r+0xb24>
10103ce8:	00800244 	movi	r2,9
10103cec:	14fc7b36 	bltu	r2,r19,10102edc <___vfprintf_internal_r+0x54c>
10103cf0:	d8c02817 	ldw	r3,160(sp)
10103cf4:	dc001dc4 	addi	r16,sp,119
10103cf8:	9cc00c04 	addi	r19,r19,48
10103cfc:	1c07c83a 	sub	r3,r3,r16
10103d00:	dcc01dc5 	stb	r19,119(sp)
10103d04:	d8c02e15 	stw	r3,184(sp)
10103d08:	003ce806 	br	101030ac <___vfprintf_internal_r+0x71c>
10103d0c:	d8803317 	ldw	r2,204(sp)
10103d10:	143fffc4 	addi	r16,r2,-1
10103d14:	043f4d0e 	bge	zero,r16,10103a4c <___vfprintf_internal_r+0x10bc>
10103d18:	07000404 	movi	fp,16
10103d1c:	e400810e 	bge	fp,r16,10103f24 <___vfprintf_internal_r+0x1594>
10103d20:	01440474 	movhi	r5,4113
10103d24:	297fbf84 	addi	r5,r5,-258
10103d28:	d9402b15 	stw	r5,172(sp)
10103d2c:	01c001c4 	movi	r7,7
10103d30:	dcc02c17 	ldw	r19,176(sp)
10103d34:	00000306 	br	10103d44 <___vfprintf_internal_r+0x13b4>
10103d38:	b5800204 	addi	r22,r22,8
10103d3c:	843ffc04 	addi	r16,r16,-16
10103d40:	e4007b0e 	bge	fp,r16,10103f30 <___vfprintf_internal_r+0x15a0>
10103d44:	18c00404 	addi	r3,r3,16
10103d48:	8c400044 	addi	r17,r17,1
10103d4c:	b5000015 	stw	r20,0(r22)
10103d50:	b7000115 	stw	fp,4(r22)
10103d54:	d8c02015 	stw	r3,128(sp)
10103d58:	dc401f15 	stw	r17,124(sp)
10103d5c:	3c7ff60e 	bge	r7,r17,10103d38 <___vfprintf_internal_r+0x13a8>
10103d60:	d9801e04 	addi	r6,sp,120
10103d64:	b80b883a 	mov	r5,r23
10103d68:	9809883a 	mov	r4,r19
10103d6c:	d9c03c15 	stw	r7,240(sp)
10103d70:	010897c0 	call	1010897c <__sprint_r>
10103d74:	d9c03c17 	ldw	r7,240(sp)
10103d78:	103c071e 	bne	r2,zero,10102d98 <___vfprintf_internal_r+0x408>
10103d7c:	d8c02017 	ldw	r3,128(sp)
10103d80:	dc401f17 	ldw	r17,124(sp)
10103d84:	dd800404 	addi	r22,sp,16
10103d88:	003fec06 	br	10103d3c <___vfprintf_internal_r+0x13ac>
10103d8c:	9080100c 	andi	r2,r18,64
10103d90:	d8002785 	stb	zero,158(sp)
10103d94:	10010e26 	beq	r2,zero,101041d0 <___vfprintf_internal_r+0x1840>
10103d98:	d9002d17 	ldw	r4,180(sp)
10103d9c:	d9402917 	ldw	r5,164(sp)
10103da0:	002d883a 	mov	r22,zero
10103da4:	20800104 	addi	r2,r4,4
10103da8:	24c0000b 	ldhu	r19,0(r4)
10103dac:	283fc90e 	bge	r5,zero,10103cd4 <___vfprintf_internal_r+0x1344>
10103db0:	d8802d15 	stw	r2,180(sp)
10103db4:	0039883a 	mov	fp,zero
10103db8:	9d84b03a 	or	r2,r19,r22
10103dbc:	103c461e 	bne	r2,zero,10102ed8 <___vfprintf_internal_r+0x548>
10103dc0:	00800044 	movi	r2,1
10103dc4:	003e6c06 	br	10103778 <___vfprintf_internal_r+0xde8>
10103dc8:	d9002c17 	ldw	r4,176(sp)
10103dcc:	d9801e04 	addi	r6,sp,120
10103dd0:	b80b883a 	mov	r5,r23
10103dd4:	010897c0 	call	1010897c <__sprint_r>
10103dd8:	103bef1e 	bne	r2,zero,10102d98 <___vfprintf_internal_r+0x408>
10103ddc:	d8c02017 	ldw	r3,128(sp)
10103de0:	da000404 	addi	r8,sp,16
10103de4:	d9003217 	ldw	r4,200(sp)
10103de8:	d8802617 	ldw	r2,152(sp)
10103dec:	d9403317 	ldw	r5,204(sp)
10103df0:	8123883a 	add	r17,r16,r4
10103df4:	11400216 	blt	r2,r5,10103e00 <___vfprintf_internal_r+0x1470>
10103df8:	9100004c 	andi	r4,r18,1
10103dfc:	20000d26 	beq	r4,zero,10103e34 <___vfprintf_internal_r+0x14a4>
10103e00:	d9003717 	ldw	r4,220(sp)
10103e04:	d9403417 	ldw	r5,208(sp)
10103e08:	1907883a 	add	r3,r3,r4
10103e0c:	d9001f17 	ldw	r4,124(sp)
10103e10:	41400015 	stw	r5,0(r8)
10103e14:	d9403717 	ldw	r5,220(sp)
10103e18:	21000044 	addi	r4,r4,1
10103e1c:	d8c02015 	stw	r3,128(sp)
10103e20:	41400115 	stw	r5,4(r8)
10103e24:	d9001f15 	stw	r4,124(sp)
10103e28:	014001c4 	movi	r5,7
10103e2c:	2901e816 	blt	r5,r4,101045d0 <___vfprintf_internal_r+0x1c40>
10103e30:	42000204 	addi	r8,r8,8
10103e34:	d9003317 	ldw	r4,204(sp)
10103e38:	8121883a 	add	r16,r16,r4
10103e3c:	2085c83a 	sub	r2,r4,r2
10103e40:	8461c83a 	sub	r16,r16,r17
10103e44:	1400010e 	bge	r2,r16,10103e4c <___vfprintf_internal_r+0x14bc>
10103e48:	1021883a 	mov	r16,r2
10103e4c:	04000a0e 	bge	zero,r16,10103e78 <___vfprintf_internal_r+0x14e8>
10103e50:	d9001f17 	ldw	r4,124(sp)
10103e54:	1c07883a 	add	r3,r3,r16
10103e58:	44400015 	stw	r17,0(r8)
10103e5c:	21000044 	addi	r4,r4,1
10103e60:	44000115 	stw	r16,4(r8)
10103e64:	d8c02015 	stw	r3,128(sp)
10103e68:	d9001f15 	stw	r4,124(sp)
10103e6c:	014001c4 	movi	r5,7
10103e70:	2901fb16 	blt	r5,r4,10104660 <___vfprintf_internal_r+0x1cd0>
10103e74:	42000204 	addi	r8,r8,8
10103e78:	8001f716 	blt	r16,zero,10104658 <___vfprintf_internal_r+0x1cc8>
10103e7c:	1421c83a 	sub	r16,r2,r16
10103e80:	043d380e 	bge	zero,r16,10103364 <___vfprintf_internal_r+0x9d4>
10103e84:	04400404 	movi	r17,16
10103e88:	d8801f17 	ldw	r2,124(sp)
10103e8c:	8c3efb0e 	bge	r17,r16,10103a7c <___vfprintf_internal_r+0x10ec>
10103e90:	01440474 	movhi	r5,4113
10103e94:	297fbf84 	addi	r5,r5,-258
10103e98:	d9402b15 	stw	r5,172(sp)
10103e9c:	058001c4 	movi	r22,7
10103ea0:	dcc02c17 	ldw	r19,176(sp)
10103ea4:	00000306 	br	10103eb4 <___vfprintf_internal_r+0x1524>
10103ea8:	42000204 	addi	r8,r8,8
10103eac:	843ffc04 	addi	r16,r16,-16
10103eb0:	8c3ef50e 	bge	r17,r16,10103a88 <___vfprintf_internal_r+0x10f8>
10103eb4:	18c00404 	addi	r3,r3,16
10103eb8:	10800044 	addi	r2,r2,1
10103ebc:	45000015 	stw	r20,0(r8)
10103ec0:	44400115 	stw	r17,4(r8)
10103ec4:	d8c02015 	stw	r3,128(sp)
10103ec8:	d8801f15 	stw	r2,124(sp)
10103ecc:	b0bff60e 	bge	r22,r2,10103ea8 <___vfprintf_internal_r+0x1518>
10103ed0:	d9801e04 	addi	r6,sp,120
10103ed4:	b80b883a 	mov	r5,r23
10103ed8:	9809883a 	mov	r4,r19
10103edc:	010897c0 	call	1010897c <__sprint_r>
10103ee0:	103bad1e 	bne	r2,zero,10102d98 <___vfprintf_internal_r+0x408>
10103ee4:	d8c02017 	ldw	r3,128(sp)
10103ee8:	d8801f17 	ldw	r2,124(sp)
10103eec:	da000404 	addi	r8,sp,16
10103ef0:	003fee06 	br	10103eac <___vfprintf_internal_r+0x151c>
10103ef4:	9088703a 	and	r4,r18,r2
10103ef8:	203eab1e 	bne	r4,zero,101039a8 <___vfprintf_internal_r+0x1018>
10103efc:	dc401f17 	ldw	r17,124(sp)
10103f00:	40800115 	stw	r2,4(r8)
10103f04:	44000015 	stw	r16,0(r8)
10103f08:	8c400044 	addi	r17,r17,1
10103f0c:	d8c02015 	stw	r3,128(sp)
10103f10:	dc401f15 	stw	r17,124(sp)
10103f14:	008001c4 	movi	r2,7
10103f18:	14400e16 	blt	r2,r17,10103f54 <___vfprintf_internal_r+0x15c4>
10103f1c:	45800204 	addi	r22,r8,8
10103f20:	003eca06 	br	10103a4c <___vfprintf_internal_r+0x10bc>
10103f24:	01040474 	movhi	r4,4113
10103f28:	213fbf84 	addi	r4,r4,-258
10103f2c:	d9002b15 	stw	r4,172(sp)
10103f30:	d8802b17 	ldw	r2,172(sp)
10103f34:	1c07883a 	add	r3,r3,r16
10103f38:	8c400044 	addi	r17,r17,1
10103f3c:	b0800015 	stw	r2,0(r22)
10103f40:	b4000115 	stw	r16,4(r22)
10103f44:	d8c02015 	stw	r3,128(sp)
10103f48:	dc401f15 	stw	r17,124(sp)
10103f4c:	008001c4 	movi	r2,7
10103f50:	147ebd0e 	bge	r2,r17,10103a48 <___vfprintf_internal_r+0x10b8>
10103f54:	d9002c17 	ldw	r4,176(sp)
10103f58:	d9801e04 	addi	r6,sp,120
10103f5c:	b80b883a 	mov	r5,r23
10103f60:	010897c0 	call	1010897c <__sprint_r>
10103f64:	103b8c1e 	bne	r2,zero,10102d98 <___vfprintf_internal_r+0x408>
10103f68:	d8c02017 	ldw	r3,128(sp)
10103f6c:	dc401f17 	ldw	r17,124(sp)
10103f70:	dd800404 	addi	r22,sp,16
10103f74:	003eb506 	br	10103a4c <___vfprintf_internal_r+0x10bc>
10103f78:	d9002c17 	ldw	r4,176(sp)
10103f7c:	d9801e04 	addi	r6,sp,120
10103f80:	b80b883a 	mov	r5,r23
10103f84:	010897c0 	call	1010897c <__sprint_r>
10103f88:	103b831e 	bne	r2,zero,10102d98 <___vfprintf_internal_r+0x408>
10103f8c:	d8c02017 	ldw	r3,128(sp)
10103f90:	dc401f17 	ldw	r17,124(sp)
10103f94:	da000404 	addi	r8,sp,16
10103f98:	003e8d06 	br	101039d0 <___vfprintf_internal_r+0x1040>
10103f9c:	d9002c17 	ldw	r4,176(sp)
10103fa0:	d9801e04 	addi	r6,sp,120
10103fa4:	b80b883a 	mov	r5,r23
10103fa8:	010897c0 	call	1010897c <__sprint_r>
10103fac:	103b7a1e 	bne	r2,zero,10102d98 <___vfprintf_internal_r+0x408>
10103fb0:	d8c02017 	ldw	r3,128(sp)
10103fb4:	dc401f17 	ldw	r17,124(sp)
10103fb8:	dd800404 	addi	r22,sp,16
10103fbc:	003e8f06 	br	101039fc <___vfprintf_internal_r+0x106c>
10103fc0:	0027883a 	mov	r19,zero
10103fc4:	003f4a06 	br	10103cf0 <___vfprintf_internal_r+0x1360>
10103fc8:	d9002c17 	ldw	r4,176(sp)
10103fcc:	d9801e04 	addi	r6,sp,120
10103fd0:	b80b883a 	mov	r5,r23
10103fd4:	010897c0 	call	1010897c <__sprint_r>
10103fd8:	103b6f1e 	bne	r2,zero,10102d98 <___vfprintf_internal_r+0x408>
10103fdc:	d8c02017 	ldw	r3,128(sp)
10103fe0:	da000404 	addi	r8,sp,16
10103fe4:	003c9d06 	br	1010325c <___vfprintf_internal_r+0x8cc>
10103fe8:	04e7c83a 	sub	r19,zero,r19
10103fec:	9804c03a 	cmpne	r2,r19,zero
10103ff0:	05adc83a 	sub	r22,zero,r22
10103ff4:	b0adc83a 	sub	r22,r22,r2
10103ff8:	d8802917 	ldw	r2,164(sp)
10103ffc:	07000b44 	movi	fp,45
10104000:	df002785 	stb	fp,158(sp)
10104004:	10017b16 	blt	r2,zero,101045f4 <___vfprintf_internal_r+0x1c64>
10104008:	00bfdfc4 	movi	r2,-129
1010400c:	90a4703a 	and	r18,r18,r2
10104010:	003bb106 	br	10102ed8 <___vfprintf_internal_r+0x548>
10104014:	d9003617 	ldw	r4,216(sp)
10104018:	d9403817 	ldw	r5,224(sp)
1010401c:	da003d15 	stw	r8,244(sp)
10104020:	01087300 	call	10108730 <__fpclassifyd>
10104024:	da003d17 	ldw	r8,244(sp)
10104028:	1000f026 	beq	r2,zero,101043ec <___vfprintf_internal_r+0x1a5c>
1010402c:	d9002917 	ldw	r4,164(sp)
10104030:	05bff7c4 	movi	r22,-33
10104034:	00bfffc4 	movi	r2,-1
10104038:	8dac703a 	and	r22,r17,r22
1010403c:	20820026 	beq	r4,r2,10104840 <___vfprintf_internal_r+0x1eb0>
10104040:	008011c4 	movi	r2,71
10104044:	b081f726 	beq	r22,r2,10104824 <___vfprintf_internal_r+0x1e94>
10104048:	d9003817 	ldw	r4,224(sp)
1010404c:	90c04014 	ori	r3,r18,256
10104050:	d8c02b15 	stw	r3,172(sp)
10104054:	20021516 	blt	r4,zero,101048ac <___vfprintf_internal_r+0x1f1c>
10104058:	dcc03817 	ldw	r19,224(sp)
1010405c:	d8002a05 	stb	zero,168(sp)
10104060:	00801984 	movi	r2,102
10104064:	8881f926 	beq	r17,r2,1010484c <___vfprintf_internal_r+0x1ebc>
10104068:	00801184 	movi	r2,70
1010406c:	88821c26 	beq	r17,r2,101048e0 <___vfprintf_internal_r+0x1f50>
10104070:	00801144 	movi	r2,69
10104074:	b081ef26 	beq	r22,r2,10104834 <___vfprintf_internal_r+0x1ea4>
10104078:	d8c02917 	ldw	r3,164(sp)
1010407c:	d8802104 	addi	r2,sp,132
10104080:	d8800315 	stw	r2,12(sp)
10104084:	d9403617 	ldw	r5,216(sp)
10104088:	d8802504 	addi	r2,sp,148
1010408c:	d9002c17 	ldw	r4,176(sp)
10104090:	d8800215 	stw	r2,8(sp)
10104094:	d8802604 	addi	r2,sp,152
10104098:	d8c00015 	stw	r3,0(sp)
1010409c:	d8800115 	stw	r2,4(sp)
101040a0:	01c00084 	movi	r7,2
101040a4:	980d883a 	mov	r6,r19
101040a8:	d8c03c15 	stw	r3,240(sp)
101040ac:	da003d15 	stw	r8,244(sp)
101040b0:	01050680 	call	10105068 <_dtoa_r>
101040b4:	1021883a 	mov	r16,r2
101040b8:	008019c4 	movi	r2,103
101040bc:	d8c03c17 	ldw	r3,240(sp)
101040c0:	da003d17 	ldw	r8,244(sp)
101040c4:	88817126 	beq	r17,r2,1010468c <___vfprintf_internal_r+0x1cfc>
101040c8:	008011c4 	movi	r2,71
101040cc:	88829226 	beq	r17,r2,10104b18 <___vfprintf_internal_r+0x2188>
101040d0:	80f9883a 	add	fp,r16,r3
101040d4:	d9003617 	ldw	r4,216(sp)
101040d8:	000d883a 	mov	r6,zero
101040dc:	000f883a 	mov	r7,zero
101040e0:	980b883a 	mov	r5,r19
101040e4:	da003d15 	stw	r8,244(sp)
101040e8:	010c2cc0 	call	1010c2cc <__eqdf2>
101040ec:	da003d17 	ldw	r8,244(sp)
101040f0:	10018d26 	beq	r2,zero,10104728 <___vfprintf_internal_r+0x1d98>
101040f4:	d8802117 	ldw	r2,132(sp)
101040f8:	1700062e 	bgeu	r2,fp,10104114 <___vfprintf_internal_r+0x1784>
101040fc:	01000c04 	movi	r4,48
10104100:	10c00044 	addi	r3,r2,1
10104104:	d8c02115 	stw	r3,132(sp)
10104108:	11000005 	stb	r4,0(r2)
1010410c:	d8802117 	ldw	r2,132(sp)
10104110:	173ffb36 	bltu	r2,fp,10104100 <___vfprintf_internal_r+0x1770>
10104114:	1405c83a 	sub	r2,r2,r16
10104118:	d8803315 	stw	r2,204(sp)
1010411c:	008011c4 	movi	r2,71
10104120:	b0817626 	beq	r22,r2,101046fc <___vfprintf_internal_r+0x1d6c>
10104124:	00801944 	movi	r2,101
10104128:	1442810e 	bge	r2,r17,10104b30 <___vfprintf_internal_r+0x21a0>
1010412c:	d8c02617 	ldw	r3,152(sp)
10104130:	00801984 	movi	r2,102
10104134:	d8c03215 	stw	r3,200(sp)
10104138:	8881fe26 	beq	r17,r2,10104934 <___vfprintf_internal_r+0x1fa4>
1010413c:	d8c03217 	ldw	r3,200(sp)
10104140:	d9003317 	ldw	r4,204(sp)
10104144:	1901dd16 	blt	r3,r4,101048bc <___vfprintf_internal_r+0x1f2c>
10104148:	9480004c 	andi	r18,r18,1
1010414c:	90022b1e 	bne	r18,zero,101049fc <___vfprintf_internal_r+0x206c>
10104150:	1805883a 	mov	r2,r3
10104154:	18028016 	blt	r3,zero,10104b58 <___vfprintf_internal_r+0x21c8>
10104158:	d8c03217 	ldw	r3,200(sp)
1010415c:	044019c4 	movi	r17,103
10104160:	d8c02e15 	stw	r3,184(sp)
10104164:	df002a07 	ldb	fp,168(sp)
10104168:	e001531e 	bne	fp,zero,101046b8 <___vfprintf_internal_r+0x1d28>
1010416c:	df002783 	ldbu	fp,158(sp)
10104170:	d8802a15 	stw	r2,168(sp)
10104174:	dc802b17 	ldw	r18,172(sp)
10104178:	d8002915 	stw	zero,164(sp)
1010417c:	003bd106 	br	101030c4 <___vfprintf_internal_r+0x734>
10104180:	d8802d17 	ldw	r2,180(sp)
10104184:	d8c02d17 	ldw	r3,180(sp)
10104188:	d9002d17 	ldw	r4,180(sp)
1010418c:	10800017 	ldw	r2,0(r2)
10104190:	18c00117 	ldw	r3,4(r3)
10104194:	21000204 	addi	r4,r4,8
10104198:	d8803615 	stw	r2,216(sp)
1010419c:	d8c03815 	stw	r3,224(sp)
101041a0:	d9002d15 	stw	r4,180(sp)
101041a4:	003b7506 	br	10102f7c <___vfprintf_internal_r+0x5ec>
101041a8:	ac400007 	ldb	r17,0(r21)
101041ac:	003a5906 	br	10102b14 <___vfprintf_internal_r+0x184>
101041b0:	9080100c 	andi	r2,r18,64
101041b4:	1000a826 	beq	r2,zero,10104458 <___vfprintf_internal_r+0x1ac8>
101041b8:	d9002d17 	ldw	r4,180(sp)
101041bc:	002d883a 	mov	r22,zero
101041c0:	24c0000b 	ldhu	r19,0(r4)
101041c4:	21000104 	addi	r4,r4,4
101041c8:	d9002d15 	stw	r4,180(sp)
101041cc:	003ccb06 	br	101034fc <___vfprintf_internal_r+0xb6c>
101041d0:	d8c02d17 	ldw	r3,180(sp)
101041d4:	d9002917 	ldw	r4,164(sp)
101041d8:	002d883a 	mov	r22,zero
101041dc:	18800104 	addi	r2,r3,4
101041e0:	1cc00017 	ldw	r19,0(r3)
101041e4:	203ebb0e 	bge	r4,zero,10103cd4 <___vfprintf_internal_r+0x1344>
101041e8:	003ef106 	br	10103db0 <___vfprintf_internal_r+0x1420>
101041ec:	9080040c 	andi	r2,r18,16
101041f0:	1000921e 	bne	r2,zero,1010443c <___vfprintf_internal_r+0x1aac>
101041f4:	9480100c 	andi	r18,r18,64
101041f8:	90013926 	beq	r18,zero,101046e0 <___vfprintf_internal_r+0x1d50>
101041fc:	d9002d17 	ldw	r4,180(sp)
10104200:	d9402f17 	ldw	r5,188(sp)
10104204:	20800017 	ldw	r2,0(r4)
10104208:	21000104 	addi	r4,r4,4
1010420c:	d9002d15 	stw	r4,180(sp)
10104210:	1140000d 	sth	r5,0(r2)
10104214:	003a1606 	br	10102a70 <___vfprintf_internal_r+0xe0>
10104218:	9080100c 	andi	r2,r18,64
1010421c:	10008026 	beq	r2,zero,10104420 <___vfprintf_internal_r+0x1a90>
10104220:	d8c02d17 	ldw	r3,180(sp)
10104224:	1cc0000f 	ldh	r19,0(r3)
10104228:	18c00104 	addi	r3,r3,4
1010422c:	d8c02d15 	stw	r3,180(sp)
10104230:	982dd7fa 	srai	r22,r19,31
10104234:	b005883a 	mov	r2,r22
10104238:	003b1f06 	br	10102eb8 <___vfprintf_internal_r+0x528>
1010423c:	9080100c 	andi	r2,r18,64
10104240:	d8002785 	stb	zero,158(sp)
10104244:	10008a1e 	bne	r2,zero,10104470 <___vfprintf_internal_r+0x1ae0>
10104248:	d9402d17 	ldw	r5,180(sp)
1010424c:	d8c02917 	ldw	r3,164(sp)
10104250:	002d883a 	mov	r22,zero
10104254:	28800104 	addi	r2,r5,4
10104258:	2cc00017 	ldw	r19,0(r5)
1010425c:	183e4b0e 	bge	r3,zero,10103b8c <___vfprintf_internal_r+0x11fc>
10104260:	9d86b03a 	or	r3,r19,r22
10104264:	d8802d15 	stw	r2,180(sp)
10104268:	183e4c1e 	bne	r3,zero,10103b9c <___vfprintf_internal_r+0x120c>
1010426c:	0039883a 	mov	fp,zero
10104270:	0005883a 	mov	r2,zero
10104274:	003d4006 	br	10103778 <___vfprintf_internal_r+0xde8>
10104278:	01440474 	movhi	r5,4113
1010427c:	297fbf84 	addi	r5,r5,-258
10104280:	d9402b15 	stw	r5,172(sp)
10104284:	d9402b17 	ldw	r5,172(sp)
10104288:	1c47883a 	add	r3,r3,r17
1010428c:	10800044 	addi	r2,r2,1
10104290:	41400015 	stw	r5,0(r8)
10104294:	44400115 	stw	r17,4(r8)
10104298:	d8c02015 	stw	r3,128(sp)
1010429c:	d8801f15 	stw	r2,124(sp)
101042a0:	010001c4 	movi	r4,7
101042a4:	20bec816 	blt	r4,r2,10103dc8 <___vfprintf_internal_r+0x1438>
101042a8:	42000204 	addi	r8,r8,8
101042ac:	003ecd06 	br	10103de4 <___vfprintf_internal_r+0x1454>
101042b0:	d9002917 	ldw	r4,164(sp)
101042b4:	d8002785 	stb	zero,158(sp)
101042b8:	203d2d16 	blt	r4,zero,10103770 <___vfprintf_internal_r+0xde0>
101042bc:	00bfdfc4 	movi	r2,-129
101042c0:	90a4703a 	and	r18,r18,r2
101042c4:	003a9106 	br	10102d0c <___vfprintf_internal_r+0x37c>
101042c8:	01040474 	movhi	r4,4113
101042cc:	213fbf84 	addi	r4,r4,-258
101042d0:	d9002b15 	stw	r4,172(sp)
101042d4:	003c0c06 	br	10103308 <___vfprintf_internal_r+0x978>
101042d8:	d9002c17 	ldw	r4,176(sp)
101042dc:	d9801e04 	addi	r6,sp,120
101042e0:	b80b883a 	mov	r5,r23
101042e4:	010897c0 	call	1010897c <__sprint_r>
101042e8:	103aab1e 	bne	r2,zero,10102d98 <___vfprintf_internal_r+0x408>
101042ec:	d8c02017 	ldw	r3,128(sp)
101042f0:	da000404 	addi	r8,sp,16
101042f4:	003d4106 	br	101037fc <___vfprintf_internal_r+0xe6c>
101042f8:	d8801f17 	ldw	r2,124(sp)
101042fc:	01440474 	movhi	r5,4113
10104300:	01000044 	movi	r4,1
10104304:	18c00044 	addi	r3,r3,1
10104308:	10800044 	addi	r2,r2,1
1010430c:	297fbf04 	addi	r5,r5,-260
10104310:	41000115 	stw	r4,4(r8)
10104314:	41400015 	stw	r5,0(r8)
10104318:	d8c02015 	stw	r3,128(sp)
1010431c:	d8801f15 	stw	r2,124(sp)
10104320:	010001c4 	movi	r4,7
10104324:	20805c16 	blt	r4,r2,10104498 <___vfprintf_internal_r+0x1b08>
10104328:	42000204 	addi	r8,r8,8
1010432c:	8800041e 	bne	r17,zero,10104340 <___vfprintf_internal_r+0x19b0>
10104330:	d8803317 	ldw	r2,204(sp)
10104334:	1000021e 	bne	r2,zero,10104340 <___vfprintf_internal_r+0x19b0>
10104338:	9080004c 	andi	r2,r18,1
1010433c:	103c0926 	beq	r2,zero,10103364 <___vfprintf_internal_r+0x9d4>
10104340:	d9003717 	ldw	r4,220(sp)
10104344:	d8801f17 	ldw	r2,124(sp)
10104348:	d9403417 	ldw	r5,208(sp)
1010434c:	20c7883a 	add	r3,r4,r3
10104350:	10800044 	addi	r2,r2,1
10104354:	41000115 	stw	r4,4(r8)
10104358:	41400015 	stw	r5,0(r8)
1010435c:	d8c02015 	stw	r3,128(sp)
10104360:	d8801f15 	stw	r2,124(sp)
10104364:	010001c4 	movi	r4,7
10104368:	20812116 	blt	r4,r2,101047f0 <___vfprintf_internal_r+0x1e60>
1010436c:	42000204 	addi	r8,r8,8
10104370:	0463c83a 	sub	r17,zero,r17
10104374:	0440730e 	bge	zero,r17,10104544 <___vfprintf_internal_r+0x1bb4>
10104378:	05800404 	movi	r22,16
1010437c:	b440860e 	bge	r22,r17,10104598 <___vfprintf_internal_r+0x1c08>
10104380:	01440474 	movhi	r5,4113
10104384:	297fbf84 	addi	r5,r5,-258
10104388:	d9402b15 	stw	r5,172(sp)
1010438c:	070001c4 	movi	fp,7
10104390:	dcc02c17 	ldw	r19,176(sp)
10104394:	00000306 	br	101043a4 <___vfprintf_internal_r+0x1a14>
10104398:	42000204 	addi	r8,r8,8
1010439c:	8c7ffc04 	addi	r17,r17,-16
101043a0:	b440800e 	bge	r22,r17,101045a4 <___vfprintf_internal_r+0x1c14>
101043a4:	18c00404 	addi	r3,r3,16
101043a8:	10800044 	addi	r2,r2,1
101043ac:	45000015 	stw	r20,0(r8)
101043b0:	45800115 	stw	r22,4(r8)
101043b4:	d8c02015 	stw	r3,128(sp)
101043b8:	d8801f15 	stw	r2,124(sp)
101043bc:	e0bff60e 	bge	fp,r2,10104398 <___vfprintf_internal_r+0x1a08>
101043c0:	d9801e04 	addi	r6,sp,120
101043c4:	b80b883a 	mov	r5,r23
101043c8:	9809883a 	mov	r4,r19
101043cc:	010897c0 	call	1010897c <__sprint_r>
101043d0:	103a711e 	bne	r2,zero,10102d98 <___vfprintf_internal_r+0x408>
101043d4:	d8c02017 	ldw	r3,128(sp)
101043d8:	d8801f17 	ldw	r2,124(sp)
101043dc:	da000404 	addi	r8,sp,16
101043e0:	003fee06 	br	1010439c <___vfprintf_internal_r+0x1a0c>
101043e4:	00bfffc4 	movi	r2,-1
101043e8:	003a6f06 	br	10102da8 <___vfprintf_internal_r+0x418>
101043ec:	008011c4 	movi	r2,71
101043f0:	1440b816 	blt	r2,r17,101046d4 <___vfprintf_internal_r+0x1d44>
101043f4:	04040474 	movhi	r16,4113
101043f8:	843fb104 	addi	r16,r16,-316
101043fc:	00c000c4 	movi	r3,3
10104400:	00bfdfc4 	movi	r2,-129
10104404:	d8c02a15 	stw	r3,168(sp)
10104408:	90a4703a 	and	r18,r18,r2
1010440c:	df002783 	ldbu	fp,158(sp)
10104410:	d8c02e15 	stw	r3,184(sp)
10104414:	d8002915 	stw	zero,164(sp)
10104418:	d8003215 	stw	zero,200(sp)
1010441c:	003b2906 	br	101030c4 <___vfprintf_internal_r+0x734>
10104420:	d9002d17 	ldw	r4,180(sp)
10104424:	24c00017 	ldw	r19,0(r4)
10104428:	21000104 	addi	r4,r4,4
1010442c:	d9002d15 	stw	r4,180(sp)
10104430:	982dd7fa 	srai	r22,r19,31
10104434:	b005883a 	mov	r2,r22
10104438:	003a9f06 	br	10102eb8 <___vfprintf_internal_r+0x528>
1010443c:	d9402d17 	ldw	r5,180(sp)
10104440:	d8c02f17 	ldw	r3,188(sp)
10104444:	28800017 	ldw	r2,0(r5)
10104448:	29400104 	addi	r5,r5,4
1010444c:	d9402d15 	stw	r5,180(sp)
10104450:	10c00015 	stw	r3,0(r2)
10104454:	00398606 	br	10102a70 <___vfprintf_internal_r+0xe0>
10104458:	d9402d17 	ldw	r5,180(sp)
1010445c:	002d883a 	mov	r22,zero
10104460:	2cc00017 	ldw	r19,0(r5)
10104464:	29400104 	addi	r5,r5,4
10104468:	d9402d15 	stw	r5,180(sp)
1010446c:	003c2306 	br	101034fc <___vfprintf_internal_r+0xb6c>
10104470:	d8c02d17 	ldw	r3,180(sp)
10104474:	d9002917 	ldw	r4,164(sp)
10104478:	002d883a 	mov	r22,zero
1010447c:	18800104 	addi	r2,r3,4
10104480:	1cc0000b 	ldhu	r19,0(r3)
10104484:	203dc10e 	bge	r4,zero,10103b8c <___vfprintf_internal_r+0x11fc>
10104488:	003f7506 	br	10104260 <___vfprintf_internal_r+0x18d0>
1010448c:	04040474 	movhi	r16,4113
10104490:	843faf04 	addi	r16,r16,-324
10104494:	003acc06 	br	10102fc8 <___vfprintf_internal_r+0x638>
10104498:	d9002c17 	ldw	r4,176(sp)
1010449c:	d9801e04 	addi	r6,sp,120
101044a0:	b80b883a 	mov	r5,r23
101044a4:	010897c0 	call	1010897c <__sprint_r>
101044a8:	103a3b1e 	bne	r2,zero,10102d98 <___vfprintf_internal_r+0x408>
101044ac:	dc402617 	ldw	r17,152(sp)
101044b0:	d8c02017 	ldw	r3,128(sp)
101044b4:	da000404 	addi	r8,sp,16
101044b8:	003f9c06 	br	1010432c <___vfprintf_internal_r+0x199c>
101044bc:	ac400043 	ldbu	r17,1(r21)
101044c0:	94800814 	ori	r18,r18,32
101044c4:	ad400044 	addi	r21,r21,1
101044c8:	8c403fcc 	andi	r17,r17,255
101044cc:	8c40201c 	xori	r17,r17,128
101044d0:	8c7fe004 	addi	r17,r17,-128
101044d4:	00398f06 	br	10102b14 <___vfprintf_internal_r+0x184>
101044d8:	d8c02d15 	stw	r3,180(sp)
101044dc:	0039883a 	mov	fp,zero
101044e0:	003e3506 	br	10103db8 <___vfprintf_internal_r+0x1428>
101044e4:	d9002c17 	ldw	r4,176(sp)
101044e8:	d9801e04 	addi	r6,sp,120
101044ec:	b80b883a 	mov	r5,r23
101044f0:	010897c0 	call	1010897c <__sprint_r>
101044f4:	103a281e 	bne	r2,zero,10102d98 <___vfprintf_internal_r+0x408>
101044f8:	d8c02017 	ldw	r3,128(sp)
101044fc:	da000404 	addi	r8,sp,16
10104500:	003cd006 	br	10103844 <___vfprintf_internal_r+0xeb4>
10104504:	8009883a 	mov	r4,r16
10104508:	da003d15 	stw	r8,244(sp)
1010450c:	01028f80 	call	101028f8 <strlen>
10104510:	d8802e15 	stw	r2,184(sp)
10104514:	da003d17 	ldw	r8,244(sp)
10104518:	103c340e 	bge	r2,zero,101035ec <___vfprintf_internal_r+0xc5c>
1010451c:	0005883a 	mov	r2,zero
10104520:	003c3206 	br	101035ec <___vfprintf_internal_r+0xc5c>
10104524:	d9002c17 	ldw	r4,176(sp)
10104528:	d9801e04 	addi	r6,sp,120
1010452c:	b80b883a 	mov	r5,r23
10104530:	010897c0 	call	1010897c <__sprint_r>
10104534:	103a181e 	bne	r2,zero,10102d98 <___vfprintf_internal_r+0x408>
10104538:	d8c02017 	ldw	r3,128(sp)
1010453c:	d8801f17 	ldw	r2,124(sp)
10104540:	da000404 	addi	r8,sp,16
10104544:	d9403317 	ldw	r5,204(sp)
10104548:	10800044 	addi	r2,r2,1
1010454c:	44000015 	stw	r16,0(r8)
10104550:	28c7883a 	add	r3,r5,r3
10104554:	003b7d06 	br	1010334c <___vfprintf_internal_r+0x9bc>
10104558:	01040474 	movhi	r4,4113
1010455c:	213fc384 	addi	r4,r4,-242
10104560:	d9003515 	stw	r4,212(sp)
10104564:	003b1406 	br	101031b8 <___vfprintf_internal_r+0x828>
10104568:	013fffc4 	movi	r4,-1
1010456c:	003a3506 	br	10102e44 <___vfprintf_internal_r+0x4b4>
10104570:	0023883a 	mov	r17,zero
10104574:	003d9d06 	br	10103bec <___vfprintf_internal_r+0x125c>
10104578:	d9002c17 	ldw	r4,176(sp)
1010457c:	d9801e04 	addi	r6,sp,120
10104580:	b80b883a 	mov	r5,r23
10104584:	010897c0 	call	1010897c <__sprint_r>
10104588:	103a031e 	bne	r2,zero,10102d98 <___vfprintf_internal_r+0x408>
1010458c:	d8c02017 	ldw	r3,128(sp)
10104590:	da000404 	addi	r8,sp,16
10104594:	003d9406 	br	10103be8 <___vfprintf_internal_r+0x1258>
10104598:	01040474 	movhi	r4,4113
1010459c:	213fbf84 	addi	r4,r4,-258
101045a0:	d9002b15 	stw	r4,172(sp)
101045a4:	d9002b17 	ldw	r4,172(sp)
101045a8:	1c47883a 	add	r3,r3,r17
101045ac:	10800044 	addi	r2,r2,1
101045b0:	41000015 	stw	r4,0(r8)
101045b4:	44400115 	stw	r17,4(r8)
101045b8:	d8c02015 	stw	r3,128(sp)
101045bc:	d8801f15 	stw	r2,124(sp)
101045c0:	010001c4 	movi	r4,7
101045c4:	20bfd716 	blt	r4,r2,10104524 <___vfprintf_internal_r+0x1b94>
101045c8:	42000204 	addi	r8,r8,8
101045cc:	003fdd06 	br	10104544 <___vfprintf_internal_r+0x1bb4>
101045d0:	d9002c17 	ldw	r4,176(sp)
101045d4:	d9801e04 	addi	r6,sp,120
101045d8:	b80b883a 	mov	r5,r23
101045dc:	010897c0 	call	1010897c <__sprint_r>
101045e0:	1039ed1e 	bne	r2,zero,10102d98 <___vfprintf_internal_r+0x408>
101045e4:	d8802617 	ldw	r2,152(sp)
101045e8:	d8c02017 	ldw	r3,128(sp)
101045ec:	da000404 	addi	r8,sp,16
101045f0:	003e1006 	br	10103e34 <___vfprintf_internal_r+0x14a4>
101045f4:	00800044 	movi	r2,1
101045f8:	10803fcc 	andi	r2,r2,255
101045fc:	00c00044 	movi	r3,1
10104600:	10fa3526 	beq	r2,r3,10102ed8 <___vfprintf_internal_r+0x548>
10104604:	00c00084 	movi	r3,2
10104608:	10fbcb26 	beq	r2,r3,10103538 <___vfprintf_internal_r+0xba8>
1010460c:	003a8f06 	br	1010304c <___vfprintf_internal_r+0x6bc>
10104610:	01040474 	movhi	r4,4113
10104614:	213fc384 	addi	r4,r4,-242
10104618:	d9003515 	stw	r4,212(sp)
1010461c:	003b7606 	br	101033f8 <___vfprintf_internal_r+0xa68>
10104620:	d8802917 	ldw	r2,164(sp)
10104624:	00c00184 	movi	r3,6
10104628:	1880012e 	bgeu	r3,r2,10104630 <___vfprintf_internal_r+0x1ca0>
1010462c:	1805883a 	mov	r2,r3
10104630:	d8802e15 	stw	r2,184(sp)
10104634:	1000ef16 	blt	r2,zero,101049f4 <___vfprintf_internal_r+0x2064>
10104638:	04040474 	movhi	r16,4113
1010463c:	d8802a15 	stw	r2,168(sp)
10104640:	dcc02d15 	stw	r19,180(sp)
10104644:	d8002915 	stw	zero,164(sp)
10104648:	d8003215 	stw	zero,200(sp)
1010464c:	843fbd04 	addi	r16,r16,-268
10104650:	0039883a 	mov	fp,zero
10104654:	003aa206 	br	101030e0 <___vfprintf_internal_r+0x750>
10104658:	0021883a 	mov	r16,zero
1010465c:	003e0706 	br	10103e7c <___vfprintf_internal_r+0x14ec>
10104660:	d9002c17 	ldw	r4,176(sp)
10104664:	d9801e04 	addi	r6,sp,120
10104668:	b80b883a 	mov	r5,r23
1010466c:	010897c0 	call	1010897c <__sprint_r>
10104670:	1039c91e 	bne	r2,zero,10102d98 <___vfprintf_internal_r+0x408>
10104674:	d8802617 	ldw	r2,152(sp)
10104678:	d9403317 	ldw	r5,204(sp)
1010467c:	d8c02017 	ldw	r3,128(sp)
10104680:	da000404 	addi	r8,sp,16
10104684:	2885c83a 	sub	r2,r5,r2
10104688:	003dfb06 	br	10103e78 <___vfprintf_internal_r+0x14e8>
1010468c:	9080004c 	andi	r2,r18,1
10104690:	103e8f1e 	bne	r2,zero,101040d0 <___vfprintf_internal_r+0x1740>
10104694:	d8802117 	ldw	r2,132(sp)
10104698:	003e9e06 	br	10104114 <___vfprintf_internal_r+0x1784>
1010469c:	1025883a 	mov	r18,r2
101046a0:	0039883a 	mov	fp,zero
101046a4:	00800084 	movi	r2,2
101046a8:	003fd306 	br	101045f8 <___vfprintf_internal_r+0x1c68>
101046ac:	07000b44 	movi	fp,45
101046b0:	df002785 	stb	fp,158(sp)
101046b4:	003a4006 	br	10102fb8 <___vfprintf_internal_r+0x628>
101046b8:	00c00b44 	movi	r3,45
101046bc:	d8c02785 	stb	r3,158(sp)
101046c0:	d8802a15 	stw	r2,168(sp)
101046c4:	dc802b17 	ldw	r18,172(sp)
101046c8:	d8002915 	stw	zero,164(sp)
101046cc:	07000b44 	movi	fp,45
101046d0:	003a8006 	br	101030d4 <___vfprintf_internal_r+0x744>
101046d4:	04040474 	movhi	r16,4113
101046d8:	843fb204 	addi	r16,r16,-312
101046dc:	003f4706 	br	101043fc <___vfprintf_internal_r+0x1a6c>
101046e0:	d8c02d17 	ldw	r3,180(sp)
101046e4:	d9002f17 	ldw	r4,188(sp)
101046e8:	18800017 	ldw	r2,0(r3)
101046ec:	18c00104 	addi	r3,r3,4
101046f0:	d8c02d15 	stw	r3,180(sp)
101046f4:	11000015 	stw	r4,0(r2)
101046f8:	0038dd06 	br	10102a70 <___vfprintf_internal_r+0xe0>
101046fc:	dd802617 	ldw	r22,152(sp)
10104700:	00bfff44 	movi	r2,-3
10104704:	b0801c16 	blt	r22,r2,10104778 <___vfprintf_internal_r+0x1de8>
10104708:	d9402917 	ldw	r5,164(sp)
1010470c:	2d801a16 	blt	r5,r22,10104778 <___vfprintf_internal_r+0x1de8>
10104710:	dd803215 	stw	r22,200(sp)
10104714:	003e8906 	br	1010413c <___vfprintf_internal_r+0x17ac>
10104718:	01040474 	movhi	r4,4113
1010471c:	213fbf84 	addi	r4,r4,-258
10104720:	d9002b15 	stw	r4,172(sp)
10104724:	003c9106 	br	1010396c <___vfprintf_internal_r+0xfdc>
10104728:	e005883a 	mov	r2,fp
1010472c:	003e7906 	br	10104114 <___vfprintf_internal_r+0x1784>
10104730:	d9402917 	ldw	r5,164(sp)
10104734:	df002783 	ldbu	fp,158(sp)
10104738:	dcc02d15 	stw	r19,180(sp)
1010473c:	d9402a15 	stw	r5,168(sp)
10104740:	d9402e15 	stw	r5,184(sp)
10104744:	d8002915 	stw	zero,164(sp)
10104748:	d8003215 	stw	zero,200(sp)
1010474c:	003a5d06 	br	101030c4 <___vfprintf_internal_r+0x734>
10104750:	9080004c 	andi	r2,r18,1
10104754:	0039883a 	mov	fp,zero
10104758:	10000426 	beq	r2,zero,1010476c <___vfprintf_internal_r+0x1ddc>
1010475c:	00800c04 	movi	r2,48
10104760:	dc001dc4 	addi	r16,sp,119
10104764:	d8801dc5 	stb	r2,119(sp)
10104768:	003b8006 	br	1010356c <___vfprintf_internal_r+0xbdc>
1010476c:	d8002e15 	stw	zero,184(sp)
10104770:	dc001e04 	addi	r16,sp,120
10104774:	003a4d06 	br	101030ac <___vfprintf_internal_r+0x71c>
10104778:	8c7fff84 	addi	r17,r17,-2
1010477c:	b5bfffc4 	addi	r22,r22,-1
10104780:	dd802615 	stw	r22,152(sp)
10104784:	dc4022c5 	stb	r17,139(sp)
10104788:	b000bf16 	blt	r22,zero,10104a88 <___vfprintf_internal_r+0x20f8>
1010478c:	00800ac4 	movi	r2,43
10104790:	d8802305 	stb	r2,140(sp)
10104794:	00800244 	movi	r2,9
10104798:	15807016 	blt	r2,r22,1010495c <___vfprintf_internal_r+0x1fcc>
1010479c:	00800c04 	movi	r2,48
101047a0:	b5800c04 	addi	r22,r22,48
101047a4:	d8802345 	stb	r2,141(sp)
101047a8:	dd802385 	stb	r22,142(sp)
101047ac:	d88023c4 	addi	r2,sp,143
101047b0:	df0022c4 	addi	fp,sp,139
101047b4:	d8c03317 	ldw	r3,204(sp)
101047b8:	1739c83a 	sub	fp,r2,fp
101047bc:	d9003317 	ldw	r4,204(sp)
101047c0:	e0c7883a 	add	r3,fp,r3
101047c4:	df003a15 	stw	fp,232(sp)
101047c8:	d8c02e15 	stw	r3,184(sp)
101047cc:	00800044 	movi	r2,1
101047d0:	1100b30e 	bge	r2,r4,10104aa0 <___vfprintf_internal_r+0x2110>
101047d4:	d8c02e17 	ldw	r3,184(sp)
101047d8:	18c00044 	addi	r3,r3,1
101047dc:	d8c02e15 	stw	r3,184(sp)
101047e0:	1805883a 	mov	r2,r3
101047e4:	1800ac16 	blt	r3,zero,10104a98 <___vfprintf_internal_r+0x2108>
101047e8:	d8003215 	stw	zero,200(sp)
101047ec:	003e5d06 	br	10104164 <___vfprintf_internal_r+0x17d4>
101047f0:	d9002c17 	ldw	r4,176(sp)
101047f4:	d9801e04 	addi	r6,sp,120
101047f8:	b80b883a 	mov	r5,r23
101047fc:	010897c0 	call	1010897c <__sprint_r>
10104800:	1039651e 	bne	r2,zero,10102d98 <___vfprintf_internal_r+0x408>
10104804:	dc402617 	ldw	r17,152(sp)
10104808:	d8c02017 	ldw	r3,128(sp)
1010480c:	d8801f17 	ldw	r2,124(sp)
10104810:	da000404 	addi	r8,sp,16
10104814:	003ed606 	br	10104370 <___vfprintf_internal_r+0x19e0>
10104818:	582b883a 	mov	r21,r11
1010481c:	d8002915 	stw	zero,164(sp)
10104820:	0038bd06 	br	10102b18 <___vfprintf_internal_r+0x188>
10104824:	d8802917 	ldw	r2,164(sp)
10104828:	103e071e 	bne	r2,zero,10104048 <___vfprintf_internal_r+0x16b8>
1010482c:	dc002915 	stw	r16,164(sp)
10104830:	003e0506 	br	10104048 <___vfprintf_internal_r+0x16b8>
10104834:	d9002917 	ldw	r4,164(sp)
10104838:	20c00044 	addi	r3,r4,1
1010483c:	003e0f06 	br	1010407c <___vfprintf_internal_r+0x16ec>
10104840:	01400184 	movi	r5,6
10104844:	d9402915 	stw	r5,164(sp)
10104848:	003dff06 	br	10104048 <___vfprintf_internal_r+0x16b8>
1010484c:	d8802104 	addi	r2,sp,132
10104850:	d8800315 	stw	r2,12(sp)
10104854:	d8802504 	addi	r2,sp,148
10104858:	d8800215 	stw	r2,8(sp)
1010485c:	d8802604 	addi	r2,sp,152
10104860:	d8800115 	stw	r2,4(sp)
10104864:	d8802917 	ldw	r2,164(sp)
10104868:	d9403617 	ldw	r5,216(sp)
1010486c:	d9002c17 	ldw	r4,176(sp)
10104870:	d8800015 	stw	r2,0(sp)
10104874:	01c000c4 	movi	r7,3
10104878:	980d883a 	mov	r6,r19
1010487c:	da003d15 	stw	r8,244(sp)
10104880:	01050680 	call	10105068 <_dtoa_r>
10104884:	d8c02917 	ldw	r3,164(sp)
10104888:	da003d17 	ldw	r8,244(sp)
1010488c:	1021883a 	mov	r16,r2
10104890:	10f9883a 	add	fp,r2,r3
10104894:	81000007 	ldb	r4,0(r16)
10104898:	00800c04 	movi	r2,48
1010489c:	20805e26 	beq	r4,r2,10104a18 <___vfprintf_internal_r+0x2088>
101048a0:	d8c02617 	ldw	r3,152(sp)
101048a4:	e0f9883a 	add	fp,fp,r3
101048a8:	003e0a06 	br	101040d4 <___vfprintf_internal_r+0x1744>
101048ac:	00c00b44 	movi	r3,45
101048b0:	24e0003c 	xorhi	r19,r4,32768
101048b4:	d8c02a05 	stb	r3,168(sp)
101048b8:	003de906 	br	10104060 <___vfprintf_internal_r+0x16d0>
101048bc:	d8c03217 	ldw	r3,200(sp)
101048c0:	00c07a0e 	bge	zero,r3,10104aac <___vfprintf_internal_r+0x211c>
101048c4:	00800044 	movi	r2,1
101048c8:	d9003317 	ldw	r4,204(sp)
101048cc:	1105883a 	add	r2,r2,r4
101048d0:	d8802e15 	stw	r2,184(sp)
101048d4:	10004e16 	blt	r2,zero,10104a10 <___vfprintf_internal_r+0x2080>
101048d8:	044019c4 	movi	r17,103
101048dc:	003e2106 	br	10104164 <___vfprintf_internal_r+0x17d4>
101048e0:	d9002917 	ldw	r4,164(sp)
101048e4:	d8802104 	addi	r2,sp,132
101048e8:	d8800315 	stw	r2,12(sp)
101048ec:	d9000015 	stw	r4,0(sp)
101048f0:	d8802504 	addi	r2,sp,148
101048f4:	d9403617 	ldw	r5,216(sp)
101048f8:	d9002c17 	ldw	r4,176(sp)
101048fc:	d8800215 	stw	r2,8(sp)
10104900:	d8802604 	addi	r2,sp,152
10104904:	d8800115 	stw	r2,4(sp)
10104908:	01c000c4 	movi	r7,3
1010490c:	980d883a 	mov	r6,r19
10104910:	da003d15 	stw	r8,244(sp)
10104914:	01050680 	call	10105068 <_dtoa_r>
10104918:	d8c02917 	ldw	r3,164(sp)
1010491c:	da003d17 	ldw	r8,244(sp)
10104920:	1021883a 	mov	r16,r2
10104924:	00801184 	movi	r2,70
10104928:	80f9883a 	add	fp,r16,r3
1010492c:	88bfd926 	beq	r17,r2,10104894 <___vfprintf_internal_r+0x1f04>
10104930:	003de806 	br	101040d4 <___vfprintf_internal_r+0x1744>
10104934:	d9002917 	ldw	r4,164(sp)
10104938:	00c04d0e 	bge	zero,r3,10104a70 <___vfprintf_internal_r+0x20e0>
1010493c:	2000441e 	bne	r4,zero,10104a50 <___vfprintf_internal_r+0x20c0>
10104940:	9480004c 	andi	r18,r18,1
10104944:	9000421e 	bne	r18,zero,10104a50 <___vfprintf_internal_r+0x20c0>
10104948:	1805883a 	mov	r2,r3
1010494c:	18007016 	blt	r3,zero,10104b10 <___vfprintf_internal_r+0x2180>
10104950:	d8c03217 	ldw	r3,200(sp)
10104954:	d8c02e15 	stw	r3,184(sp)
10104958:	003e0206 	br	10104164 <___vfprintf_internal_r+0x17d4>
1010495c:	df0022c4 	addi	fp,sp,139
10104960:	dc002915 	stw	r16,164(sp)
10104964:	4027883a 	mov	r19,r8
10104968:	e021883a 	mov	r16,fp
1010496c:	b009883a 	mov	r4,r22
10104970:	01400284 	movi	r5,10
10104974:	010b0080 	call	1010b008 <__modsi3>
10104978:	10800c04 	addi	r2,r2,48
1010497c:	843fffc4 	addi	r16,r16,-1
10104980:	b009883a 	mov	r4,r22
10104984:	01400284 	movi	r5,10
10104988:	80800005 	stb	r2,0(r16)
1010498c:	010af840 	call	1010af84 <__divsi3>
10104990:	102d883a 	mov	r22,r2
10104994:	00800244 	movi	r2,9
10104998:	15bff416 	blt	r2,r22,1010496c <___vfprintf_internal_r+0x1fdc>
1010499c:	9811883a 	mov	r8,r19
101049a0:	b0800c04 	addi	r2,r22,48
101049a4:	8027883a 	mov	r19,r16
101049a8:	997fffc4 	addi	r5,r19,-1
101049ac:	98bfffc5 	stb	r2,-1(r19)
101049b0:	dc002917 	ldw	r16,164(sp)
101049b4:	2f006a2e 	bgeu	r5,fp,10104b60 <___vfprintf_internal_r+0x21d0>
101049b8:	d9c02384 	addi	r7,sp,142
101049bc:	3ccfc83a 	sub	r7,r7,r19
101049c0:	d9002344 	addi	r4,sp,141
101049c4:	e1cf883a 	add	r7,fp,r7
101049c8:	00000106 	br	101049d0 <___vfprintf_internal_r+0x2040>
101049cc:	28800003 	ldbu	r2,0(r5)
101049d0:	20800005 	stb	r2,0(r4)
101049d4:	21000044 	addi	r4,r4,1
101049d8:	29400044 	addi	r5,r5,1
101049dc:	393ffb1e 	bne	r7,r4,101049cc <___vfprintf_internal_r+0x203c>
101049e0:	d8802304 	addi	r2,sp,140
101049e4:	14c5c83a 	sub	r2,r2,r19
101049e8:	d8c02344 	addi	r3,sp,141
101049ec:	1885883a 	add	r2,r3,r2
101049f0:	003f7006 	br	101047b4 <___vfprintf_internal_r+0x1e24>
101049f4:	0005883a 	mov	r2,zero
101049f8:	003f0f06 	br	10104638 <___vfprintf_internal_r+0x1ca8>
101049fc:	d8c03217 	ldw	r3,200(sp)
10104a00:	18c00044 	addi	r3,r3,1
10104a04:	d8c02e15 	stw	r3,184(sp)
10104a08:	1805883a 	mov	r2,r3
10104a0c:	183fb20e 	bge	r3,zero,101048d8 <___vfprintf_internal_r+0x1f48>
10104a10:	0005883a 	mov	r2,zero
10104a14:	003fb006 	br	101048d8 <___vfprintf_internal_r+0x1f48>
10104a18:	d9003617 	ldw	r4,216(sp)
10104a1c:	000d883a 	mov	r6,zero
10104a20:	000f883a 	mov	r7,zero
10104a24:	980b883a 	mov	r5,r19
10104a28:	d8c03c15 	stw	r3,240(sp)
10104a2c:	da003d15 	stw	r8,244(sp)
10104a30:	010c2cc0 	call	1010c2cc <__eqdf2>
10104a34:	d8c03c17 	ldw	r3,240(sp)
10104a38:	da003d17 	ldw	r8,244(sp)
10104a3c:	103f9826 	beq	r2,zero,101048a0 <___vfprintf_internal_r+0x1f10>
10104a40:	00800044 	movi	r2,1
10104a44:	10c7c83a 	sub	r3,r2,r3
10104a48:	d8c02615 	stw	r3,152(sp)
10104a4c:	003f9506 	br	101048a4 <___vfprintf_internal_r+0x1f14>
10104a50:	d9002917 	ldw	r4,164(sp)
10104a54:	d8c03217 	ldw	r3,200(sp)
10104a58:	20800044 	addi	r2,r4,1
10104a5c:	1885883a 	add	r2,r3,r2
10104a60:	d8802e15 	stw	r2,184(sp)
10104a64:	103dbf0e 	bge	r2,zero,10104164 <___vfprintf_internal_r+0x17d4>
10104a68:	0005883a 	mov	r2,zero
10104a6c:	003dbd06 	br	10104164 <___vfprintf_internal_r+0x17d4>
10104a70:	2000211e 	bne	r4,zero,10104af8 <___vfprintf_internal_r+0x2168>
10104a74:	9480004c 	andi	r18,r18,1
10104a78:	90001f1e 	bne	r18,zero,10104af8 <___vfprintf_internal_r+0x2168>
10104a7c:	00800044 	movi	r2,1
10104a80:	d8802e15 	stw	r2,184(sp)
10104a84:	003db706 	br	10104164 <___vfprintf_internal_r+0x17d4>
10104a88:	00800b44 	movi	r2,45
10104a8c:	05adc83a 	sub	r22,zero,r22
10104a90:	d8802305 	stb	r2,140(sp)
10104a94:	003f3f06 	br	10104794 <___vfprintf_internal_r+0x1e04>
10104a98:	0005883a 	mov	r2,zero
10104a9c:	003f5206 	br	101047e8 <___vfprintf_internal_r+0x1e58>
10104aa0:	90a4703a 	and	r18,r18,r2
10104aa4:	903f4e26 	beq	r18,zero,101047e0 <___vfprintf_internal_r+0x1e50>
10104aa8:	003f4a06 	br	101047d4 <___vfprintf_internal_r+0x1e44>
10104aac:	00800084 	movi	r2,2
10104ab0:	10c5c83a 	sub	r2,r2,r3
10104ab4:	003f8406 	br	101048c8 <___vfprintf_internal_r+0x1f38>
10104ab8:	d8802d17 	ldw	r2,180(sp)
10104abc:	d9002d17 	ldw	r4,180(sp)
10104ac0:	ac400043 	ldbu	r17,1(r21)
10104ac4:	10800017 	ldw	r2,0(r2)
10104ac8:	582b883a 	mov	r21,r11
10104acc:	d8802915 	stw	r2,164(sp)
10104ad0:	20800104 	addi	r2,r4,4
10104ad4:	d9002917 	ldw	r4,164(sp)
10104ad8:	d8802d15 	stw	r2,180(sp)
10104adc:	203e7a0e 	bge	r4,zero,101044c8 <___vfprintf_internal_r+0x1b38>
10104ae0:	8c403fcc 	andi	r17,r17,255
10104ae4:	00bfffc4 	movi	r2,-1
10104ae8:	8c40201c 	xori	r17,r17,128
10104aec:	d8802915 	stw	r2,164(sp)
10104af0:	8c7fe004 	addi	r17,r17,-128
10104af4:	00380706 	br	10102b14 <___vfprintf_internal_r+0x184>
10104af8:	d8c02917 	ldw	r3,164(sp)
10104afc:	18c00084 	addi	r3,r3,2
10104b00:	d8c02e15 	stw	r3,184(sp)
10104b04:	1805883a 	mov	r2,r3
10104b08:	183d960e 	bge	r3,zero,10104164 <___vfprintf_internal_r+0x17d4>
10104b0c:	003fd606 	br	10104a68 <___vfprintf_internal_r+0x20d8>
10104b10:	0005883a 	mov	r2,zero
10104b14:	003f8e06 	br	10104950 <___vfprintf_internal_r+0x1fc0>
10104b18:	9080004c 	andi	r2,r18,1
10104b1c:	103f811e 	bne	r2,zero,10104924 <___vfprintf_internal_r+0x1f94>
10104b20:	d8802117 	ldw	r2,132(sp)
10104b24:	1405c83a 	sub	r2,r2,r16
10104b28:	d8803315 	stw	r2,204(sp)
10104b2c:	b47ef326 	beq	r22,r17,101046fc <___vfprintf_internal_r+0x1d6c>
10104b30:	dd802617 	ldw	r22,152(sp)
10104b34:	003f1106 	br	1010477c <___vfprintf_internal_r+0x1dec>
10104b38:	d9c02785 	stb	r7,158(sp)
10104b3c:	00390406 	br	10102f50 <___vfprintf_internal_r+0x5c0>
10104b40:	d9c02785 	stb	r7,158(sp)
10104b44:	0038d306 	br	10102e94 <___vfprintf_internal_r+0x504>
10104b48:	d9c02785 	stb	r7,158(sp)
10104b4c:	003a6106 	br	101034d4 <___vfprintf_internal_r+0xb44>
10104b50:	d9c02785 	stb	r7,158(sp)
10104b54:	003af806 	br	10103738 <___vfprintf_internal_r+0xda8>
10104b58:	0005883a 	mov	r2,zero
10104b5c:	003d7e06 	br	10104158 <___vfprintf_internal_r+0x17c8>
10104b60:	d8802344 	addi	r2,sp,141
10104b64:	003f1306 	br	101047b4 <___vfprintf_internal_r+0x1e24>
10104b68:	d9c02785 	stb	r7,158(sp)
10104b6c:	00392306 	br	10102ffc <___vfprintf_internal_r+0x66c>
10104b70:	d9c02785 	stb	r7,158(sp)
10104b74:	003aa906 	br	1010361c <___vfprintf_internal_r+0xc8c>
10104b78:	d9c02785 	stb	r7,158(sp)
10104b7c:	003a3d06 	br	10103474 <___vfprintf_internal_r+0xae4>
10104b80:	d9c02785 	stb	r7,158(sp)
10104b84:	003aca06 	br	101036b0 <___vfprintf_internal_r+0xd20>

10104b88 <__vfprintf_internal>:
10104b88:	00840474 	movhi	r2,4113
10104b8c:	10871904 	addi	r2,r2,7268
10104b90:	300f883a 	mov	r7,r6
10104b94:	280d883a 	mov	r6,r5
10104b98:	200b883a 	mov	r5,r4
10104b9c:	11000017 	ldw	r4,0(r2)
10104ba0:	01029901 	jmpi	10102990 <___vfprintf_internal_r>

10104ba4 <__sbprintf>:
10104ba4:	2880030b 	ldhu	r2,12(r5)
10104ba8:	2ac01917 	ldw	r11,100(r5)
10104bac:	2a80038b 	ldhu	r10,14(r5)
10104bb0:	2a400717 	ldw	r9,28(r5)
10104bb4:	2a000917 	ldw	r8,36(r5)
10104bb8:	defee204 	addi	sp,sp,-1144
10104bbc:	00c10004 	movi	r3,1024
10104bc0:	dc011a15 	stw	r16,1128(sp)
10104bc4:	10bfff4c 	andi	r2,r2,65533
10104bc8:	2821883a 	mov	r16,r5
10104bcc:	d8cb883a 	add	r5,sp,r3
10104bd0:	dc811c15 	stw	r18,1136(sp)
10104bd4:	dc411b15 	stw	r17,1132(sp)
10104bd8:	dfc11d15 	stw	ra,1140(sp)
10104bdc:	2025883a 	mov	r18,r4
10104be0:	d881030d 	sth	r2,1036(sp)
10104be4:	dac11915 	stw	r11,1124(sp)
10104be8:	da81038d 	sth	r10,1038(sp)
10104bec:	da410715 	stw	r9,1052(sp)
10104bf0:	da010915 	stw	r8,1060(sp)
10104bf4:	dec10015 	stw	sp,1024(sp)
10104bf8:	dec10415 	stw	sp,1040(sp)
10104bfc:	d8c10215 	stw	r3,1032(sp)
10104c00:	d8c10515 	stw	r3,1044(sp)
10104c04:	d8010615 	stw	zero,1048(sp)
10104c08:	01029900 	call	10102990 <___vfprintf_internal_r>
10104c0c:	1023883a 	mov	r17,r2
10104c10:	10000416 	blt	r2,zero,10104c24 <__sbprintf+0x80>
10104c14:	d9410004 	addi	r5,sp,1024
10104c18:	9009883a 	mov	r4,r18
10104c1c:	01007cc0 	call	101007cc <_fflush_r>
10104c20:	10000d1e 	bne	r2,zero,10104c58 <__sbprintf+0xb4>
10104c24:	d881030b 	ldhu	r2,1036(sp)
10104c28:	1080100c 	andi	r2,r2,64
10104c2c:	10000326 	beq	r2,zero,10104c3c <__sbprintf+0x98>
10104c30:	8080030b 	ldhu	r2,12(r16)
10104c34:	10801014 	ori	r2,r2,64
10104c38:	8080030d 	sth	r2,12(r16)
10104c3c:	8805883a 	mov	r2,r17
10104c40:	dfc11d17 	ldw	ra,1140(sp)
10104c44:	dc811c17 	ldw	r18,1136(sp)
10104c48:	dc411b17 	ldw	r17,1132(sp)
10104c4c:	dc011a17 	ldw	r16,1128(sp)
10104c50:	dec11e04 	addi	sp,sp,1144
10104c54:	f800283a 	ret
10104c58:	047fffc4 	movi	r17,-1
10104c5c:	003ff106 	br	10104c24 <__sbprintf+0x80>

10104c60 <_write_r>:
10104c60:	defffd04 	addi	sp,sp,-12
10104c64:	2805883a 	mov	r2,r5
10104c68:	dc000015 	stw	r16,0(sp)
10104c6c:	04040474 	movhi	r16,4113
10104c70:	dc400115 	stw	r17,4(sp)
10104c74:	300b883a 	mov	r5,r6
10104c78:	840de404 	addi	r16,r16,14224
10104c7c:	2023883a 	mov	r17,r4
10104c80:	380d883a 	mov	r6,r7
10104c84:	1009883a 	mov	r4,r2
10104c88:	dfc00215 	stw	ra,8(sp)
10104c8c:	80000015 	stw	zero,0(r16)
10104c90:	010e4e00 	call	1010e4e0 <write>
10104c94:	00ffffc4 	movi	r3,-1
10104c98:	10c00526 	beq	r2,r3,10104cb0 <_write_r+0x50>
10104c9c:	dfc00217 	ldw	ra,8(sp)
10104ca0:	dc400117 	ldw	r17,4(sp)
10104ca4:	dc000017 	ldw	r16,0(sp)
10104ca8:	dec00304 	addi	sp,sp,12
10104cac:	f800283a 	ret
10104cb0:	80c00017 	ldw	r3,0(r16)
10104cb4:	183ff926 	beq	r3,zero,10104c9c <_write_r+0x3c>
10104cb8:	88c00015 	stw	r3,0(r17)
10104cbc:	003ff706 	br	10104c9c <_write_r+0x3c>

10104cc0 <__swsetup_r>:
10104cc0:	00840474 	movhi	r2,4113
10104cc4:	defffd04 	addi	sp,sp,-12
10104cc8:	10871904 	addi	r2,r2,7268
10104ccc:	dc400115 	stw	r17,4(sp)
10104cd0:	2023883a 	mov	r17,r4
10104cd4:	11000017 	ldw	r4,0(r2)
10104cd8:	dc000015 	stw	r16,0(sp)
10104cdc:	dfc00215 	stw	ra,8(sp)
10104ce0:	2821883a 	mov	r16,r5
10104ce4:	20000226 	beq	r4,zero,10104cf0 <__swsetup_r+0x30>
10104ce8:	20800e17 	ldw	r2,56(r4)
10104cec:	10003126 	beq	r2,zero,10104db4 <__swsetup_r+0xf4>
10104cf0:	8080030b 	ldhu	r2,12(r16)
10104cf4:	10c0020c 	andi	r3,r2,8
10104cf8:	1009883a 	mov	r4,r2
10104cfc:	18000f26 	beq	r3,zero,10104d3c <__swsetup_r+0x7c>
10104d00:	80c00417 	ldw	r3,16(r16)
10104d04:	18001526 	beq	r3,zero,10104d5c <__swsetup_r+0x9c>
10104d08:	1100004c 	andi	r4,r2,1
10104d0c:	20001c1e 	bne	r4,zero,10104d80 <__swsetup_r+0xc0>
10104d10:	1080008c 	andi	r2,r2,2
10104d14:	1000291e 	bne	r2,zero,10104dbc <__swsetup_r+0xfc>
10104d18:	80800517 	ldw	r2,20(r16)
10104d1c:	80800215 	stw	r2,8(r16)
10104d20:	18001c26 	beq	r3,zero,10104d94 <__swsetup_r+0xd4>
10104d24:	0005883a 	mov	r2,zero
10104d28:	dfc00217 	ldw	ra,8(sp)
10104d2c:	dc400117 	ldw	r17,4(sp)
10104d30:	dc000017 	ldw	r16,0(sp)
10104d34:	dec00304 	addi	sp,sp,12
10104d38:	f800283a 	ret
10104d3c:	2080040c 	andi	r2,r4,16
10104d40:	10002e26 	beq	r2,zero,10104dfc <__swsetup_r+0x13c>
10104d44:	2080010c 	andi	r2,r4,4
10104d48:	10001e1e 	bne	r2,zero,10104dc4 <__swsetup_r+0x104>
10104d4c:	80c00417 	ldw	r3,16(r16)
10104d50:	20800214 	ori	r2,r4,8
10104d54:	8080030d 	sth	r2,12(r16)
10104d58:	183feb1e 	bne	r3,zero,10104d08 <__swsetup_r+0x48>
10104d5c:	1100a00c 	andi	r4,r2,640
10104d60:	01408004 	movi	r5,512
10104d64:	217fe826 	beq	r4,r5,10104d08 <__swsetup_r+0x48>
10104d68:	800b883a 	mov	r5,r16
10104d6c:	8809883a 	mov	r4,r17
10104d70:	01018e80 	call	101018e8 <__smakebuf_r>
10104d74:	8080030b 	ldhu	r2,12(r16)
10104d78:	80c00417 	ldw	r3,16(r16)
10104d7c:	003fe206 	br	10104d08 <__swsetup_r+0x48>
10104d80:	80800517 	ldw	r2,20(r16)
10104d84:	80000215 	stw	zero,8(r16)
10104d88:	0085c83a 	sub	r2,zero,r2
10104d8c:	80800615 	stw	r2,24(r16)
10104d90:	183fe41e 	bne	r3,zero,10104d24 <__swsetup_r+0x64>
10104d94:	80c0030b 	ldhu	r3,12(r16)
10104d98:	0005883a 	mov	r2,zero
10104d9c:	1900200c 	andi	r4,r3,128
10104da0:	203fe126 	beq	r4,zero,10104d28 <__swsetup_r+0x68>
10104da4:	18c01014 	ori	r3,r3,64
10104da8:	80c0030d 	sth	r3,12(r16)
10104dac:	00bfffc4 	movi	r2,-1
10104db0:	003fdd06 	br	10104d28 <__swsetup_r+0x68>
10104db4:	0100ba80 	call	10100ba8 <__sinit>
10104db8:	003fcd06 	br	10104cf0 <__swsetup_r+0x30>
10104dbc:	0005883a 	mov	r2,zero
10104dc0:	003fd606 	br	10104d1c <__swsetup_r+0x5c>
10104dc4:	81400c17 	ldw	r5,48(r16)
10104dc8:	28000626 	beq	r5,zero,10104de4 <__swsetup_r+0x124>
10104dcc:	80801004 	addi	r2,r16,64
10104dd0:	28800326 	beq	r5,r2,10104de0 <__swsetup_r+0x120>
10104dd4:	8809883a 	mov	r4,r17
10104dd8:	0100e740 	call	10100e74 <_free_r>
10104ddc:	8100030b 	ldhu	r4,12(r16)
10104de0:	80000c15 	stw	zero,48(r16)
10104de4:	80c00417 	ldw	r3,16(r16)
10104de8:	00bff6c4 	movi	r2,-37
10104dec:	1108703a 	and	r4,r2,r4
10104df0:	80000115 	stw	zero,4(r16)
10104df4:	80c00015 	stw	r3,0(r16)
10104df8:	003fd506 	br	10104d50 <__swsetup_r+0x90>
10104dfc:	00800244 	movi	r2,9
10104e00:	88800015 	stw	r2,0(r17)
10104e04:	20801014 	ori	r2,r4,64
10104e08:	8080030d 	sth	r2,12(r16)
10104e0c:	00bfffc4 	movi	r2,-1
10104e10:	003fc506 	br	10104d28 <__swsetup_r+0x68>

10104e14 <_close_r>:
10104e14:	defffd04 	addi	sp,sp,-12
10104e18:	dc000015 	stw	r16,0(sp)
10104e1c:	04040474 	movhi	r16,4113
10104e20:	dc400115 	stw	r17,4(sp)
10104e24:	840de404 	addi	r16,r16,14224
10104e28:	2023883a 	mov	r17,r4
10104e2c:	2809883a 	mov	r4,r5
10104e30:	dfc00215 	stw	ra,8(sp)
10104e34:	80000015 	stw	zero,0(r16)
10104e38:	010d7dc0 	call	1010d7dc <close>
10104e3c:	00ffffc4 	movi	r3,-1
10104e40:	10c00526 	beq	r2,r3,10104e58 <_close_r+0x44>
10104e44:	dfc00217 	ldw	ra,8(sp)
10104e48:	dc400117 	ldw	r17,4(sp)
10104e4c:	dc000017 	ldw	r16,0(sp)
10104e50:	dec00304 	addi	sp,sp,12
10104e54:	f800283a 	ret
10104e58:	80c00017 	ldw	r3,0(r16)
10104e5c:	183ff926 	beq	r3,zero,10104e44 <_close_r+0x30>
10104e60:	88c00015 	stw	r3,0(r17)
10104e64:	003ff706 	br	10104e44 <_close_r+0x30>

10104e68 <quorem>:
10104e68:	defff704 	addi	sp,sp,-36
10104e6c:	dc800215 	stw	r18,8(sp)
10104e70:	20800417 	ldw	r2,16(r4)
10104e74:	2c800417 	ldw	r18,16(r5)
10104e78:	dfc00815 	stw	ra,32(sp)
10104e7c:	ddc00715 	stw	r23,28(sp)
10104e80:	dd800615 	stw	r22,24(sp)
10104e84:	dd400515 	stw	r21,20(sp)
10104e88:	dd000415 	stw	r20,16(sp)
10104e8c:	dcc00315 	stw	r19,12(sp)
10104e90:	dc400115 	stw	r17,4(sp)
10104e94:	dc000015 	stw	r16,0(sp)
10104e98:	14807116 	blt	r2,r18,10105060 <quorem+0x1f8>
10104e9c:	94bfffc4 	addi	r18,r18,-1
10104ea0:	94ad883a 	add	r22,r18,r18
10104ea4:	b5ad883a 	add	r22,r22,r22
10104ea8:	2c400504 	addi	r17,r5,20
10104eac:	8da9883a 	add	r20,r17,r22
10104eb0:	25400504 	addi	r21,r4,20
10104eb4:	282f883a 	mov	r23,r5
10104eb8:	adad883a 	add	r22,r21,r22
10104ebc:	a1400017 	ldw	r5,0(r20)
10104ec0:	2021883a 	mov	r16,r4
10104ec4:	b1000017 	ldw	r4,0(r22)
10104ec8:	29400044 	addi	r5,r5,1
10104ecc:	010b07c0 	call	1010b07c <__udivsi3>
10104ed0:	1027883a 	mov	r19,r2
10104ed4:	10002c26 	beq	r2,zero,10104f88 <quorem+0x120>
10104ed8:	a813883a 	mov	r9,r21
10104edc:	880b883a 	mov	r5,r17
10104ee0:	0009883a 	mov	r4,zero
10104ee4:	000d883a 	mov	r6,zero
10104ee8:	2a000017 	ldw	r8,0(r5)
10104eec:	49c00017 	ldw	r7,0(r9)
10104ef0:	29400104 	addi	r5,r5,4
10104ef4:	40bfffcc 	andi	r2,r8,65535
10104ef8:	14c5383a 	mul	r2,r2,r19
10104efc:	4010d43a 	srli	r8,r8,16
10104f00:	38ffffcc 	andi	r3,r7,65535
10104f04:	1105883a 	add	r2,r2,r4
10104f08:	1008d43a 	srli	r4,r2,16
10104f0c:	44d1383a 	mul	r8,r8,r19
10104f10:	198d883a 	add	r6,r3,r6
10104f14:	10ffffcc 	andi	r3,r2,65535
10104f18:	30c7c83a 	sub	r3,r6,r3
10104f1c:	380ed43a 	srli	r7,r7,16
10104f20:	4105883a 	add	r2,r8,r4
10104f24:	180dd43a 	srai	r6,r3,16
10104f28:	113fffcc 	andi	r4,r2,65535
10104f2c:	390fc83a 	sub	r7,r7,r4
10104f30:	398d883a 	add	r6,r7,r6
10104f34:	300e943a 	slli	r7,r6,16
10104f38:	18ffffcc 	andi	r3,r3,65535
10104f3c:	1008d43a 	srli	r4,r2,16
10104f40:	38ceb03a 	or	r7,r7,r3
10104f44:	49c00015 	stw	r7,0(r9)
10104f48:	300dd43a 	srai	r6,r6,16
10104f4c:	4a400104 	addi	r9,r9,4
10104f50:	a17fe52e 	bgeu	r20,r5,10104ee8 <quorem+0x80>
10104f54:	b0800017 	ldw	r2,0(r22)
10104f58:	10000b1e 	bne	r2,zero,10104f88 <quorem+0x120>
10104f5c:	b0bfff04 	addi	r2,r22,-4
10104f60:	a880082e 	bgeu	r21,r2,10104f84 <quorem+0x11c>
10104f64:	b0ffff17 	ldw	r3,-4(r22)
10104f68:	18000326 	beq	r3,zero,10104f78 <quorem+0x110>
10104f6c:	00000506 	br	10104f84 <quorem+0x11c>
10104f70:	10c00017 	ldw	r3,0(r2)
10104f74:	1800031e 	bne	r3,zero,10104f84 <quorem+0x11c>
10104f78:	10bfff04 	addi	r2,r2,-4
10104f7c:	94bfffc4 	addi	r18,r18,-1
10104f80:	a8bffb36 	bltu	r21,r2,10104f70 <quorem+0x108>
10104f84:	84800415 	stw	r18,16(r16)
10104f88:	b80b883a 	mov	r5,r23
10104f8c:	8009883a 	mov	r4,r16
10104f90:	0107a380 	call	10107a38 <__mcmp>
10104f94:	10002616 	blt	r2,zero,10105030 <quorem+0x1c8>
10104f98:	9cc00044 	addi	r19,r19,1
10104f9c:	a805883a 	mov	r2,r21
10104fa0:	000b883a 	mov	r5,zero
10104fa4:	11000017 	ldw	r4,0(r2)
10104fa8:	89800017 	ldw	r6,0(r17)
10104fac:	10800104 	addi	r2,r2,4
10104fb0:	20ffffcc 	andi	r3,r4,65535
10104fb4:	194b883a 	add	r5,r3,r5
10104fb8:	30ffffcc 	andi	r3,r6,65535
10104fbc:	28c7c83a 	sub	r3,r5,r3
10104fc0:	300cd43a 	srli	r6,r6,16
10104fc4:	2008d43a 	srli	r4,r4,16
10104fc8:	180bd43a 	srai	r5,r3,16
10104fcc:	18ffffcc 	andi	r3,r3,65535
10104fd0:	2189c83a 	sub	r4,r4,r6
10104fd4:	2149883a 	add	r4,r4,r5
10104fd8:	200c943a 	slli	r6,r4,16
10104fdc:	8c400104 	addi	r17,r17,4
10104fe0:	200bd43a 	srai	r5,r4,16
10104fe4:	30c6b03a 	or	r3,r6,r3
10104fe8:	10ffff15 	stw	r3,-4(r2)
10104fec:	a47fed2e 	bgeu	r20,r17,10104fa4 <quorem+0x13c>
10104ff0:	9485883a 	add	r2,r18,r18
10104ff4:	1085883a 	add	r2,r2,r2
10104ff8:	a887883a 	add	r3,r21,r2
10104ffc:	18800017 	ldw	r2,0(r3)
10105000:	10000b1e 	bne	r2,zero,10105030 <quorem+0x1c8>
10105004:	18bfff04 	addi	r2,r3,-4
10105008:	a880082e 	bgeu	r21,r2,1010502c <quorem+0x1c4>
1010500c:	18ffff17 	ldw	r3,-4(r3)
10105010:	18000326 	beq	r3,zero,10105020 <quorem+0x1b8>
10105014:	00000506 	br	1010502c <quorem+0x1c4>
10105018:	10c00017 	ldw	r3,0(r2)
1010501c:	1800031e 	bne	r3,zero,1010502c <quorem+0x1c4>
10105020:	10bfff04 	addi	r2,r2,-4
10105024:	94bfffc4 	addi	r18,r18,-1
10105028:	a8bffb36 	bltu	r21,r2,10105018 <quorem+0x1b0>
1010502c:	84800415 	stw	r18,16(r16)
10105030:	9805883a 	mov	r2,r19
10105034:	dfc00817 	ldw	ra,32(sp)
10105038:	ddc00717 	ldw	r23,28(sp)
1010503c:	dd800617 	ldw	r22,24(sp)
10105040:	dd400517 	ldw	r21,20(sp)
10105044:	dd000417 	ldw	r20,16(sp)
10105048:	dcc00317 	ldw	r19,12(sp)
1010504c:	dc800217 	ldw	r18,8(sp)
10105050:	dc400117 	ldw	r17,4(sp)
10105054:	dc000017 	ldw	r16,0(sp)
10105058:	dec00904 	addi	sp,sp,36
1010505c:	f800283a 	ret
10105060:	0005883a 	mov	r2,zero
10105064:	003ff306 	br	10105034 <quorem+0x1cc>

10105068 <_dtoa_r>:
10105068:	20801017 	ldw	r2,64(r4)
1010506c:	deffde04 	addi	sp,sp,-136
10105070:	df002015 	stw	fp,128(sp)
10105074:	dcc01b15 	stw	r19,108(sp)
10105078:	dc801a15 	stw	r18,104(sp)
1010507c:	dc401915 	stw	r17,100(sp)
10105080:	dc001815 	stw	r16,96(sp)
10105084:	dfc02115 	stw	ra,132(sp)
10105088:	ddc01f15 	stw	r23,124(sp)
1010508c:	dd801e15 	stw	r22,120(sp)
10105090:	dd401d15 	stw	r21,116(sp)
10105094:	dd001c15 	stw	r20,112(sp)
10105098:	d9c00315 	stw	r7,12(sp)
1010509c:	2039883a 	mov	fp,r4
101050a0:	3023883a 	mov	r17,r6
101050a4:	2825883a 	mov	r18,r5
101050a8:	dc002417 	ldw	r16,144(sp)
101050ac:	3027883a 	mov	r19,r6
101050b0:	10000826 	beq	r2,zero,101050d4 <_dtoa_r+0x6c>
101050b4:	21801117 	ldw	r6,68(r4)
101050b8:	00c00044 	movi	r3,1
101050bc:	100b883a 	mov	r5,r2
101050c0:	1986983a 	sll	r3,r3,r6
101050c4:	11800115 	stw	r6,4(r2)
101050c8:	10c00215 	stw	r3,8(r2)
101050cc:	01072180 	call	10107218 <_Bfree>
101050d0:	e0001015 	stw	zero,64(fp)
101050d4:	88002e16 	blt	r17,zero,10105190 <_dtoa_r+0x128>
101050d8:	80000015 	stw	zero,0(r16)
101050dc:	889ffc2c 	andhi	r2,r17,32752
101050e0:	00dffc34 	movhi	r3,32752
101050e4:	10c01c26 	beq	r2,r3,10105158 <_dtoa_r+0xf0>
101050e8:	000d883a 	mov	r6,zero
101050ec:	000f883a 	mov	r7,zero
101050f0:	9009883a 	mov	r4,r18
101050f4:	980b883a 	mov	r5,r19
101050f8:	010c2cc0 	call	1010c2cc <__eqdf2>
101050fc:	10002b1e 	bne	r2,zero,101051ac <_dtoa_r+0x144>
10105100:	d9c02317 	ldw	r7,140(sp)
10105104:	00800044 	movi	r2,1
10105108:	38800015 	stw	r2,0(r7)
1010510c:	d8802517 	ldw	r2,148(sp)
10105110:	10019e26 	beq	r2,zero,1010578c <_dtoa_r+0x724>
10105114:	d8c02517 	ldw	r3,148(sp)
10105118:	00840474 	movhi	r2,4113
1010511c:	10bfbf44 	addi	r2,r2,-259
10105120:	18800015 	stw	r2,0(r3)
10105124:	10bfffc4 	addi	r2,r2,-1
10105128:	dfc02117 	ldw	ra,132(sp)
1010512c:	df002017 	ldw	fp,128(sp)
10105130:	ddc01f17 	ldw	r23,124(sp)
10105134:	dd801e17 	ldw	r22,120(sp)
10105138:	dd401d17 	ldw	r21,116(sp)
1010513c:	dd001c17 	ldw	r20,112(sp)
10105140:	dcc01b17 	ldw	r19,108(sp)
10105144:	dc801a17 	ldw	r18,104(sp)
10105148:	dc401917 	ldw	r17,100(sp)
1010514c:	dc001817 	ldw	r16,96(sp)
10105150:	dec02204 	addi	sp,sp,136
10105154:	f800283a 	ret
10105158:	d8c02317 	ldw	r3,140(sp)
1010515c:	0089c3c4 	movi	r2,9999
10105160:	18800015 	stw	r2,0(r3)
10105164:	90017726 	beq	r18,zero,10105744 <_dtoa_r+0x6dc>
10105168:	00840474 	movhi	r2,4113
1010516c:	10bfcb04 	addi	r2,r2,-212
10105170:	d9002517 	ldw	r4,148(sp)
10105174:	203fec26 	beq	r4,zero,10105128 <_dtoa_r+0xc0>
10105178:	10c000c7 	ldb	r3,3(r2)
1010517c:	1801781e 	bne	r3,zero,10105760 <_dtoa_r+0x6f8>
10105180:	10c000c4 	addi	r3,r2,3
10105184:	d9802517 	ldw	r6,148(sp)
10105188:	30c00015 	stw	r3,0(r6)
1010518c:	003fe606 	br	10105128 <_dtoa_r+0xc0>
10105190:	04e00034 	movhi	r19,32768
10105194:	9cffffc4 	addi	r19,r19,-1
10105198:	00800044 	movi	r2,1
1010519c:	8ce6703a 	and	r19,r17,r19
101051a0:	80800015 	stw	r2,0(r16)
101051a4:	9823883a 	mov	r17,r19
101051a8:	003fcc06 	br	101050dc <_dtoa_r+0x74>
101051ac:	d8800204 	addi	r2,sp,8
101051b0:	d8800015 	stw	r2,0(sp)
101051b4:	d9c00104 	addi	r7,sp,4
101051b8:	900b883a 	mov	r5,r18
101051bc:	980d883a 	mov	r6,r19
101051c0:	e009883a 	mov	r4,fp
101051c4:	8820d53a 	srli	r16,r17,20
101051c8:	0107e040 	call	10107e04 <__d2b>
101051cc:	d8800915 	stw	r2,36(sp)
101051d0:	8001651e 	bne	r16,zero,10105768 <_dtoa_r+0x700>
101051d4:	dd800217 	ldw	r22,8(sp)
101051d8:	dc000117 	ldw	r16,4(sp)
101051dc:	00800804 	movi	r2,32
101051e0:	b421883a 	add	r16,r22,r16
101051e4:	80c10c84 	addi	r3,r16,1074
101051e8:	10c2d10e 	bge	r2,r3,10105d30 <_dtoa_r+0xcc8>
101051ec:	00801004 	movi	r2,64
101051f0:	81010484 	addi	r4,r16,1042
101051f4:	10c7c83a 	sub	r3,r2,r3
101051f8:	9108d83a 	srl	r4,r18,r4
101051fc:	88e2983a 	sll	r17,r17,r3
10105200:	2448b03a 	or	r4,r4,r17
10105204:	010d6940 	call	1010d694 <__floatunsidf>
10105208:	017f8434 	movhi	r5,65040
1010520c:	01800044 	movi	r6,1
10105210:	1009883a 	mov	r4,r2
10105214:	194b883a 	add	r5,r3,r5
10105218:	843fffc4 	addi	r16,r16,-1
1010521c:	d9801115 	stw	r6,68(sp)
10105220:	000d883a 	mov	r6,zero
10105224:	01cffe34 	movhi	r7,16376
10105228:	010cc3c0 	call	1010cc3c <__subdf3>
1010522c:	0198dbf4 	movhi	r6,25455
10105230:	01cff4f4 	movhi	r7,16339
10105234:	3190d844 	addi	r6,r6,17249
10105238:	39e1e9c4 	addi	r7,r7,-30809
1010523c:	1009883a 	mov	r4,r2
10105240:	180b883a 	mov	r5,r3
10105244:	010c5240 	call	1010c524 <__muldf3>
10105248:	01a2d874 	movhi	r6,35681
1010524c:	01cff1f4 	movhi	r7,16327
10105250:	31b22cc4 	addi	r6,r6,-14157
10105254:	39e28a04 	addi	r7,r7,-30168
10105258:	180b883a 	mov	r5,r3
1010525c:	1009883a 	mov	r4,r2
10105260:	010b1380 	call	1010b138 <__adddf3>
10105264:	8009883a 	mov	r4,r16
10105268:	1029883a 	mov	r20,r2
1010526c:	1823883a 	mov	r17,r3
10105270:	010d5b80 	call	1010d5b8 <__floatsidf>
10105274:	019427f4 	movhi	r6,20639
10105278:	01cff4f4 	movhi	r7,16339
1010527c:	319e7ec4 	addi	r6,r6,31227
10105280:	39d104c4 	addi	r7,r7,17427
10105284:	1009883a 	mov	r4,r2
10105288:	180b883a 	mov	r5,r3
1010528c:	010c5240 	call	1010c524 <__muldf3>
10105290:	100d883a 	mov	r6,r2
10105294:	180f883a 	mov	r7,r3
10105298:	a009883a 	mov	r4,r20
1010529c:	880b883a 	mov	r5,r17
101052a0:	010b1380 	call	1010b138 <__adddf3>
101052a4:	1009883a 	mov	r4,r2
101052a8:	180b883a 	mov	r5,r3
101052ac:	1029883a 	mov	r20,r2
101052b0:	1823883a 	mov	r17,r3
101052b4:	010d5380 	call	1010d538 <__fixdfsi>
101052b8:	000d883a 	mov	r6,zero
101052bc:	000f883a 	mov	r7,zero
101052c0:	a009883a 	mov	r4,r20
101052c4:	880b883a 	mov	r5,r17
101052c8:	d8800515 	stw	r2,20(sp)
101052cc:	010c4300 	call	1010c430 <__ledf2>
101052d0:	10028716 	blt	r2,zero,10105cf0 <_dtoa_r+0xc88>
101052d4:	d8c00517 	ldw	r3,20(sp)
101052d8:	00800584 	movi	r2,22
101052dc:	10c27536 	bltu	r2,r3,10105cb4 <_dtoa_r+0xc4c>
101052e0:	180490fa 	slli	r2,r3,3
101052e4:	00c40474 	movhi	r3,4113
101052e8:	18ffe604 	addi	r3,r3,-104
101052ec:	1885883a 	add	r2,r3,r2
101052f0:	11000017 	ldw	r4,0(r2)
101052f4:	11400117 	ldw	r5,4(r2)
101052f8:	900d883a 	mov	r6,r18
101052fc:	980f883a 	mov	r7,r19
10105300:	010c3540 	call	1010c354 <__gedf2>
10105304:	00828d0e 	bge	zero,r2,10105d3c <_dtoa_r+0xcd4>
10105308:	d9000517 	ldw	r4,20(sp)
1010530c:	d8000e15 	stw	zero,56(sp)
10105310:	213fffc4 	addi	r4,r4,-1
10105314:	d9000515 	stw	r4,20(sp)
10105318:	b42dc83a 	sub	r22,r22,r16
1010531c:	b5bfffc4 	addi	r22,r22,-1
10105320:	b0026f16 	blt	r22,zero,10105ce0 <_dtoa_r+0xc78>
10105324:	d8000815 	stw	zero,32(sp)
10105328:	d9c00517 	ldw	r7,20(sp)
1010532c:	38026416 	blt	r7,zero,10105cc0 <_dtoa_r+0xc58>
10105330:	b1ed883a 	add	r22,r22,r7
10105334:	d9c00d15 	stw	r7,52(sp)
10105338:	d8000a15 	stw	zero,40(sp)
1010533c:	d9800317 	ldw	r6,12(sp)
10105340:	00800244 	movi	r2,9
10105344:	11811436 	bltu	r2,r6,10105798 <_dtoa_r+0x730>
10105348:	00800144 	movi	r2,5
1010534c:	1184e10e 	bge	r2,r6,101066d4 <_dtoa_r+0x166c>
10105350:	31bfff04 	addi	r6,r6,-4
10105354:	d9800315 	stw	r6,12(sp)
10105358:	0023883a 	mov	r17,zero
1010535c:	d9800317 	ldw	r6,12(sp)
10105360:	008000c4 	movi	r2,3
10105364:	30836726 	beq	r6,r2,10106104 <_dtoa_r+0x109c>
10105368:	1183410e 	bge	r2,r6,10106070 <_dtoa_r+0x1008>
1010536c:	d9c00317 	ldw	r7,12(sp)
10105370:	00800104 	movi	r2,4
10105374:	38827c26 	beq	r7,r2,10105d68 <_dtoa_r+0xd00>
10105378:	00800144 	movi	r2,5
1010537c:	3884c41e 	bne	r7,r2,10106690 <_dtoa_r+0x1628>
10105380:	00800044 	movi	r2,1
10105384:	d8800b15 	stw	r2,44(sp)
10105388:	d8c00517 	ldw	r3,20(sp)
1010538c:	d9002217 	ldw	r4,136(sp)
10105390:	1907883a 	add	r3,r3,r4
10105394:	19800044 	addi	r6,r3,1
10105398:	d8c00c15 	stw	r3,48(sp)
1010539c:	d9800615 	stw	r6,24(sp)
101053a0:	0183a40e 	bge	zero,r6,10106234 <_dtoa_r+0x11cc>
101053a4:	d9800617 	ldw	r6,24(sp)
101053a8:	3021883a 	mov	r16,r6
101053ac:	e0001115 	stw	zero,68(fp)
101053b0:	008005c4 	movi	r2,23
101053b4:	1184c92e 	bgeu	r2,r6,101066dc <_dtoa_r+0x1674>
101053b8:	00c00044 	movi	r3,1
101053bc:	00800104 	movi	r2,4
101053c0:	1085883a 	add	r2,r2,r2
101053c4:	11000504 	addi	r4,r2,20
101053c8:	180b883a 	mov	r5,r3
101053cc:	18c00044 	addi	r3,r3,1
101053d0:	313ffb2e 	bgeu	r6,r4,101053c0 <_dtoa_r+0x358>
101053d4:	e1401115 	stw	r5,68(fp)
101053d8:	e009883a 	mov	r4,fp
101053dc:	01071700 	call	10107170 <_Balloc>
101053e0:	d8800715 	stw	r2,28(sp)
101053e4:	e0801015 	stw	r2,64(fp)
101053e8:	00800384 	movi	r2,14
101053ec:	1400f736 	bltu	r2,r16,101057cc <_dtoa_r+0x764>
101053f0:	8800f626 	beq	r17,zero,101057cc <_dtoa_r+0x764>
101053f4:	d9c00517 	ldw	r7,20(sp)
101053f8:	01c39a0e 	bge	zero,r7,10106264 <_dtoa_r+0x11fc>
101053fc:	388003cc 	andi	r2,r7,15
10105400:	100490fa 	slli	r2,r2,3
10105404:	382bd13a 	srai	r21,r7,4
10105408:	00c40474 	movhi	r3,4113
1010540c:	18ffe604 	addi	r3,r3,-104
10105410:	1885883a 	add	r2,r3,r2
10105414:	a8c0040c 	andi	r3,r21,16
10105418:	12400017 	ldw	r9,0(r2)
1010541c:	12000117 	ldw	r8,4(r2)
10105420:	18037926 	beq	r3,zero,10106208 <_dtoa_r+0x11a0>
10105424:	00840474 	movhi	r2,4113
10105428:	10bfdc04 	addi	r2,r2,-144
1010542c:	11800817 	ldw	r6,32(r2)
10105430:	11c00917 	ldw	r7,36(r2)
10105434:	9009883a 	mov	r4,r18
10105438:	980b883a 	mov	r5,r19
1010543c:	da001715 	stw	r8,92(sp)
10105440:	da401615 	stw	r9,88(sp)
10105444:	010b9e40 	call	1010b9e4 <__divdf3>
10105448:	da001717 	ldw	r8,92(sp)
1010544c:	da401617 	ldw	r9,88(sp)
10105450:	ad4003cc 	andi	r21,r21,15
10105454:	040000c4 	movi	r16,3
10105458:	1023883a 	mov	r17,r2
1010545c:	1829883a 	mov	r20,r3
10105460:	a8001126 	beq	r21,zero,101054a8 <_dtoa_r+0x440>
10105464:	05c40474 	movhi	r23,4113
10105468:	bdffdc04 	addi	r23,r23,-144
1010546c:	4805883a 	mov	r2,r9
10105470:	4007883a 	mov	r3,r8
10105474:	a980004c 	andi	r6,r21,1
10105478:	1009883a 	mov	r4,r2
1010547c:	a82bd07a 	srai	r21,r21,1
10105480:	180b883a 	mov	r5,r3
10105484:	30000426 	beq	r6,zero,10105498 <_dtoa_r+0x430>
10105488:	b9800017 	ldw	r6,0(r23)
1010548c:	b9c00117 	ldw	r7,4(r23)
10105490:	84000044 	addi	r16,r16,1
10105494:	010c5240 	call	1010c524 <__muldf3>
10105498:	bdc00204 	addi	r23,r23,8
1010549c:	a83ff51e 	bne	r21,zero,10105474 <_dtoa_r+0x40c>
101054a0:	1013883a 	mov	r9,r2
101054a4:	1811883a 	mov	r8,r3
101054a8:	480d883a 	mov	r6,r9
101054ac:	400f883a 	mov	r7,r8
101054b0:	8809883a 	mov	r4,r17
101054b4:	a00b883a 	mov	r5,r20
101054b8:	010b9e40 	call	1010b9e4 <__divdf3>
101054bc:	d8800f15 	stw	r2,60(sp)
101054c0:	d8c01015 	stw	r3,64(sp)
101054c4:	d8c00e17 	ldw	r3,56(sp)
101054c8:	18000626 	beq	r3,zero,101054e4 <_dtoa_r+0x47c>
101054cc:	d9000f17 	ldw	r4,60(sp)
101054d0:	d9401017 	ldw	r5,64(sp)
101054d4:	000d883a 	mov	r6,zero
101054d8:	01cffc34 	movhi	r7,16368
101054dc:	010c4300 	call	1010c430 <__ledf2>
101054e0:	10040b16 	blt	r2,zero,10106510 <_dtoa_r+0x14a8>
101054e4:	8009883a 	mov	r4,r16
101054e8:	010d5b80 	call	1010d5b8 <__floatsidf>
101054ec:	d9800f17 	ldw	r6,60(sp)
101054f0:	d9c01017 	ldw	r7,64(sp)
101054f4:	1009883a 	mov	r4,r2
101054f8:	180b883a 	mov	r5,r3
101054fc:	010c5240 	call	1010c524 <__muldf3>
10105500:	000d883a 	mov	r6,zero
10105504:	01d00734 	movhi	r7,16412
10105508:	1009883a 	mov	r4,r2
1010550c:	180b883a 	mov	r5,r3
10105510:	010b1380 	call	1010b138 <__adddf3>
10105514:	1021883a 	mov	r16,r2
10105518:	d8800617 	ldw	r2,24(sp)
1010551c:	047f3034 	movhi	r17,64704
10105520:	1c63883a 	add	r17,r3,r17
10105524:	10031826 	beq	r2,zero,10106188 <_dtoa_r+0x1120>
10105528:	d8c00517 	ldw	r3,20(sp)
1010552c:	db000617 	ldw	r12,24(sp)
10105530:	d8c01315 	stw	r3,76(sp)
10105534:	d9000b17 	ldw	r4,44(sp)
10105538:	20038f26 	beq	r4,zero,10106378 <_dtoa_r+0x1310>
1010553c:	60bfffc4 	addi	r2,r12,-1
10105540:	100490fa 	slli	r2,r2,3
10105544:	00c40474 	movhi	r3,4113
10105548:	18ffe604 	addi	r3,r3,-104
1010554c:	1885883a 	add	r2,r3,r2
10105550:	11800017 	ldw	r6,0(r2)
10105554:	11c00117 	ldw	r7,4(r2)
10105558:	d8800717 	ldw	r2,28(sp)
1010555c:	0009883a 	mov	r4,zero
10105560:	014ff834 	movhi	r5,16352
10105564:	db001615 	stw	r12,88(sp)
10105568:	15c00044 	addi	r23,r2,1
1010556c:	010b9e40 	call	1010b9e4 <__divdf3>
10105570:	800d883a 	mov	r6,r16
10105574:	880f883a 	mov	r7,r17
10105578:	1009883a 	mov	r4,r2
1010557c:	180b883a 	mov	r5,r3
10105580:	010cc3c0 	call	1010cc3c <__subdf3>
10105584:	d9401017 	ldw	r5,64(sp)
10105588:	d9000f17 	ldw	r4,60(sp)
1010558c:	102b883a 	mov	r21,r2
10105590:	d8c01215 	stw	r3,72(sp)
10105594:	010d5380 	call	1010d538 <__fixdfsi>
10105598:	1009883a 	mov	r4,r2
1010559c:	1029883a 	mov	r20,r2
101055a0:	010d5b80 	call	1010d5b8 <__floatsidf>
101055a4:	d9000f17 	ldw	r4,60(sp)
101055a8:	d9401017 	ldw	r5,64(sp)
101055ac:	100d883a 	mov	r6,r2
101055b0:	180f883a 	mov	r7,r3
101055b4:	010cc3c0 	call	1010cc3c <__subdf3>
101055b8:	1823883a 	mov	r17,r3
101055bc:	d8c00717 	ldw	r3,28(sp)
101055c0:	d9401217 	ldw	r5,72(sp)
101055c4:	a2000c04 	addi	r8,r20,48
101055c8:	1021883a 	mov	r16,r2
101055cc:	1a000005 	stb	r8,0(r3)
101055d0:	800d883a 	mov	r6,r16
101055d4:	880f883a 	mov	r7,r17
101055d8:	a809883a 	mov	r4,r21
101055dc:	4029883a 	mov	r20,r8
101055e0:	010c3540 	call	1010c354 <__gedf2>
101055e4:	00841d16 	blt	zero,r2,1010665c <_dtoa_r+0x15f4>
101055e8:	800d883a 	mov	r6,r16
101055ec:	880f883a 	mov	r7,r17
101055f0:	0009883a 	mov	r4,zero
101055f4:	014ffc34 	movhi	r5,16368
101055f8:	010cc3c0 	call	1010cc3c <__subdf3>
101055fc:	d9401217 	ldw	r5,72(sp)
10105600:	100d883a 	mov	r6,r2
10105604:	180f883a 	mov	r7,r3
10105608:	a809883a 	mov	r4,r21
1010560c:	010c3540 	call	1010c354 <__gedf2>
10105610:	db001617 	ldw	r12,88(sp)
10105614:	00840e16 	blt	zero,r2,10106650 <_dtoa_r+0x15e8>
10105618:	00800044 	movi	r2,1
1010561c:	13006b0e 	bge	r2,r12,101057cc <_dtoa_r+0x764>
10105620:	d9000717 	ldw	r4,28(sp)
10105624:	dd800f15 	stw	r22,60(sp)
10105628:	dcc01015 	stw	r19,64(sp)
1010562c:	2319883a 	add	r12,r4,r12
10105630:	dcc01217 	ldw	r19,72(sp)
10105634:	602d883a 	mov	r22,r12
10105638:	dc801215 	stw	r18,72(sp)
1010563c:	b825883a 	mov	r18,r23
10105640:	00000906 	br	10105668 <_dtoa_r+0x600>
10105644:	010cc3c0 	call	1010cc3c <__subdf3>
10105648:	a80d883a 	mov	r6,r21
1010564c:	980f883a 	mov	r7,r19
10105650:	1009883a 	mov	r4,r2
10105654:	180b883a 	mov	r5,r3
10105658:	010c4300 	call	1010c430 <__ledf2>
1010565c:	1003e816 	blt	r2,zero,10106600 <_dtoa_r+0x1598>
10105660:	b825883a 	mov	r18,r23
10105664:	bd83e926 	beq	r23,r22,1010660c <_dtoa_r+0x15a4>
10105668:	a809883a 	mov	r4,r21
1010566c:	980b883a 	mov	r5,r19
10105670:	000d883a 	mov	r6,zero
10105674:	01d00934 	movhi	r7,16420
10105678:	010c5240 	call	1010c524 <__muldf3>
1010567c:	000d883a 	mov	r6,zero
10105680:	01d00934 	movhi	r7,16420
10105684:	8009883a 	mov	r4,r16
10105688:	880b883a 	mov	r5,r17
1010568c:	102b883a 	mov	r21,r2
10105690:	1827883a 	mov	r19,r3
10105694:	010c5240 	call	1010c524 <__muldf3>
10105698:	180b883a 	mov	r5,r3
1010569c:	1009883a 	mov	r4,r2
101056a0:	1821883a 	mov	r16,r3
101056a4:	1023883a 	mov	r17,r2
101056a8:	010d5380 	call	1010d538 <__fixdfsi>
101056ac:	1009883a 	mov	r4,r2
101056b0:	1029883a 	mov	r20,r2
101056b4:	010d5b80 	call	1010d5b8 <__floatsidf>
101056b8:	8809883a 	mov	r4,r17
101056bc:	800b883a 	mov	r5,r16
101056c0:	100d883a 	mov	r6,r2
101056c4:	180f883a 	mov	r7,r3
101056c8:	010cc3c0 	call	1010cc3c <__subdf3>
101056cc:	a5000c04 	addi	r20,r20,48
101056d0:	a80d883a 	mov	r6,r21
101056d4:	980f883a 	mov	r7,r19
101056d8:	1009883a 	mov	r4,r2
101056dc:	180b883a 	mov	r5,r3
101056e0:	95000005 	stb	r20,0(r18)
101056e4:	1021883a 	mov	r16,r2
101056e8:	1823883a 	mov	r17,r3
101056ec:	010c4300 	call	1010c430 <__ledf2>
101056f0:	bdc00044 	addi	r23,r23,1
101056f4:	800d883a 	mov	r6,r16
101056f8:	880f883a 	mov	r7,r17
101056fc:	0009883a 	mov	r4,zero
10105700:	014ffc34 	movhi	r5,16368
10105704:	103fcf0e 	bge	r2,zero,10105644 <_dtoa_r+0x5dc>
10105708:	d8c01317 	ldw	r3,76(sp)
1010570c:	d8c00515 	stw	r3,20(sp)
10105710:	d9400917 	ldw	r5,36(sp)
10105714:	e009883a 	mov	r4,fp
10105718:	01072180 	call	10107218 <_Bfree>
1010571c:	d9000517 	ldw	r4,20(sp)
10105720:	d9802317 	ldw	r6,140(sp)
10105724:	d9c02517 	ldw	r7,148(sp)
10105728:	b8000005 	stb	zero,0(r23)
1010572c:	20800044 	addi	r2,r4,1
10105730:	30800015 	stw	r2,0(r6)
10105734:	3802aa26 	beq	r7,zero,101061e0 <_dtoa_r+0x1178>
10105738:	3dc00015 	stw	r23,0(r7)
1010573c:	d8800717 	ldw	r2,28(sp)
10105740:	003e7906 	br	10105128 <_dtoa_r+0xc0>
10105744:	00800434 	movhi	r2,16
10105748:	10bfffc4 	addi	r2,r2,-1
1010574c:	88a2703a 	and	r17,r17,r2
10105750:	883e851e 	bne	r17,zero,10105168 <_dtoa_r+0x100>
10105754:	00840474 	movhi	r2,4113
10105758:	10bfc804 	addi	r2,r2,-224
1010575c:	003e8406 	br	10105170 <_dtoa_r+0x108>
10105760:	10c00204 	addi	r3,r2,8
10105764:	003e8706 	br	10105184 <_dtoa_r+0x11c>
10105768:	01400434 	movhi	r5,16
1010576c:	297fffc4 	addi	r5,r5,-1
10105770:	994a703a 	and	r5,r19,r5
10105774:	9009883a 	mov	r4,r18
10105778:	843f0044 	addi	r16,r16,-1023
1010577c:	294ffc34 	orhi	r5,r5,16368
10105780:	dd800217 	ldw	r22,8(sp)
10105784:	d8001115 	stw	zero,68(sp)
10105788:	003ea506 	br	10105220 <_dtoa_r+0x1b8>
1010578c:	00840474 	movhi	r2,4113
10105790:	10bfbf04 	addi	r2,r2,-260
10105794:	003e6406 	br	10105128 <_dtoa_r+0xc0>
10105798:	e0001115 	stw	zero,68(fp)
1010579c:	000b883a 	mov	r5,zero
101057a0:	e009883a 	mov	r4,fp
101057a4:	01071700 	call	10107170 <_Balloc>
101057a8:	01bfffc4 	movi	r6,-1
101057ac:	01c00044 	movi	r7,1
101057b0:	d8800715 	stw	r2,28(sp)
101057b4:	d9800c15 	stw	r6,48(sp)
101057b8:	e0801015 	stw	r2,64(fp)
101057bc:	d8000315 	stw	zero,12(sp)
101057c0:	d9c00b15 	stw	r7,44(sp)
101057c4:	d9800615 	stw	r6,24(sp)
101057c8:	d8002215 	stw	zero,136(sp)
101057cc:	d8800117 	ldw	r2,4(sp)
101057d0:	10008916 	blt	r2,zero,101059f8 <_dtoa_r+0x990>
101057d4:	d9000517 	ldw	r4,20(sp)
101057d8:	00c00384 	movi	r3,14
101057dc:	19008616 	blt	r3,r4,101059f8 <_dtoa_r+0x990>
101057e0:	200490fa 	slli	r2,r4,3
101057e4:	00c40474 	movhi	r3,4113
101057e8:	d9802217 	ldw	r6,136(sp)
101057ec:	18ffe604 	addi	r3,r3,-104
101057f0:	1885883a 	add	r2,r3,r2
101057f4:	14000017 	ldw	r16,0(r2)
101057f8:	14400117 	ldw	r17,4(r2)
101057fc:	30016316 	blt	r6,zero,10105d8c <_dtoa_r+0xd24>
10105800:	800d883a 	mov	r6,r16
10105804:	880f883a 	mov	r7,r17
10105808:	9009883a 	mov	r4,r18
1010580c:	980b883a 	mov	r5,r19
10105810:	010b9e40 	call	1010b9e4 <__divdf3>
10105814:	180b883a 	mov	r5,r3
10105818:	1009883a 	mov	r4,r2
1010581c:	010d5380 	call	1010d538 <__fixdfsi>
10105820:	1009883a 	mov	r4,r2
10105824:	102b883a 	mov	r21,r2
10105828:	010d5b80 	call	1010d5b8 <__floatsidf>
1010582c:	800d883a 	mov	r6,r16
10105830:	880f883a 	mov	r7,r17
10105834:	1009883a 	mov	r4,r2
10105838:	180b883a 	mov	r5,r3
1010583c:	010c5240 	call	1010c524 <__muldf3>
10105840:	100d883a 	mov	r6,r2
10105844:	180f883a 	mov	r7,r3
10105848:	9009883a 	mov	r4,r18
1010584c:	980b883a 	mov	r5,r19
10105850:	010cc3c0 	call	1010cc3c <__subdf3>
10105854:	d9c00717 	ldw	r7,28(sp)
10105858:	1009883a 	mov	r4,r2
1010585c:	a8800c04 	addi	r2,r21,48
10105860:	38800005 	stb	r2,0(r7)
10105864:	3dc00044 	addi	r23,r7,1
10105868:	d9c00617 	ldw	r7,24(sp)
1010586c:	01800044 	movi	r6,1
10105870:	180b883a 	mov	r5,r3
10105874:	2005883a 	mov	r2,r4
10105878:	39803826 	beq	r7,r6,1010595c <_dtoa_r+0x8f4>
1010587c:	000d883a 	mov	r6,zero
10105880:	01d00934 	movhi	r7,16420
10105884:	010c5240 	call	1010c524 <__muldf3>
10105888:	000d883a 	mov	r6,zero
1010588c:	000f883a 	mov	r7,zero
10105890:	1009883a 	mov	r4,r2
10105894:	180b883a 	mov	r5,r3
10105898:	1025883a 	mov	r18,r2
1010589c:	1827883a 	mov	r19,r3
101058a0:	010c2cc0 	call	1010c2cc <__eqdf2>
101058a4:	103f9a26 	beq	r2,zero,10105710 <_dtoa_r+0x6a8>
101058a8:	d9c00617 	ldw	r7,24(sp)
101058ac:	d8c00717 	ldw	r3,28(sp)
101058b0:	b829883a 	mov	r20,r23
101058b4:	38bfffc4 	addi	r2,r7,-1
101058b8:	18ad883a 	add	r22,r3,r2
101058bc:	00000a06 	br	101058e8 <_dtoa_r+0x880>
101058c0:	010c5240 	call	1010c524 <__muldf3>
101058c4:	000d883a 	mov	r6,zero
101058c8:	000f883a 	mov	r7,zero
101058cc:	1009883a 	mov	r4,r2
101058d0:	180b883a 	mov	r5,r3
101058d4:	1025883a 	mov	r18,r2
101058d8:	1827883a 	mov	r19,r3
101058dc:	b829883a 	mov	r20,r23
101058e0:	010c2cc0 	call	1010c2cc <__eqdf2>
101058e4:	103f8a26 	beq	r2,zero,10105710 <_dtoa_r+0x6a8>
101058e8:	800d883a 	mov	r6,r16
101058ec:	880f883a 	mov	r7,r17
101058f0:	9009883a 	mov	r4,r18
101058f4:	980b883a 	mov	r5,r19
101058f8:	010b9e40 	call	1010b9e4 <__divdf3>
101058fc:	180b883a 	mov	r5,r3
10105900:	1009883a 	mov	r4,r2
10105904:	010d5380 	call	1010d538 <__fixdfsi>
10105908:	1009883a 	mov	r4,r2
1010590c:	102b883a 	mov	r21,r2
10105910:	010d5b80 	call	1010d5b8 <__floatsidf>
10105914:	800d883a 	mov	r6,r16
10105918:	880f883a 	mov	r7,r17
1010591c:	1009883a 	mov	r4,r2
10105920:	180b883a 	mov	r5,r3
10105924:	010c5240 	call	1010c524 <__muldf3>
10105928:	100d883a 	mov	r6,r2
1010592c:	180f883a 	mov	r7,r3
10105930:	9009883a 	mov	r4,r18
10105934:	980b883a 	mov	r5,r19
10105938:	010cc3c0 	call	1010cc3c <__subdf3>
1010593c:	aa000c04 	addi	r8,r21,48
10105940:	a2000005 	stb	r8,0(r20)
10105944:	000d883a 	mov	r6,zero
10105948:	01d00934 	movhi	r7,16420
1010594c:	1009883a 	mov	r4,r2
10105950:	180b883a 	mov	r5,r3
10105954:	a5c00044 	addi	r23,r20,1
10105958:	b53fd91e 	bne	r22,r20,101058c0 <_dtoa_r+0x858>
1010595c:	100d883a 	mov	r6,r2
10105960:	180f883a 	mov	r7,r3
10105964:	1009883a 	mov	r4,r2
10105968:	180b883a 	mov	r5,r3
1010596c:	010b1380 	call	1010b138 <__adddf3>
10105970:	100d883a 	mov	r6,r2
10105974:	180f883a 	mov	r7,r3
10105978:	8009883a 	mov	r4,r16
1010597c:	880b883a 	mov	r5,r17
10105980:	1027883a 	mov	r19,r2
10105984:	1825883a 	mov	r18,r3
10105988:	010c4300 	call	1010c430 <__ledf2>
1010598c:	10000816 	blt	r2,zero,101059b0 <_dtoa_r+0x948>
10105990:	980d883a 	mov	r6,r19
10105994:	900f883a 	mov	r7,r18
10105998:	8009883a 	mov	r4,r16
1010599c:	880b883a 	mov	r5,r17
101059a0:	010c2cc0 	call	1010c2cc <__eqdf2>
101059a4:	103f5a1e 	bne	r2,zero,10105710 <_dtoa_r+0x6a8>
101059a8:	ad40004c 	andi	r21,r21,1
101059ac:	a83f5826 	beq	r21,zero,10105710 <_dtoa_r+0x6a8>
101059b0:	bd3fffc3 	ldbu	r20,-1(r23)
101059b4:	b8bfffc4 	addi	r2,r23,-1
101059b8:	1007883a 	mov	r3,r2
101059bc:	01400e44 	movi	r5,57
101059c0:	d9800717 	ldw	r6,28(sp)
101059c4:	00000506 	br	101059dc <_dtoa_r+0x974>
101059c8:	18ffffc4 	addi	r3,r3,-1
101059cc:	11824726 	beq	r2,r6,101062ec <_dtoa_r+0x1284>
101059d0:	1d000003 	ldbu	r20,0(r3)
101059d4:	102f883a 	mov	r23,r2
101059d8:	10bfffc4 	addi	r2,r2,-1
101059dc:	a1003fcc 	andi	r4,r20,255
101059e0:	2100201c 	xori	r4,r4,128
101059e4:	213fe004 	addi	r4,r4,-128
101059e8:	217ff726 	beq	r4,r5,101059c8 <_dtoa_r+0x960>
101059ec:	a2000044 	addi	r8,r20,1
101059f0:	12000005 	stb	r8,0(r2)
101059f4:	003f4606 	br	10105710 <_dtoa_r+0x6a8>
101059f8:	d9000b17 	ldw	r4,44(sp)
101059fc:	2000c826 	beq	r4,zero,10105d20 <_dtoa_r+0xcb8>
10105a00:	d9800317 	ldw	r6,12(sp)
10105a04:	00c00044 	movi	r3,1
10105a08:	1980f90e 	bge	r3,r6,10105df0 <_dtoa_r+0xd88>
10105a0c:	d8800617 	ldw	r2,24(sp)
10105a10:	d8c00a17 	ldw	r3,40(sp)
10105a14:	157fffc4 	addi	r21,r2,-1
10105a18:	1d41f316 	blt	r3,r21,101061e8 <_dtoa_r+0x1180>
10105a1c:	1d6bc83a 	sub	r21,r3,r21
10105a20:	d9c00617 	ldw	r7,24(sp)
10105a24:	3802aa16 	blt	r7,zero,101064d0 <_dtoa_r+0x1468>
10105a28:	dd000817 	ldw	r20,32(sp)
10105a2c:	d8800617 	ldw	r2,24(sp)
10105a30:	d8c00817 	ldw	r3,32(sp)
10105a34:	01400044 	movi	r5,1
10105a38:	e009883a 	mov	r4,fp
10105a3c:	1887883a 	add	r3,r3,r2
10105a40:	d8c00815 	stw	r3,32(sp)
10105a44:	b0ad883a 	add	r22,r22,r2
10105a48:	010757c0 	call	1010757c <__i2b>
10105a4c:	1023883a 	mov	r17,r2
10105a50:	a0000826 	beq	r20,zero,10105a74 <_dtoa_r+0xa0c>
10105a54:	0580070e 	bge	zero,r22,10105a74 <_dtoa_r+0xa0c>
10105a58:	a005883a 	mov	r2,r20
10105a5c:	b500b916 	blt	r22,r20,10105d44 <_dtoa_r+0xcdc>
10105a60:	d9000817 	ldw	r4,32(sp)
10105a64:	a0a9c83a 	sub	r20,r20,r2
10105a68:	b0adc83a 	sub	r22,r22,r2
10105a6c:	2089c83a 	sub	r4,r4,r2
10105a70:	d9000815 	stw	r4,32(sp)
10105a74:	d9800a17 	ldw	r6,40(sp)
10105a78:	0181810e 	bge	zero,r6,10106080 <_dtoa_r+0x1018>
10105a7c:	d9c00b17 	ldw	r7,44(sp)
10105a80:	3800b326 	beq	r7,zero,10105d50 <_dtoa_r+0xce8>
10105a84:	a800b226 	beq	r21,zero,10105d50 <_dtoa_r+0xce8>
10105a88:	880b883a 	mov	r5,r17
10105a8c:	a80d883a 	mov	r6,r21
10105a90:	e009883a 	mov	r4,fp
10105a94:	01077b00 	call	101077b0 <__pow5mult>
10105a98:	d9800917 	ldw	r6,36(sp)
10105a9c:	100b883a 	mov	r5,r2
10105aa0:	e009883a 	mov	r4,fp
10105aa4:	1023883a 	mov	r17,r2
10105aa8:	01075b80 	call	101075b8 <__multiply>
10105aac:	1021883a 	mov	r16,r2
10105ab0:	d8800a17 	ldw	r2,40(sp)
10105ab4:	d9400917 	ldw	r5,36(sp)
10105ab8:	e009883a 	mov	r4,fp
10105abc:	1545c83a 	sub	r2,r2,r21
10105ac0:	d8800a15 	stw	r2,40(sp)
10105ac4:	01072180 	call	10107218 <_Bfree>
10105ac8:	d8c00a17 	ldw	r3,40(sp)
10105acc:	18009f1e 	bne	r3,zero,10105d4c <_dtoa_r+0xce4>
10105ad0:	05c00044 	movi	r23,1
10105ad4:	e009883a 	mov	r4,fp
10105ad8:	b80b883a 	mov	r5,r23
10105adc:	010757c0 	call	1010757c <__i2b>
10105ae0:	d9000d17 	ldw	r4,52(sp)
10105ae4:	102b883a 	mov	r21,r2
10105ae8:	2000ce26 	beq	r4,zero,10105e24 <_dtoa_r+0xdbc>
10105aec:	200d883a 	mov	r6,r4
10105af0:	100b883a 	mov	r5,r2
10105af4:	e009883a 	mov	r4,fp
10105af8:	01077b00 	call	101077b0 <__pow5mult>
10105afc:	d9800317 	ldw	r6,12(sp)
10105b00:	102b883a 	mov	r21,r2
10105b04:	b981810e 	bge	r23,r6,1010610c <_dtoa_r+0x10a4>
10105b08:	0027883a 	mov	r19,zero
10105b0c:	a8800417 	ldw	r2,16(r21)
10105b10:	05c00804 	movi	r23,32
10105b14:	10800104 	addi	r2,r2,4
10105b18:	1085883a 	add	r2,r2,r2
10105b1c:	1085883a 	add	r2,r2,r2
10105b20:	a885883a 	add	r2,r21,r2
10105b24:	11000017 	ldw	r4,0(r2)
10105b28:	01074640 	call	10107464 <__hi0bits>
10105b2c:	b885c83a 	sub	r2,r23,r2
10105b30:	1585883a 	add	r2,r2,r22
10105b34:	108007cc 	andi	r2,r2,31
10105b38:	1000b326 	beq	r2,zero,10105e08 <_dtoa_r+0xda0>
10105b3c:	00c00804 	movi	r3,32
10105b40:	1887c83a 	sub	r3,r3,r2
10105b44:	01000104 	movi	r4,4
10105b48:	20c2cd0e 	bge	r4,r3,10106680 <_dtoa_r+0x1618>
10105b4c:	00c00704 	movi	r3,28
10105b50:	1885c83a 	sub	r2,r3,r2
10105b54:	d8c00817 	ldw	r3,32(sp)
10105b58:	a0a9883a 	add	r20,r20,r2
10105b5c:	b0ad883a 	add	r22,r22,r2
10105b60:	1887883a 	add	r3,r3,r2
10105b64:	d8c00815 	stw	r3,32(sp)
10105b68:	d9800817 	ldw	r6,32(sp)
10105b6c:	0180040e 	bge	zero,r6,10105b80 <_dtoa_r+0xb18>
10105b70:	800b883a 	mov	r5,r16
10105b74:	e009883a 	mov	r4,fp
10105b78:	01078f00 	call	101078f0 <__lshift>
10105b7c:	1021883a 	mov	r16,r2
10105b80:	0580050e 	bge	zero,r22,10105b98 <_dtoa_r+0xb30>
10105b84:	a80b883a 	mov	r5,r21
10105b88:	b00d883a 	mov	r6,r22
10105b8c:	e009883a 	mov	r4,fp
10105b90:	01078f00 	call	101078f0 <__lshift>
10105b94:	102b883a 	mov	r21,r2
10105b98:	d9c00e17 	ldw	r7,56(sp)
10105b9c:	3801211e 	bne	r7,zero,10106024 <_dtoa_r+0xfbc>
10105ba0:	d9800617 	ldw	r6,24(sp)
10105ba4:	0181380e 	bge	zero,r6,10106088 <_dtoa_r+0x1020>
10105ba8:	d8c00b17 	ldw	r3,44(sp)
10105bac:	1800ab1e 	bne	r3,zero,10105e5c <_dtoa_r+0xdf4>
10105bb0:	dc800717 	ldw	r18,28(sp)
10105bb4:	dcc00617 	ldw	r19,24(sp)
10105bb8:	9029883a 	mov	r20,r18
10105bbc:	00000206 	br	10105bc8 <_dtoa_r+0xb60>
10105bc0:	01072400 	call	10107240 <__multadd>
10105bc4:	1021883a 	mov	r16,r2
10105bc8:	a80b883a 	mov	r5,r21
10105bcc:	8009883a 	mov	r4,r16
10105bd0:	0104e680 	call	10104e68 <quorem>
10105bd4:	10800c04 	addi	r2,r2,48
10105bd8:	90800005 	stb	r2,0(r18)
10105bdc:	94800044 	addi	r18,r18,1
10105be0:	9507c83a 	sub	r3,r18,r20
10105be4:	000f883a 	mov	r7,zero
10105be8:	01800284 	movi	r6,10
10105bec:	800b883a 	mov	r5,r16
10105bf0:	e009883a 	mov	r4,fp
10105bf4:	1cfff216 	blt	r3,r19,10105bc0 <_dtoa_r+0xb58>
10105bf8:	1011883a 	mov	r8,r2
10105bfc:	d8800617 	ldw	r2,24(sp)
10105c00:	0082370e 	bge	zero,r2,101064e0 <_dtoa_r+0x1478>
10105c04:	d9000717 	ldw	r4,28(sp)
10105c08:	0025883a 	mov	r18,zero
10105c0c:	20af883a 	add	r23,r4,r2
10105c10:	01800044 	movi	r6,1
10105c14:	800b883a 	mov	r5,r16
10105c18:	e009883a 	mov	r4,fp
10105c1c:	da001715 	stw	r8,92(sp)
10105c20:	01078f00 	call	101078f0 <__lshift>
10105c24:	a80b883a 	mov	r5,r21
10105c28:	1009883a 	mov	r4,r2
10105c2c:	d8800915 	stw	r2,36(sp)
10105c30:	0107a380 	call	10107a38 <__mcmp>
10105c34:	da001717 	ldw	r8,92(sp)
10105c38:	0081800e 	bge	zero,r2,1010623c <_dtoa_r+0x11d4>
10105c3c:	b93fffc3 	ldbu	r4,-1(r23)
10105c40:	b8bfffc4 	addi	r2,r23,-1
10105c44:	1007883a 	mov	r3,r2
10105c48:	01800e44 	movi	r6,57
10105c4c:	d9c00717 	ldw	r7,28(sp)
10105c50:	00000506 	br	10105c68 <_dtoa_r+0xc00>
10105c54:	18ffffc4 	addi	r3,r3,-1
10105c58:	11c12326 	beq	r2,r7,101060e8 <_dtoa_r+0x1080>
10105c5c:	19000003 	ldbu	r4,0(r3)
10105c60:	102f883a 	mov	r23,r2
10105c64:	10bfffc4 	addi	r2,r2,-1
10105c68:	21403fcc 	andi	r5,r4,255
10105c6c:	2940201c 	xori	r5,r5,128
10105c70:	297fe004 	addi	r5,r5,-128
10105c74:	29bff726 	beq	r5,r6,10105c54 <_dtoa_r+0xbec>
10105c78:	21000044 	addi	r4,r4,1
10105c7c:	11000005 	stb	r4,0(r2)
10105c80:	a80b883a 	mov	r5,r21
10105c84:	e009883a 	mov	r4,fp
10105c88:	01072180 	call	10107218 <_Bfree>
10105c8c:	883ea026 	beq	r17,zero,10105710 <_dtoa_r+0x6a8>
10105c90:	90000426 	beq	r18,zero,10105ca4 <_dtoa_r+0xc3c>
10105c94:	94400326 	beq	r18,r17,10105ca4 <_dtoa_r+0xc3c>
10105c98:	900b883a 	mov	r5,r18
10105c9c:	e009883a 	mov	r4,fp
10105ca0:	01072180 	call	10107218 <_Bfree>
10105ca4:	880b883a 	mov	r5,r17
10105ca8:	e009883a 	mov	r4,fp
10105cac:	01072180 	call	10107218 <_Bfree>
10105cb0:	003e9706 	br	10105710 <_dtoa_r+0x6a8>
10105cb4:	01800044 	movi	r6,1
10105cb8:	d9800e15 	stw	r6,56(sp)
10105cbc:	003d9606 	br	10105318 <_dtoa_r+0x2b0>
10105cc0:	d8800817 	ldw	r2,32(sp)
10105cc4:	d8c00517 	ldw	r3,20(sp)
10105cc8:	d8000d15 	stw	zero,52(sp)
10105ccc:	10c5c83a 	sub	r2,r2,r3
10105cd0:	00c9c83a 	sub	r4,zero,r3
10105cd4:	d8800815 	stw	r2,32(sp)
10105cd8:	d9000a15 	stw	r4,40(sp)
10105cdc:	003d9706 	br	1010533c <_dtoa_r+0x2d4>
10105ce0:	05adc83a 	sub	r22,zero,r22
10105ce4:	dd800815 	stw	r22,32(sp)
10105ce8:	002d883a 	mov	r22,zero
10105cec:	003d8e06 	br	10105328 <_dtoa_r+0x2c0>
10105cf0:	d9000517 	ldw	r4,20(sp)
10105cf4:	010d5b80 	call	1010d5b8 <__floatsidf>
10105cf8:	100d883a 	mov	r6,r2
10105cfc:	180f883a 	mov	r7,r3
10105d00:	a009883a 	mov	r4,r20
10105d04:	880b883a 	mov	r5,r17
10105d08:	010c2cc0 	call	1010c2cc <__eqdf2>
10105d0c:	103d7126 	beq	r2,zero,101052d4 <_dtoa_r+0x26c>
10105d10:	d9c00517 	ldw	r7,20(sp)
10105d14:	39ffffc4 	addi	r7,r7,-1
10105d18:	d9c00515 	stw	r7,20(sp)
10105d1c:	003d6d06 	br	101052d4 <_dtoa_r+0x26c>
10105d20:	dd400a17 	ldw	r21,40(sp)
10105d24:	dd000817 	ldw	r20,32(sp)
10105d28:	0023883a 	mov	r17,zero
10105d2c:	003f4806 	br	10105a50 <_dtoa_r+0x9e8>
10105d30:	10e3c83a 	sub	r17,r2,r3
10105d34:	9448983a 	sll	r4,r18,r17
10105d38:	003d3206 	br	10105204 <_dtoa_r+0x19c>
10105d3c:	d8000e15 	stw	zero,56(sp)
10105d40:	003d7506 	br	10105318 <_dtoa_r+0x2b0>
10105d44:	b005883a 	mov	r2,r22
10105d48:	003f4506 	br	10105a60 <_dtoa_r+0x9f8>
10105d4c:	dc000915 	stw	r16,36(sp)
10105d50:	d9800a17 	ldw	r6,40(sp)
10105d54:	d9400917 	ldw	r5,36(sp)
10105d58:	e009883a 	mov	r4,fp
10105d5c:	01077b00 	call	101077b0 <__pow5mult>
10105d60:	1021883a 	mov	r16,r2
10105d64:	003f5a06 	br	10105ad0 <_dtoa_r+0xa68>
10105d68:	01c00044 	movi	r7,1
10105d6c:	d9c00b15 	stw	r7,44(sp)
10105d70:	d8802217 	ldw	r2,136(sp)
10105d74:	0081280e 	bge	zero,r2,10106218 <_dtoa_r+0x11b0>
10105d78:	100d883a 	mov	r6,r2
10105d7c:	1021883a 	mov	r16,r2
10105d80:	d8800c15 	stw	r2,48(sp)
10105d84:	d8800615 	stw	r2,24(sp)
10105d88:	003d8806 	br	101053ac <_dtoa_r+0x344>
10105d8c:	d8800617 	ldw	r2,24(sp)
10105d90:	00be9b16 	blt	zero,r2,10105800 <_dtoa_r+0x798>
10105d94:	10010f1e 	bne	r2,zero,101061d4 <_dtoa_r+0x116c>
10105d98:	880b883a 	mov	r5,r17
10105d9c:	000d883a 	mov	r6,zero
10105da0:	01d00534 	movhi	r7,16404
10105da4:	8009883a 	mov	r4,r16
10105da8:	010c5240 	call	1010c524 <__muldf3>
10105dac:	900d883a 	mov	r6,r18
10105db0:	980f883a 	mov	r7,r19
10105db4:	1009883a 	mov	r4,r2
10105db8:	180b883a 	mov	r5,r3
10105dbc:	010c3540 	call	1010c354 <__gedf2>
10105dc0:	002b883a 	mov	r21,zero
10105dc4:	0023883a 	mov	r17,zero
10105dc8:	1000bf16 	blt	r2,zero,101060c8 <_dtoa_r+0x1060>
10105dcc:	d9802217 	ldw	r6,136(sp)
10105dd0:	ddc00717 	ldw	r23,28(sp)
10105dd4:	018c303a 	nor	r6,zero,r6
10105dd8:	d9800515 	stw	r6,20(sp)
10105ddc:	a80b883a 	mov	r5,r21
10105de0:	e009883a 	mov	r4,fp
10105de4:	01072180 	call	10107218 <_Bfree>
10105de8:	883e4926 	beq	r17,zero,10105710 <_dtoa_r+0x6a8>
10105dec:	003fad06 	br	10105ca4 <_dtoa_r+0xc3c>
10105df0:	d9c01117 	ldw	r7,68(sp)
10105df4:	3801bc26 	beq	r7,zero,101064e8 <_dtoa_r+0x1480>
10105df8:	10810cc4 	addi	r2,r2,1075
10105dfc:	dd400a17 	ldw	r21,40(sp)
10105e00:	dd000817 	ldw	r20,32(sp)
10105e04:	003f0a06 	br	10105a30 <_dtoa_r+0x9c8>
10105e08:	00800704 	movi	r2,28
10105e0c:	d9000817 	ldw	r4,32(sp)
10105e10:	a0a9883a 	add	r20,r20,r2
10105e14:	b0ad883a 	add	r22,r22,r2
10105e18:	2089883a 	add	r4,r4,r2
10105e1c:	d9000815 	stw	r4,32(sp)
10105e20:	003f5106 	br	10105b68 <_dtoa_r+0xb00>
10105e24:	d8c00317 	ldw	r3,12(sp)
10105e28:	b8c1fc0e 	bge	r23,r3,1010661c <_dtoa_r+0x15b4>
10105e2c:	0027883a 	mov	r19,zero
10105e30:	b805883a 	mov	r2,r23
10105e34:	003f3e06 	br	10105b30 <_dtoa_r+0xac8>
10105e38:	880b883a 	mov	r5,r17
10105e3c:	e009883a 	mov	r4,fp
10105e40:	000f883a 	mov	r7,zero
10105e44:	01800284 	movi	r6,10
10105e48:	01072400 	call	10107240 <__multadd>
10105e4c:	d9000c17 	ldw	r4,48(sp)
10105e50:	1023883a 	mov	r17,r2
10105e54:	0102040e 	bge	zero,r4,10106668 <_dtoa_r+0x1600>
10105e58:	d9000615 	stw	r4,24(sp)
10105e5c:	0500050e 	bge	zero,r20,10105e74 <_dtoa_r+0xe0c>
10105e60:	880b883a 	mov	r5,r17
10105e64:	a00d883a 	mov	r6,r20
10105e68:	e009883a 	mov	r4,fp
10105e6c:	01078f00 	call	101078f0 <__lshift>
10105e70:	1023883a 	mov	r17,r2
10105e74:	9801241e 	bne	r19,zero,10106308 <_dtoa_r+0x12a0>
10105e78:	8829883a 	mov	r20,r17
10105e7c:	d9000617 	ldw	r4,24(sp)
10105e80:	dcc00717 	ldw	r19,28(sp)
10105e84:	9480004c 	andi	r18,r18,1
10105e88:	20bfffc4 	addi	r2,r4,-1
10105e8c:	9885883a 	add	r2,r19,r2
10105e90:	d8800415 	stw	r2,16(sp)
10105e94:	dc800615 	stw	r18,24(sp)
10105e98:	a80b883a 	mov	r5,r21
10105e9c:	8009883a 	mov	r4,r16
10105ea0:	0104e680 	call	10104e68 <quorem>
10105ea4:	880b883a 	mov	r5,r17
10105ea8:	8009883a 	mov	r4,r16
10105eac:	102f883a 	mov	r23,r2
10105eb0:	0107a380 	call	10107a38 <__mcmp>
10105eb4:	a80b883a 	mov	r5,r21
10105eb8:	a00d883a 	mov	r6,r20
10105ebc:	e009883a 	mov	r4,fp
10105ec0:	102d883a 	mov	r22,r2
10105ec4:	0107a980 	call	10107a98 <__mdiff>
10105ec8:	1007883a 	mov	r3,r2
10105ecc:	10800317 	ldw	r2,12(r2)
10105ed0:	bc800c04 	addi	r18,r23,48
10105ed4:	180b883a 	mov	r5,r3
10105ed8:	10004e1e 	bne	r2,zero,10106014 <_dtoa_r+0xfac>
10105edc:	8009883a 	mov	r4,r16
10105ee0:	d8c01615 	stw	r3,88(sp)
10105ee4:	0107a380 	call	10107a38 <__mcmp>
10105ee8:	d8c01617 	ldw	r3,88(sp)
10105eec:	e009883a 	mov	r4,fp
10105ef0:	d8801615 	stw	r2,88(sp)
10105ef4:	180b883a 	mov	r5,r3
10105ef8:	01072180 	call	10107218 <_Bfree>
10105efc:	d8801617 	ldw	r2,88(sp)
10105f00:	1000041e 	bne	r2,zero,10105f14 <_dtoa_r+0xeac>
10105f04:	d9800317 	ldw	r6,12(sp)
10105f08:	3000021e 	bne	r6,zero,10105f14 <_dtoa_r+0xeac>
10105f0c:	d8c00617 	ldw	r3,24(sp)
10105f10:	18003726 	beq	r3,zero,10105ff0 <_dtoa_r+0xf88>
10105f14:	b0002016 	blt	r22,zero,10105f98 <_dtoa_r+0xf30>
10105f18:	b000041e 	bne	r22,zero,10105f2c <_dtoa_r+0xec4>
10105f1c:	d9000317 	ldw	r4,12(sp)
10105f20:	2000021e 	bne	r4,zero,10105f2c <_dtoa_r+0xec4>
10105f24:	d8c00617 	ldw	r3,24(sp)
10105f28:	18001b26 	beq	r3,zero,10105f98 <_dtoa_r+0xf30>
10105f2c:	00810716 	blt	zero,r2,1010634c <_dtoa_r+0x12e4>
10105f30:	d8c00417 	ldw	r3,16(sp)
10105f34:	9d800044 	addi	r22,r19,1
10105f38:	9c800005 	stb	r18,0(r19)
10105f3c:	b02f883a 	mov	r23,r22
10105f40:	98c10626 	beq	r19,r3,1010635c <_dtoa_r+0x12f4>
10105f44:	800b883a 	mov	r5,r16
10105f48:	000f883a 	mov	r7,zero
10105f4c:	01800284 	movi	r6,10
10105f50:	e009883a 	mov	r4,fp
10105f54:	01072400 	call	10107240 <__multadd>
10105f58:	1021883a 	mov	r16,r2
10105f5c:	000f883a 	mov	r7,zero
10105f60:	01800284 	movi	r6,10
10105f64:	880b883a 	mov	r5,r17
10105f68:	e009883a 	mov	r4,fp
10105f6c:	8d002526 	beq	r17,r20,10106004 <_dtoa_r+0xf9c>
10105f70:	01072400 	call	10107240 <__multadd>
10105f74:	a00b883a 	mov	r5,r20
10105f78:	000f883a 	mov	r7,zero
10105f7c:	01800284 	movi	r6,10
10105f80:	e009883a 	mov	r4,fp
10105f84:	1023883a 	mov	r17,r2
10105f88:	01072400 	call	10107240 <__multadd>
10105f8c:	1029883a 	mov	r20,r2
10105f90:	b027883a 	mov	r19,r22
10105f94:	003fc006 	br	10105e98 <_dtoa_r+0xe30>
10105f98:	9011883a 	mov	r8,r18
10105f9c:	00800e0e 	bge	zero,r2,10105fd8 <_dtoa_r+0xf70>
10105fa0:	800b883a 	mov	r5,r16
10105fa4:	01800044 	movi	r6,1
10105fa8:	e009883a 	mov	r4,fp
10105fac:	da001715 	stw	r8,92(sp)
10105fb0:	01078f00 	call	101078f0 <__lshift>
10105fb4:	a80b883a 	mov	r5,r21
10105fb8:	1009883a 	mov	r4,r2
10105fbc:	1021883a 	mov	r16,r2
10105fc0:	0107a380 	call	10107a38 <__mcmp>
10105fc4:	da001717 	ldw	r8,92(sp)
10105fc8:	0081960e 	bge	zero,r2,10106624 <_dtoa_r+0x15bc>
10105fcc:	00800e44 	movi	r2,57
10105fd0:	40817026 	beq	r8,r2,10106594 <_dtoa_r+0x152c>
10105fd4:	ba000c44 	addi	r8,r23,49
10105fd8:	8825883a 	mov	r18,r17
10105fdc:	9dc00044 	addi	r23,r19,1
10105fe0:	9a000005 	stb	r8,0(r19)
10105fe4:	a023883a 	mov	r17,r20
10105fe8:	dc000915 	stw	r16,36(sp)
10105fec:	003f2406 	br	10105c80 <_dtoa_r+0xc18>
10105ff0:	00800e44 	movi	r2,57
10105ff4:	9011883a 	mov	r8,r18
10105ff8:	90816626 	beq	r18,r2,10106594 <_dtoa_r+0x152c>
10105ffc:	05bff516 	blt	zero,r22,10105fd4 <_dtoa_r+0xf6c>
10106000:	003ff506 	br	10105fd8 <_dtoa_r+0xf70>
10106004:	01072400 	call	10107240 <__multadd>
10106008:	1023883a 	mov	r17,r2
1010600c:	1029883a 	mov	r20,r2
10106010:	003fdf06 	br	10105f90 <_dtoa_r+0xf28>
10106014:	e009883a 	mov	r4,fp
10106018:	01072180 	call	10107218 <_Bfree>
1010601c:	00800044 	movi	r2,1
10106020:	003fbc06 	br	10105f14 <_dtoa_r+0xeac>
10106024:	a80b883a 	mov	r5,r21
10106028:	8009883a 	mov	r4,r16
1010602c:	0107a380 	call	10107a38 <__mcmp>
10106030:	103edb0e 	bge	r2,zero,10105ba0 <_dtoa_r+0xb38>
10106034:	800b883a 	mov	r5,r16
10106038:	000f883a 	mov	r7,zero
1010603c:	01800284 	movi	r6,10
10106040:	e009883a 	mov	r4,fp
10106044:	01072400 	call	10107240 <__multadd>
10106048:	1021883a 	mov	r16,r2
1010604c:	d8800517 	ldw	r2,20(sp)
10106050:	d8c00b17 	ldw	r3,44(sp)
10106054:	10bfffc4 	addi	r2,r2,-1
10106058:	d8800515 	stw	r2,20(sp)
1010605c:	183f761e 	bne	r3,zero,10105e38 <_dtoa_r+0xdd0>
10106060:	d9000c17 	ldw	r4,48(sp)
10106064:	0101730e 	bge	zero,r4,10106634 <_dtoa_r+0x15cc>
10106068:	d9000615 	stw	r4,24(sp)
1010606c:	003ed006 	br	10105bb0 <_dtoa_r+0xb48>
10106070:	00800084 	movi	r2,2
10106074:	3081861e 	bne	r6,r2,10106690 <_dtoa_r+0x1628>
10106078:	d8000b15 	stw	zero,44(sp)
1010607c:	003f3c06 	br	10105d70 <_dtoa_r+0xd08>
10106080:	dc000917 	ldw	r16,36(sp)
10106084:	003e9206 	br	10105ad0 <_dtoa_r+0xa68>
10106088:	d9c00317 	ldw	r7,12(sp)
1010608c:	00800084 	movi	r2,2
10106090:	11fec50e 	bge	r2,r7,10105ba8 <_dtoa_r+0xb40>
10106094:	d9000617 	ldw	r4,24(sp)
10106098:	20013c1e 	bne	r4,zero,1010658c <_dtoa_r+0x1524>
1010609c:	a80b883a 	mov	r5,r21
101060a0:	000f883a 	mov	r7,zero
101060a4:	01800144 	movi	r6,5
101060a8:	e009883a 	mov	r4,fp
101060ac:	01072400 	call	10107240 <__multadd>
101060b0:	100b883a 	mov	r5,r2
101060b4:	8009883a 	mov	r4,r16
101060b8:	102b883a 	mov	r21,r2
101060bc:	0107a380 	call	10107a38 <__mcmp>
101060c0:	dc000915 	stw	r16,36(sp)
101060c4:	00bf410e 	bge	zero,r2,10105dcc <_dtoa_r+0xd64>
101060c8:	d9c00717 	ldw	r7,28(sp)
101060cc:	00800c44 	movi	r2,49
101060d0:	38800005 	stb	r2,0(r7)
101060d4:	d8800517 	ldw	r2,20(sp)
101060d8:	3dc00044 	addi	r23,r7,1
101060dc:	10800044 	addi	r2,r2,1
101060e0:	d8800515 	stw	r2,20(sp)
101060e4:	003f3d06 	br	10105ddc <_dtoa_r+0xd74>
101060e8:	d9800517 	ldw	r6,20(sp)
101060ec:	d9c00717 	ldw	r7,28(sp)
101060f0:	00800c44 	movi	r2,49
101060f4:	31800044 	addi	r6,r6,1
101060f8:	d9800515 	stw	r6,20(sp)
101060fc:	38800005 	stb	r2,0(r7)
10106100:	003edf06 	br	10105c80 <_dtoa_r+0xc18>
10106104:	d8000b15 	stw	zero,44(sp)
10106108:	003c9f06 	br	10105388 <_dtoa_r+0x320>
1010610c:	903e7e1e 	bne	r18,zero,10105b08 <_dtoa_r+0xaa0>
10106110:	00800434 	movhi	r2,16
10106114:	10bfffc4 	addi	r2,r2,-1
10106118:	9884703a 	and	r2,r19,r2
1010611c:	1000ea1e 	bne	r2,zero,101064c8 <_dtoa_r+0x1460>
10106120:	9cdffc2c 	andhi	r19,r19,32752
10106124:	9800e826 	beq	r19,zero,101064c8 <_dtoa_r+0x1460>
10106128:	d9c00817 	ldw	r7,32(sp)
1010612c:	b5800044 	addi	r22,r22,1
10106130:	04c00044 	movi	r19,1
10106134:	39c00044 	addi	r7,r7,1
10106138:	d9c00815 	stw	r7,32(sp)
1010613c:	d8800d17 	ldw	r2,52(sp)
10106140:	103e721e 	bne	r2,zero,10105b0c <_dtoa_r+0xaa4>
10106144:	00800044 	movi	r2,1
10106148:	003e7906 	br	10105b30 <_dtoa_r+0xac8>
1010614c:	8009883a 	mov	r4,r16
10106150:	010d5b80 	call	1010d5b8 <__floatsidf>
10106154:	d9800f17 	ldw	r6,60(sp)
10106158:	d9c01017 	ldw	r7,64(sp)
1010615c:	1009883a 	mov	r4,r2
10106160:	180b883a 	mov	r5,r3
10106164:	010c5240 	call	1010c524 <__muldf3>
10106168:	000d883a 	mov	r6,zero
1010616c:	01d00734 	movhi	r7,16412
10106170:	1009883a 	mov	r4,r2
10106174:	180b883a 	mov	r5,r3
10106178:	010b1380 	call	1010b138 <__adddf3>
1010617c:	047f3034 	movhi	r17,64704
10106180:	1021883a 	mov	r16,r2
10106184:	1c63883a 	add	r17,r3,r17
10106188:	d9000f17 	ldw	r4,60(sp)
1010618c:	d9401017 	ldw	r5,64(sp)
10106190:	000d883a 	mov	r6,zero
10106194:	01d00534 	movhi	r7,16404
10106198:	010cc3c0 	call	1010cc3c <__subdf3>
1010619c:	800d883a 	mov	r6,r16
101061a0:	880f883a 	mov	r7,r17
101061a4:	1009883a 	mov	r4,r2
101061a8:	180b883a 	mov	r5,r3
101061ac:	102b883a 	mov	r21,r2
101061b0:	1829883a 	mov	r20,r3
101061b4:	010c3540 	call	1010c354 <__gedf2>
101061b8:	00806c16 	blt	zero,r2,1010636c <_dtoa_r+0x1304>
101061bc:	89e0003c 	xorhi	r7,r17,32768
101061c0:	800d883a 	mov	r6,r16
101061c4:	a809883a 	mov	r4,r21
101061c8:	a00b883a 	mov	r5,r20
101061cc:	010c4300 	call	1010c430 <__ledf2>
101061d0:	103d7e0e 	bge	r2,zero,101057cc <_dtoa_r+0x764>
101061d4:	002b883a 	mov	r21,zero
101061d8:	0023883a 	mov	r17,zero
101061dc:	003efb06 	br	10105dcc <_dtoa_r+0xd64>
101061e0:	d8800717 	ldw	r2,28(sp)
101061e4:	003bd006 	br	10105128 <_dtoa_r+0xc0>
101061e8:	d9000a17 	ldw	r4,40(sp)
101061ec:	d9800d17 	ldw	r6,52(sp)
101061f0:	dd400a15 	stw	r21,40(sp)
101061f4:	a905c83a 	sub	r2,r21,r4
101061f8:	308d883a 	add	r6,r6,r2
101061fc:	d9800d15 	stw	r6,52(sp)
10106200:	002b883a 	mov	r21,zero
10106204:	003e0606 	br	10105a20 <_dtoa_r+0x9b8>
10106208:	9023883a 	mov	r17,r18
1010620c:	9829883a 	mov	r20,r19
10106210:	04000084 	movi	r16,2
10106214:	003c9206 	br	10105460 <_dtoa_r+0x3f8>
10106218:	04000044 	movi	r16,1
1010621c:	dc000c15 	stw	r16,48(sp)
10106220:	dc000615 	stw	r16,24(sp)
10106224:	dc002215 	stw	r16,136(sp)
10106228:	e0001115 	stw	zero,68(fp)
1010622c:	000b883a 	mov	r5,zero
10106230:	003c6906 	br	101053d8 <_dtoa_r+0x370>
10106234:	3021883a 	mov	r16,r6
10106238:	003ffb06 	br	10106228 <_dtoa_r+0x11c0>
1010623c:	1000021e 	bne	r2,zero,10106248 <_dtoa_r+0x11e0>
10106240:	4200004c 	andi	r8,r8,1
10106244:	403e7d1e 	bne	r8,zero,10105c3c <_dtoa_r+0xbd4>
10106248:	01000c04 	movi	r4,48
1010624c:	00000106 	br	10106254 <_dtoa_r+0x11ec>
10106250:	102f883a 	mov	r23,r2
10106254:	b8bfffc4 	addi	r2,r23,-1
10106258:	10c00007 	ldb	r3,0(r2)
1010625c:	193ffc26 	beq	r3,r4,10106250 <_dtoa_r+0x11e8>
10106260:	003e8706 	br	10105c80 <_dtoa_r+0xc18>
10106264:	d8800517 	ldw	r2,20(sp)
10106268:	00a3c83a 	sub	r17,zero,r2
1010626c:	8800a426 	beq	r17,zero,10106500 <_dtoa_r+0x1498>
10106270:	888003cc 	andi	r2,r17,15
10106274:	100490fa 	slli	r2,r2,3
10106278:	00c40474 	movhi	r3,4113
1010627c:	18ffe604 	addi	r3,r3,-104
10106280:	1885883a 	add	r2,r3,r2
10106284:	11800017 	ldw	r6,0(r2)
10106288:	11c00117 	ldw	r7,4(r2)
1010628c:	9009883a 	mov	r4,r18
10106290:	980b883a 	mov	r5,r19
10106294:	8823d13a 	srai	r17,r17,4
10106298:	010c5240 	call	1010c524 <__muldf3>
1010629c:	d8800f15 	stw	r2,60(sp)
101062a0:	d8c01015 	stw	r3,64(sp)
101062a4:	8800e826 	beq	r17,zero,10106648 <_dtoa_r+0x15e0>
101062a8:	05040474 	movhi	r20,4113
101062ac:	a53fdc04 	addi	r20,r20,-144
101062b0:	04000084 	movi	r16,2
101062b4:	8980004c 	andi	r6,r17,1
101062b8:	1009883a 	mov	r4,r2
101062bc:	8823d07a 	srai	r17,r17,1
101062c0:	180b883a 	mov	r5,r3
101062c4:	30000426 	beq	r6,zero,101062d8 <_dtoa_r+0x1270>
101062c8:	a1800017 	ldw	r6,0(r20)
101062cc:	a1c00117 	ldw	r7,4(r20)
101062d0:	84000044 	addi	r16,r16,1
101062d4:	010c5240 	call	1010c524 <__muldf3>
101062d8:	a5000204 	addi	r20,r20,8
101062dc:	883ff51e 	bne	r17,zero,101062b4 <_dtoa_r+0x124c>
101062e0:	d8800f15 	stw	r2,60(sp)
101062e4:	d8c01015 	stw	r3,64(sp)
101062e8:	003c7606 	br	101054c4 <_dtoa_r+0x45c>
101062ec:	00c00c04 	movi	r3,48
101062f0:	10c00005 	stb	r3,0(r2)
101062f4:	d8c00517 	ldw	r3,20(sp)
101062f8:	bd3fffc3 	ldbu	r20,-1(r23)
101062fc:	18c00044 	addi	r3,r3,1
10106300:	d8c00515 	stw	r3,20(sp)
10106304:	003db906 	br	101059ec <_dtoa_r+0x984>
10106308:	89400117 	ldw	r5,4(r17)
1010630c:	e009883a 	mov	r4,fp
10106310:	01071700 	call	10107170 <_Balloc>
10106314:	89800417 	ldw	r6,16(r17)
10106318:	89400304 	addi	r5,r17,12
1010631c:	11000304 	addi	r4,r2,12
10106320:	31800084 	addi	r6,r6,2
10106324:	318d883a 	add	r6,r6,r6
10106328:	318d883a 	add	r6,r6,r6
1010632c:	1027883a 	mov	r19,r2
10106330:	0106ecc0 	call	10106ecc <memcpy>
10106334:	01800044 	movi	r6,1
10106338:	980b883a 	mov	r5,r19
1010633c:	e009883a 	mov	r4,fp
10106340:	01078f00 	call	101078f0 <__lshift>
10106344:	1029883a 	mov	r20,r2
10106348:	003ecc06 	br	10105e7c <_dtoa_r+0xe14>
1010634c:	00800e44 	movi	r2,57
10106350:	90809026 	beq	r18,r2,10106594 <_dtoa_r+0x152c>
10106354:	92000044 	addi	r8,r18,1
10106358:	003f1f06 	br	10105fd8 <_dtoa_r+0xf70>
1010635c:	9011883a 	mov	r8,r18
10106360:	8825883a 	mov	r18,r17
10106364:	a023883a 	mov	r17,r20
10106368:	003e2906 	br	10105c10 <_dtoa_r+0xba8>
1010636c:	002b883a 	mov	r21,zero
10106370:	0023883a 	mov	r17,zero
10106374:	003f5406 	br	101060c8 <_dtoa_r+0x1060>
10106378:	61bfffc4 	addi	r6,r12,-1
1010637c:	300490fa 	slli	r2,r6,3
10106380:	00c40474 	movhi	r3,4113
10106384:	18ffe604 	addi	r3,r3,-104
10106388:	1885883a 	add	r2,r3,r2
1010638c:	11000017 	ldw	r4,0(r2)
10106390:	11400117 	ldw	r5,4(r2)
10106394:	d8800717 	ldw	r2,28(sp)
10106398:	880f883a 	mov	r7,r17
1010639c:	d9801215 	stw	r6,72(sp)
101063a0:	800d883a 	mov	r6,r16
101063a4:	db001615 	stw	r12,88(sp)
101063a8:	15c00044 	addi	r23,r2,1
101063ac:	010c5240 	call	1010c524 <__muldf3>
101063b0:	d9401017 	ldw	r5,64(sp)
101063b4:	d9000f17 	ldw	r4,60(sp)
101063b8:	d8c01515 	stw	r3,84(sp)
101063bc:	d8801415 	stw	r2,80(sp)
101063c0:	010d5380 	call	1010d538 <__fixdfsi>
101063c4:	1009883a 	mov	r4,r2
101063c8:	1021883a 	mov	r16,r2
101063cc:	010d5b80 	call	1010d5b8 <__floatsidf>
101063d0:	d9000f17 	ldw	r4,60(sp)
101063d4:	d9401017 	ldw	r5,64(sp)
101063d8:	100d883a 	mov	r6,r2
101063dc:	180f883a 	mov	r7,r3
101063e0:	010cc3c0 	call	1010cc3c <__subdf3>
101063e4:	1829883a 	mov	r20,r3
101063e8:	d8c00717 	ldw	r3,28(sp)
101063ec:	84000c04 	addi	r16,r16,48
101063f0:	1023883a 	mov	r17,r2
101063f4:	1c000005 	stb	r16,0(r3)
101063f8:	db001617 	ldw	r12,88(sp)
101063fc:	00800044 	movi	r2,1
10106400:	60802226 	beq	r12,r2,1010648c <_dtoa_r+0x1424>
10106404:	d9c00717 	ldw	r7,28(sp)
10106408:	8805883a 	mov	r2,r17
1010640c:	b82b883a 	mov	r21,r23
10106410:	3b19883a 	add	r12,r7,r12
10106414:	6023883a 	mov	r17,r12
10106418:	a007883a 	mov	r3,r20
1010641c:	dc800f15 	stw	r18,60(sp)
10106420:	000d883a 	mov	r6,zero
10106424:	01d00934 	movhi	r7,16420
10106428:	1009883a 	mov	r4,r2
1010642c:	180b883a 	mov	r5,r3
10106430:	010c5240 	call	1010c524 <__muldf3>
10106434:	180b883a 	mov	r5,r3
10106438:	1009883a 	mov	r4,r2
1010643c:	1829883a 	mov	r20,r3
10106440:	1025883a 	mov	r18,r2
10106444:	010d5380 	call	1010d538 <__fixdfsi>
10106448:	1009883a 	mov	r4,r2
1010644c:	1021883a 	mov	r16,r2
10106450:	010d5b80 	call	1010d5b8 <__floatsidf>
10106454:	100d883a 	mov	r6,r2
10106458:	180f883a 	mov	r7,r3
1010645c:	9009883a 	mov	r4,r18
10106460:	a00b883a 	mov	r5,r20
10106464:	84000c04 	addi	r16,r16,48
10106468:	010cc3c0 	call	1010cc3c <__subdf3>
1010646c:	ad400044 	addi	r21,r21,1
10106470:	ac3fffc5 	stb	r16,-1(r21)
10106474:	ac7fea1e 	bne	r21,r17,10106420 <_dtoa_r+0x13b8>
10106478:	1023883a 	mov	r17,r2
1010647c:	d8801217 	ldw	r2,72(sp)
10106480:	dc800f17 	ldw	r18,60(sp)
10106484:	1829883a 	mov	r20,r3
10106488:	b8af883a 	add	r23,r23,r2
1010648c:	d9001417 	ldw	r4,80(sp)
10106490:	d9401517 	ldw	r5,84(sp)
10106494:	000d883a 	mov	r6,zero
10106498:	01cff834 	movhi	r7,16352
1010649c:	010b1380 	call	1010b138 <__adddf3>
101064a0:	880d883a 	mov	r6,r17
101064a4:	a00f883a 	mov	r7,r20
101064a8:	1009883a 	mov	r4,r2
101064ac:	180b883a 	mov	r5,r3
101064b0:	010c4300 	call	1010c430 <__ledf2>
101064b4:	10003e0e 	bge	r2,zero,101065b0 <_dtoa_r+0x1548>
101064b8:	d9001317 	ldw	r4,76(sp)
101064bc:	bd3fffc3 	ldbu	r20,-1(r23)
101064c0:	d9000515 	stw	r4,20(sp)
101064c4:	003d3b06 	br	101059b4 <_dtoa_r+0x94c>
101064c8:	0027883a 	mov	r19,zero
101064cc:	003f1b06 	br	1010613c <_dtoa_r+0x10d4>
101064d0:	d8800817 	ldw	r2,32(sp)
101064d4:	11e9c83a 	sub	r20,r2,r7
101064d8:	0005883a 	mov	r2,zero
101064dc:	003d5406 	br	10105a30 <_dtoa_r+0x9c8>
101064e0:	00800044 	movi	r2,1
101064e4:	003dc706 	br	10105c04 <_dtoa_r+0xb9c>
101064e8:	d8c00217 	ldw	r3,8(sp)
101064ec:	00800d84 	movi	r2,54
101064f0:	dd400a17 	ldw	r21,40(sp)
101064f4:	10c5c83a 	sub	r2,r2,r3
101064f8:	dd000817 	ldw	r20,32(sp)
101064fc:	003d4c06 	br	10105a30 <_dtoa_r+0x9c8>
10106500:	dc800f15 	stw	r18,60(sp)
10106504:	dcc01015 	stw	r19,64(sp)
10106508:	04000084 	movi	r16,2
1010650c:	003bed06 	br	101054c4 <_dtoa_r+0x45c>
10106510:	d9000617 	ldw	r4,24(sp)
10106514:	203f0d26 	beq	r4,zero,1010614c <_dtoa_r+0x10e4>
10106518:	d9800c17 	ldw	r6,48(sp)
1010651c:	01bcab0e 	bge	zero,r6,101057cc <_dtoa_r+0x764>
10106520:	d9401017 	ldw	r5,64(sp)
10106524:	d9000f17 	ldw	r4,60(sp)
10106528:	000d883a 	mov	r6,zero
1010652c:	01d00934 	movhi	r7,16420
10106530:	010c5240 	call	1010c524 <__muldf3>
10106534:	81000044 	addi	r4,r16,1
10106538:	d8800f15 	stw	r2,60(sp)
1010653c:	d8c01015 	stw	r3,64(sp)
10106540:	010d5b80 	call	1010d5b8 <__floatsidf>
10106544:	d9800f17 	ldw	r6,60(sp)
10106548:	d9c01017 	ldw	r7,64(sp)
1010654c:	1009883a 	mov	r4,r2
10106550:	180b883a 	mov	r5,r3
10106554:	010c5240 	call	1010c524 <__muldf3>
10106558:	01d00734 	movhi	r7,16412
1010655c:	000d883a 	mov	r6,zero
10106560:	1009883a 	mov	r4,r2
10106564:	180b883a 	mov	r5,r3
10106568:	010b1380 	call	1010b138 <__adddf3>
1010656c:	d9c00517 	ldw	r7,20(sp)
10106570:	047f3034 	movhi	r17,64704
10106574:	1021883a 	mov	r16,r2
10106578:	39ffffc4 	addi	r7,r7,-1
1010657c:	d9c01315 	stw	r7,76(sp)
10106580:	1c63883a 	add	r17,r3,r17
10106584:	db000c17 	ldw	r12,48(sp)
10106588:	003bea06 	br	10105534 <_dtoa_r+0x4cc>
1010658c:	dc000915 	stw	r16,36(sp)
10106590:	003e0e06 	br	10105dcc <_dtoa_r+0xd64>
10106594:	01000e44 	movi	r4,57
10106598:	8825883a 	mov	r18,r17
1010659c:	9dc00044 	addi	r23,r19,1
101065a0:	99000005 	stb	r4,0(r19)
101065a4:	a023883a 	mov	r17,r20
101065a8:	dc000915 	stw	r16,36(sp)
101065ac:	003da406 	br	10105c40 <_dtoa_r+0xbd8>
101065b0:	d9801417 	ldw	r6,80(sp)
101065b4:	d9c01517 	ldw	r7,84(sp)
101065b8:	0009883a 	mov	r4,zero
101065bc:	014ff834 	movhi	r5,16352
101065c0:	010cc3c0 	call	1010cc3c <__subdf3>
101065c4:	880d883a 	mov	r6,r17
101065c8:	a00f883a 	mov	r7,r20
101065cc:	1009883a 	mov	r4,r2
101065d0:	180b883a 	mov	r5,r3
101065d4:	010c3540 	call	1010c354 <__gedf2>
101065d8:	00bc7c0e 	bge	zero,r2,101057cc <_dtoa_r+0x764>
101065dc:	01000c04 	movi	r4,48
101065e0:	00000106 	br	101065e8 <_dtoa_r+0x1580>
101065e4:	102f883a 	mov	r23,r2
101065e8:	b8bfffc4 	addi	r2,r23,-1
101065ec:	10c00007 	ldb	r3,0(r2)
101065f0:	193ffc26 	beq	r3,r4,101065e4 <_dtoa_r+0x157c>
101065f4:	d9801317 	ldw	r6,76(sp)
101065f8:	d9800515 	stw	r6,20(sp)
101065fc:	003c4406 	br	10105710 <_dtoa_r+0x6a8>
10106600:	d9801317 	ldw	r6,76(sp)
10106604:	d9800515 	stw	r6,20(sp)
10106608:	003cea06 	br	101059b4 <_dtoa_r+0x94c>
1010660c:	dd800f17 	ldw	r22,60(sp)
10106610:	dcc01017 	ldw	r19,64(sp)
10106614:	dc801217 	ldw	r18,72(sp)
10106618:	003c6c06 	br	101057cc <_dtoa_r+0x764>
1010661c:	903e031e 	bne	r18,zero,10105e2c <_dtoa_r+0xdc4>
10106620:	003ebb06 	br	10106110 <_dtoa_r+0x10a8>
10106624:	103e6c1e 	bne	r2,zero,10105fd8 <_dtoa_r+0xf70>
10106628:	4080004c 	andi	r2,r8,1
1010662c:	103e6a26 	beq	r2,zero,10105fd8 <_dtoa_r+0xf70>
10106630:	003e6606 	br	10105fcc <_dtoa_r+0xf64>
10106634:	d8c00317 	ldw	r3,12(sp)
10106638:	00800084 	movi	r2,2
1010663c:	10c02916 	blt	r2,r3,101066e4 <_dtoa_r+0x167c>
10106640:	d9000c17 	ldw	r4,48(sp)
10106644:	003e8806 	br	10106068 <_dtoa_r+0x1000>
10106648:	04000084 	movi	r16,2
1010664c:	003b9d06 	br	101054c4 <_dtoa_r+0x45c>
10106650:	d9001317 	ldw	r4,76(sp)
10106654:	d9000515 	stw	r4,20(sp)
10106658:	003cd606 	br	101059b4 <_dtoa_r+0x94c>
1010665c:	d8801317 	ldw	r2,76(sp)
10106660:	d8800515 	stw	r2,20(sp)
10106664:	003c2a06 	br	10105710 <_dtoa_r+0x6a8>
10106668:	d9800317 	ldw	r6,12(sp)
1010666c:	00800084 	movi	r2,2
10106670:	11801516 	blt	r2,r6,101066c8 <_dtoa_r+0x1660>
10106674:	d9c00c17 	ldw	r7,48(sp)
10106678:	d9c00615 	stw	r7,24(sp)
1010667c:	003df706 	br	10105e5c <_dtoa_r+0xdf4>
10106680:	193d3926 	beq	r3,r4,10105b68 <_dtoa_r+0xb00>
10106684:	00c00f04 	movi	r3,60
10106688:	1885c83a 	sub	r2,r3,r2
1010668c:	003ddf06 	br	10105e0c <_dtoa_r+0xda4>
10106690:	e009883a 	mov	r4,fp
10106694:	e0001115 	stw	zero,68(fp)
10106698:	000b883a 	mov	r5,zero
1010669c:	01071700 	call	10107170 <_Balloc>
101066a0:	d8800715 	stw	r2,28(sp)
101066a4:	d8c00717 	ldw	r3,28(sp)
101066a8:	00bfffc4 	movi	r2,-1
101066ac:	01000044 	movi	r4,1
101066b0:	d8800c15 	stw	r2,48(sp)
101066b4:	e0c01015 	stw	r3,64(fp)
101066b8:	d9000b15 	stw	r4,44(sp)
101066bc:	d8800615 	stw	r2,24(sp)
101066c0:	d8002215 	stw	zero,136(sp)
101066c4:	003c4106 	br	101057cc <_dtoa_r+0x764>
101066c8:	d8c00c17 	ldw	r3,48(sp)
101066cc:	d8c00615 	stw	r3,24(sp)
101066d0:	003e7006 	br	10106094 <_dtoa_r+0x102c>
101066d4:	04400044 	movi	r17,1
101066d8:	003b2006 	br	1010535c <_dtoa_r+0x2f4>
101066dc:	000b883a 	mov	r5,zero
101066e0:	003b3d06 	br	101053d8 <_dtoa_r+0x370>
101066e4:	d8800c17 	ldw	r2,48(sp)
101066e8:	d8800615 	stw	r2,24(sp)
101066ec:	003e6906 	br	10106094 <_dtoa_r+0x102c>

101066f0 <__sflags>:
101066f0:	28800007 	ldb	r2,0(r5)
101066f4:	00c01c84 	movi	r3,114
101066f8:	10c02426 	beq	r2,r3,1010678c <__sflags+0x9c>
101066fc:	00c01dc4 	movi	r3,119
10106700:	10c01e26 	beq	r2,r3,1010677c <__sflags+0x8c>
10106704:	00c01844 	movi	r3,97
10106708:	10c00426 	beq	r2,r3,1010671c <__sflags+0x2c>
1010670c:	00800584 	movi	r2,22
10106710:	20800015 	stw	r2,0(r4)
10106714:	0005883a 	mov	r2,zero
10106718:	f800283a 	ret
1010671c:	02c08204 	movi	r11,520
10106720:	01000044 	movi	r4,1
10106724:	00804204 	movi	r2,264
10106728:	01c00ac4 	movi	r7,43
1010672c:	02bff8c4 	movi	r10,-29
10106730:	027fff04 	movi	r9,-4
10106734:	02001e04 	movi	r8,120
10106738:	29400044 	addi	r5,r5,1
1010673c:	28c00007 	ldb	r3,0(r5)
10106740:	18000626 	beq	r3,zero,1010675c <__sflags+0x6c>
10106744:	19c00826 	beq	r3,r7,10106768 <__sflags+0x78>
10106748:	1a3ffb1e 	bne	r3,r8,10106738 <__sflags+0x48>
1010674c:	29400044 	addi	r5,r5,1
10106750:	28c00007 	ldb	r3,0(r5)
10106754:	21020014 	ori	r4,r4,2048
10106758:	183ffa1e 	bne	r3,zero,10106744 <__sflags+0x54>
1010675c:	22c8b03a 	or	r4,r4,r11
10106760:	31000015 	stw	r4,0(r6)
10106764:	f800283a 	ret
10106768:	1284703a 	and	r2,r2,r10
1010676c:	2248703a 	and	r4,r4,r9
10106770:	10800414 	ori	r2,r2,16
10106774:	21000094 	ori	r4,r4,2
10106778:	003fef06 	br	10106738 <__sflags+0x48>
1010677c:	02c18004 	movi	r11,1536
10106780:	01000044 	movi	r4,1
10106784:	00800204 	movi	r2,8
10106788:	003fe706 	br	10106728 <__sflags+0x38>
1010678c:	0017883a 	mov	r11,zero
10106790:	0009883a 	mov	r4,zero
10106794:	00800104 	movi	r2,4
10106798:	003fe306 	br	10106728 <__sflags+0x38>

1010679c <__sfvwrite_r>:
1010679c:	30800217 	ldw	r2,8(r6)
101067a0:	10006726 	beq	r2,zero,10106940 <__sfvwrite_r+0x1a4>
101067a4:	28c0030b 	ldhu	r3,12(r5)
101067a8:	defff404 	addi	sp,sp,-48
101067ac:	dd400715 	stw	r21,28(sp)
101067b0:	dd000615 	stw	r20,24(sp)
101067b4:	dc000215 	stw	r16,8(sp)
101067b8:	dfc00b15 	stw	ra,44(sp)
101067bc:	df000a15 	stw	fp,40(sp)
101067c0:	ddc00915 	stw	r23,36(sp)
101067c4:	dd800815 	stw	r22,32(sp)
101067c8:	dcc00515 	stw	r19,20(sp)
101067cc:	dc800415 	stw	r18,16(sp)
101067d0:	dc400315 	stw	r17,12(sp)
101067d4:	1880020c 	andi	r2,r3,8
101067d8:	2821883a 	mov	r16,r5
101067dc:	202b883a 	mov	r21,r4
101067e0:	3029883a 	mov	r20,r6
101067e4:	10002726 	beq	r2,zero,10106884 <__sfvwrite_r+0xe8>
101067e8:	28800417 	ldw	r2,16(r5)
101067ec:	10002526 	beq	r2,zero,10106884 <__sfvwrite_r+0xe8>
101067f0:	1880008c 	andi	r2,r3,2
101067f4:	a4400017 	ldw	r17,0(r20)
101067f8:	10002a26 	beq	r2,zero,101068a4 <__sfvwrite_r+0x108>
101067fc:	05a00034 	movhi	r22,32768
10106800:	0027883a 	mov	r19,zero
10106804:	0025883a 	mov	r18,zero
10106808:	b5bf0004 	addi	r22,r22,-1024
1010680c:	980d883a 	mov	r6,r19
10106810:	a809883a 	mov	r4,r21
10106814:	90004626 	beq	r18,zero,10106930 <__sfvwrite_r+0x194>
10106818:	900f883a 	mov	r7,r18
1010681c:	b480022e 	bgeu	r22,r18,10106828 <__sfvwrite_r+0x8c>
10106820:	01e00034 	movhi	r7,32768
10106824:	39ff0004 	addi	r7,r7,-1024
10106828:	80800917 	ldw	r2,36(r16)
1010682c:	81400717 	ldw	r5,28(r16)
10106830:	103ee83a 	callr	r2
10106834:	0080570e 	bge	zero,r2,10106994 <__sfvwrite_r+0x1f8>
10106838:	a0c00217 	ldw	r3,8(r20)
1010683c:	98a7883a 	add	r19,r19,r2
10106840:	90a5c83a 	sub	r18,r18,r2
10106844:	1885c83a 	sub	r2,r3,r2
10106848:	a0800215 	stw	r2,8(r20)
1010684c:	103fef1e 	bne	r2,zero,1010680c <__sfvwrite_r+0x70>
10106850:	0005883a 	mov	r2,zero
10106854:	dfc00b17 	ldw	ra,44(sp)
10106858:	df000a17 	ldw	fp,40(sp)
1010685c:	ddc00917 	ldw	r23,36(sp)
10106860:	dd800817 	ldw	r22,32(sp)
10106864:	dd400717 	ldw	r21,28(sp)
10106868:	dd000617 	ldw	r20,24(sp)
1010686c:	dcc00517 	ldw	r19,20(sp)
10106870:	dc800417 	ldw	r18,16(sp)
10106874:	dc400317 	ldw	r17,12(sp)
10106878:	dc000217 	ldw	r16,8(sp)
1010687c:	dec00c04 	addi	sp,sp,48
10106880:	f800283a 	ret
10106884:	800b883a 	mov	r5,r16
10106888:	a809883a 	mov	r4,r21
1010688c:	0104cc00 	call	10104cc0 <__swsetup_r>
10106890:	1000eb1e 	bne	r2,zero,10106c40 <__sfvwrite_r+0x4a4>
10106894:	80c0030b 	ldhu	r3,12(r16)
10106898:	a4400017 	ldw	r17,0(r20)
1010689c:	1880008c 	andi	r2,r3,2
101068a0:	103fd61e 	bne	r2,zero,101067fc <__sfvwrite_r+0x60>
101068a4:	1880004c 	andi	r2,r3,1
101068a8:	10003f1e 	bne	r2,zero,101069a8 <__sfvwrite_r+0x20c>
101068ac:	0039883a 	mov	fp,zero
101068b0:	0025883a 	mov	r18,zero
101068b4:	90001a26 	beq	r18,zero,10106920 <__sfvwrite_r+0x184>
101068b8:	1880800c 	andi	r2,r3,512
101068bc:	84c00217 	ldw	r19,8(r16)
101068c0:	10002126 	beq	r2,zero,10106948 <__sfvwrite_r+0x1ac>
101068c4:	982f883a 	mov	r23,r19
101068c8:	94c09336 	bltu	r18,r19,10106b18 <__sfvwrite_r+0x37c>
101068cc:	1881200c 	andi	r2,r3,1152
101068d0:	10009e1e 	bne	r2,zero,10106b4c <__sfvwrite_r+0x3b0>
101068d4:	81000017 	ldw	r4,0(r16)
101068d8:	b80d883a 	mov	r6,r23
101068dc:	e00b883a 	mov	r5,fp
101068e0:	01070140 	call	10107014 <memmove>
101068e4:	80c00217 	ldw	r3,8(r16)
101068e8:	81000017 	ldw	r4,0(r16)
101068ec:	9005883a 	mov	r2,r18
101068f0:	1ce7c83a 	sub	r19,r3,r19
101068f4:	25cf883a 	add	r7,r4,r23
101068f8:	84c00215 	stw	r19,8(r16)
101068fc:	81c00015 	stw	r7,0(r16)
10106900:	a0c00217 	ldw	r3,8(r20)
10106904:	e0b9883a 	add	fp,fp,r2
10106908:	90a5c83a 	sub	r18,r18,r2
1010690c:	18a7c83a 	sub	r19,r3,r2
10106910:	a4c00215 	stw	r19,8(r20)
10106914:	983fce26 	beq	r19,zero,10106850 <__sfvwrite_r+0xb4>
10106918:	80c0030b 	ldhu	r3,12(r16)
1010691c:	903fe61e 	bne	r18,zero,101068b8 <__sfvwrite_r+0x11c>
10106920:	8f000017 	ldw	fp,0(r17)
10106924:	8c800117 	ldw	r18,4(r17)
10106928:	8c400204 	addi	r17,r17,8
1010692c:	003fe106 	br	101068b4 <__sfvwrite_r+0x118>
10106930:	8cc00017 	ldw	r19,0(r17)
10106934:	8c800117 	ldw	r18,4(r17)
10106938:	8c400204 	addi	r17,r17,8
1010693c:	003fb306 	br	1010680c <__sfvwrite_r+0x70>
10106940:	0005883a 	mov	r2,zero
10106944:	f800283a 	ret
10106948:	81000017 	ldw	r4,0(r16)
1010694c:	80800417 	ldw	r2,16(r16)
10106950:	11005736 	bltu	r2,r4,10106ab0 <__sfvwrite_r+0x314>
10106954:	85c00517 	ldw	r23,20(r16)
10106958:	95c05536 	bltu	r18,r23,10106ab0 <__sfvwrite_r+0x314>
1010695c:	00a00034 	movhi	r2,32768
10106960:	10bfffc4 	addi	r2,r2,-1
10106964:	9009883a 	mov	r4,r18
10106968:	1480012e 	bgeu	r2,r18,10106970 <__sfvwrite_r+0x1d4>
1010696c:	1009883a 	mov	r4,r2
10106970:	b80b883a 	mov	r5,r23
10106974:	010af840 	call	1010af84 <__divsi3>
10106978:	15cf383a 	mul	r7,r2,r23
1010697c:	81400717 	ldw	r5,28(r16)
10106980:	80800917 	ldw	r2,36(r16)
10106984:	e00d883a 	mov	r6,fp
10106988:	a809883a 	mov	r4,r21
1010698c:	103ee83a 	callr	r2
10106990:	00bfdb16 	blt	zero,r2,10106900 <__sfvwrite_r+0x164>
10106994:	8080030b 	ldhu	r2,12(r16)
10106998:	10801014 	ori	r2,r2,64
1010699c:	8080030d 	sth	r2,12(r16)
101069a0:	00bfffc4 	movi	r2,-1
101069a4:	003fab06 	br	10106854 <__sfvwrite_r+0xb8>
101069a8:	0027883a 	mov	r19,zero
101069ac:	0011883a 	mov	r8,zero
101069b0:	0039883a 	mov	fp,zero
101069b4:	0025883a 	mov	r18,zero
101069b8:	90001f26 	beq	r18,zero,10106a38 <__sfvwrite_r+0x29c>
101069bc:	40005a26 	beq	r8,zero,10106b28 <__sfvwrite_r+0x38c>
101069c0:	982d883a 	mov	r22,r19
101069c4:	94c0012e 	bgeu	r18,r19,101069cc <__sfvwrite_r+0x230>
101069c8:	902d883a 	mov	r22,r18
101069cc:	81000017 	ldw	r4,0(r16)
101069d0:	80800417 	ldw	r2,16(r16)
101069d4:	b02f883a 	mov	r23,r22
101069d8:	81c00517 	ldw	r7,20(r16)
101069dc:	1100032e 	bgeu	r2,r4,101069ec <__sfvwrite_r+0x250>
101069e0:	80c00217 	ldw	r3,8(r16)
101069e4:	38c7883a 	add	r3,r7,r3
101069e8:	1d801816 	blt	r3,r22,10106a4c <__sfvwrite_r+0x2b0>
101069ec:	b1c03e16 	blt	r22,r7,10106ae8 <__sfvwrite_r+0x34c>
101069f0:	80800917 	ldw	r2,36(r16)
101069f4:	81400717 	ldw	r5,28(r16)
101069f8:	e00d883a 	mov	r6,fp
101069fc:	da000115 	stw	r8,4(sp)
10106a00:	a809883a 	mov	r4,r21
10106a04:	103ee83a 	callr	r2
10106a08:	102f883a 	mov	r23,r2
10106a0c:	da000117 	ldw	r8,4(sp)
10106a10:	00bfe00e 	bge	zero,r2,10106994 <__sfvwrite_r+0x1f8>
10106a14:	9de7c83a 	sub	r19,r19,r23
10106a18:	98001f26 	beq	r19,zero,10106a98 <__sfvwrite_r+0x2fc>
10106a1c:	a0800217 	ldw	r2,8(r20)
10106a20:	e5f9883a 	add	fp,fp,r23
10106a24:	95e5c83a 	sub	r18,r18,r23
10106a28:	15efc83a 	sub	r23,r2,r23
10106a2c:	a5c00215 	stw	r23,8(r20)
10106a30:	b83f8726 	beq	r23,zero,10106850 <__sfvwrite_r+0xb4>
10106a34:	903fe11e 	bne	r18,zero,101069bc <__sfvwrite_r+0x220>
10106a38:	8f000017 	ldw	fp,0(r17)
10106a3c:	8c800117 	ldw	r18,4(r17)
10106a40:	0011883a 	mov	r8,zero
10106a44:	8c400204 	addi	r17,r17,8
10106a48:	003fdb06 	br	101069b8 <__sfvwrite_r+0x21c>
10106a4c:	180d883a 	mov	r6,r3
10106a50:	e00b883a 	mov	r5,fp
10106a54:	da000115 	stw	r8,4(sp)
10106a58:	d8c00015 	stw	r3,0(sp)
10106a5c:	01070140 	call	10107014 <memmove>
10106a60:	d8c00017 	ldw	r3,0(sp)
10106a64:	80800017 	ldw	r2,0(r16)
10106a68:	800b883a 	mov	r5,r16
10106a6c:	a809883a 	mov	r4,r21
10106a70:	10c5883a 	add	r2,r2,r3
10106a74:	80800015 	stw	r2,0(r16)
10106a78:	d8c00015 	stw	r3,0(sp)
10106a7c:	01007cc0 	call	101007cc <_fflush_r>
10106a80:	d8c00017 	ldw	r3,0(sp)
10106a84:	da000117 	ldw	r8,4(sp)
10106a88:	103fc21e 	bne	r2,zero,10106994 <__sfvwrite_r+0x1f8>
10106a8c:	182f883a 	mov	r23,r3
10106a90:	9de7c83a 	sub	r19,r19,r23
10106a94:	983fe11e 	bne	r19,zero,10106a1c <__sfvwrite_r+0x280>
10106a98:	800b883a 	mov	r5,r16
10106a9c:	a809883a 	mov	r4,r21
10106aa0:	01007cc0 	call	101007cc <_fflush_r>
10106aa4:	103fbb1e 	bne	r2,zero,10106994 <__sfvwrite_r+0x1f8>
10106aa8:	0011883a 	mov	r8,zero
10106aac:	003fdb06 	br	10106a1c <__sfvwrite_r+0x280>
10106ab0:	94c0012e 	bgeu	r18,r19,10106ab8 <__sfvwrite_r+0x31c>
10106ab4:	9027883a 	mov	r19,r18
10106ab8:	980d883a 	mov	r6,r19
10106abc:	e00b883a 	mov	r5,fp
10106ac0:	01070140 	call	10107014 <memmove>
10106ac4:	80800217 	ldw	r2,8(r16)
10106ac8:	80c00017 	ldw	r3,0(r16)
10106acc:	14c5c83a 	sub	r2,r2,r19
10106ad0:	1cc7883a 	add	r3,r3,r19
10106ad4:	80800215 	stw	r2,8(r16)
10106ad8:	80c00015 	stw	r3,0(r16)
10106adc:	10004326 	beq	r2,zero,10106bec <__sfvwrite_r+0x450>
10106ae0:	9805883a 	mov	r2,r19
10106ae4:	003f8606 	br	10106900 <__sfvwrite_r+0x164>
10106ae8:	b00d883a 	mov	r6,r22
10106aec:	e00b883a 	mov	r5,fp
10106af0:	da000115 	stw	r8,4(sp)
10106af4:	01070140 	call	10107014 <memmove>
10106af8:	80800217 	ldw	r2,8(r16)
10106afc:	80c00017 	ldw	r3,0(r16)
10106b00:	da000117 	ldw	r8,4(sp)
10106b04:	1585c83a 	sub	r2,r2,r22
10106b08:	1dad883a 	add	r22,r3,r22
10106b0c:	80800215 	stw	r2,8(r16)
10106b10:	85800015 	stw	r22,0(r16)
10106b14:	003fbf06 	br	10106a14 <__sfvwrite_r+0x278>
10106b18:	81000017 	ldw	r4,0(r16)
10106b1c:	9027883a 	mov	r19,r18
10106b20:	902f883a 	mov	r23,r18
10106b24:	003f6c06 	br	101068d8 <__sfvwrite_r+0x13c>
10106b28:	900d883a 	mov	r6,r18
10106b2c:	01400284 	movi	r5,10
10106b30:	e009883a 	mov	r4,fp
10106b34:	0106de80 	call	10106de8 <memchr>
10106b38:	10003e26 	beq	r2,zero,10106c34 <__sfvwrite_r+0x498>
10106b3c:	10800044 	addi	r2,r2,1
10106b40:	1727c83a 	sub	r19,r2,fp
10106b44:	02000044 	movi	r8,1
10106b48:	003f9d06 	br	101069c0 <__sfvwrite_r+0x224>
10106b4c:	80800517 	ldw	r2,20(r16)
10106b50:	81400417 	ldw	r5,16(r16)
10106b54:	81c00017 	ldw	r7,0(r16)
10106b58:	10a7883a 	add	r19,r2,r2
10106b5c:	9885883a 	add	r2,r19,r2
10106b60:	1026d7fa 	srli	r19,r2,31
10106b64:	396dc83a 	sub	r22,r7,r5
10106b68:	b1000044 	addi	r4,r22,1
10106b6c:	9885883a 	add	r2,r19,r2
10106b70:	1027d07a 	srai	r19,r2,1
10106b74:	2485883a 	add	r2,r4,r18
10106b78:	980d883a 	mov	r6,r19
10106b7c:	9880022e 	bgeu	r19,r2,10106b88 <__sfvwrite_r+0x3ec>
10106b80:	1027883a 	mov	r19,r2
10106b84:	100d883a 	mov	r6,r2
10106b88:	18c1000c 	andi	r3,r3,1024
10106b8c:	18001c26 	beq	r3,zero,10106c00 <__sfvwrite_r+0x464>
10106b90:	300b883a 	mov	r5,r6
10106b94:	a809883a 	mov	r4,r21
10106b98:	0101aa40 	call	10101aa4 <_malloc_r>
10106b9c:	102f883a 	mov	r23,r2
10106ba0:	10002926 	beq	r2,zero,10106c48 <__sfvwrite_r+0x4ac>
10106ba4:	81400417 	ldw	r5,16(r16)
10106ba8:	b00d883a 	mov	r6,r22
10106bac:	1009883a 	mov	r4,r2
10106bb0:	0106ecc0 	call	10106ecc <memcpy>
10106bb4:	8080030b 	ldhu	r2,12(r16)
10106bb8:	00fedfc4 	movi	r3,-1153
10106bbc:	10c4703a 	and	r2,r2,r3
10106bc0:	10802014 	ori	r2,r2,128
10106bc4:	8080030d 	sth	r2,12(r16)
10106bc8:	bd89883a 	add	r4,r23,r22
10106bcc:	9d8fc83a 	sub	r7,r19,r22
10106bd0:	85c00415 	stw	r23,16(r16)
10106bd4:	84c00515 	stw	r19,20(r16)
10106bd8:	81000015 	stw	r4,0(r16)
10106bdc:	9027883a 	mov	r19,r18
10106be0:	81c00215 	stw	r7,8(r16)
10106be4:	902f883a 	mov	r23,r18
10106be8:	003f3b06 	br	101068d8 <__sfvwrite_r+0x13c>
10106bec:	800b883a 	mov	r5,r16
10106bf0:	a809883a 	mov	r4,r21
10106bf4:	01007cc0 	call	101007cc <_fflush_r>
10106bf8:	103fb926 	beq	r2,zero,10106ae0 <__sfvwrite_r+0x344>
10106bfc:	003f6506 	br	10106994 <__sfvwrite_r+0x1f8>
10106c00:	a809883a 	mov	r4,r21
10106c04:	01081cc0 	call	101081cc <_realloc_r>
10106c08:	102f883a 	mov	r23,r2
10106c0c:	103fee1e 	bne	r2,zero,10106bc8 <__sfvwrite_r+0x42c>
10106c10:	81400417 	ldw	r5,16(r16)
10106c14:	a809883a 	mov	r4,r21
10106c18:	0100e740 	call	10100e74 <_free_r>
10106c1c:	8080030b 	ldhu	r2,12(r16)
10106c20:	00ffdfc4 	movi	r3,-129
10106c24:	1884703a 	and	r2,r3,r2
10106c28:	00c00304 	movi	r3,12
10106c2c:	a8c00015 	stw	r3,0(r21)
10106c30:	003f5906 	br	10106998 <__sfvwrite_r+0x1fc>
10106c34:	94c00044 	addi	r19,r18,1
10106c38:	02000044 	movi	r8,1
10106c3c:	003f6006 	br	101069c0 <__sfvwrite_r+0x224>
10106c40:	00bfffc4 	movi	r2,-1
10106c44:	003f0306 	br	10106854 <__sfvwrite_r+0xb8>
10106c48:	00800304 	movi	r2,12
10106c4c:	a8800015 	stw	r2,0(r21)
10106c50:	8080030b 	ldhu	r2,12(r16)
10106c54:	003f5006 	br	10106998 <__sfvwrite_r+0x1fc>

10106c58 <_isatty_r>:
10106c58:	defffd04 	addi	sp,sp,-12
10106c5c:	dc000015 	stw	r16,0(sp)
10106c60:	04040474 	movhi	r16,4113
10106c64:	dc400115 	stw	r17,4(sp)
10106c68:	840de404 	addi	r16,r16,14224
10106c6c:	2023883a 	mov	r17,r4
10106c70:	2809883a 	mov	r4,r5
10106c74:	dfc00215 	stw	ra,8(sp)
10106c78:	80000015 	stw	zero,0(r16)
10106c7c:	010dca00 	call	1010dca0 <isatty>
10106c80:	00ffffc4 	movi	r3,-1
10106c84:	10c00526 	beq	r2,r3,10106c9c <_isatty_r+0x44>
10106c88:	dfc00217 	ldw	ra,8(sp)
10106c8c:	dc400117 	ldw	r17,4(sp)
10106c90:	dc000017 	ldw	r16,0(sp)
10106c94:	dec00304 	addi	sp,sp,12
10106c98:	f800283a 	ret
10106c9c:	80c00017 	ldw	r3,0(r16)
10106ca0:	183ff926 	beq	r3,zero,10106c88 <_isatty_r+0x30>
10106ca4:	88c00015 	stw	r3,0(r17)
10106ca8:	003ff706 	br	10106c88 <_isatty_r+0x30>

10106cac <_setlocale_r>:
10106cac:	30001b26 	beq	r6,zero,10106d1c <_setlocale_r+0x70>
10106cb0:	01440474 	movhi	r5,4113
10106cb4:	defffe04 	addi	sp,sp,-8
10106cb8:	297fcc04 	addi	r5,r5,-208
10106cbc:	3009883a 	mov	r4,r6
10106cc0:	dc000015 	stw	r16,0(sp)
10106cc4:	dfc00115 	stw	ra,4(sp)
10106cc8:	3021883a 	mov	r16,r6
10106ccc:	01087a40 	call	101087a4 <strcmp>
10106cd0:	1000061e 	bne	r2,zero,10106cec <_setlocale_r+0x40>
10106cd4:	00840474 	movhi	r2,4113
10106cd8:	10bfad04 	addi	r2,r2,-332
10106cdc:	dfc00117 	ldw	ra,4(sp)
10106ce0:	dc000017 	ldw	r16,0(sp)
10106ce4:	dec00204 	addi	sp,sp,8
10106ce8:	f800283a 	ret
10106cec:	01440474 	movhi	r5,4113
10106cf0:	297fad04 	addi	r5,r5,-332
10106cf4:	8009883a 	mov	r4,r16
10106cf8:	01087a40 	call	101087a4 <strcmp>
10106cfc:	103ff526 	beq	r2,zero,10106cd4 <_setlocale_r+0x28>
10106d00:	01440474 	movhi	r5,4113
10106d04:	297fb704 	addi	r5,r5,-292
10106d08:	8009883a 	mov	r4,r16
10106d0c:	01087a40 	call	101087a4 <strcmp>
10106d10:	103ff026 	beq	r2,zero,10106cd4 <_setlocale_r+0x28>
10106d14:	0005883a 	mov	r2,zero
10106d18:	003ff006 	br	10106cdc <_setlocale_r+0x30>
10106d1c:	00840474 	movhi	r2,4113
10106d20:	10bfad04 	addi	r2,r2,-332
10106d24:	f800283a 	ret

10106d28 <__locale_charset>:
10106d28:	00840474 	movhi	r2,4113
10106d2c:	10828004 	addi	r2,r2,2560
10106d30:	f800283a 	ret

10106d34 <__locale_mb_cur_max>:
10106d34:	00840474 	movhi	r2,4113
10106d38:	10871c04 	addi	r2,r2,7280
10106d3c:	10800017 	ldw	r2,0(r2)
10106d40:	f800283a 	ret

10106d44 <__locale_msgcharset>:
10106d44:	00840474 	movhi	r2,4113
10106d48:	10827804 	addi	r2,r2,2528
10106d4c:	f800283a 	ret

10106d50 <__locale_cjk_lang>:
10106d50:	0005883a 	mov	r2,zero
10106d54:	f800283a 	ret

10106d58 <_localeconv_r>:
10106d58:	00840474 	movhi	r2,4113
10106d5c:	10828804 	addi	r2,r2,2592
10106d60:	f800283a 	ret

10106d64 <setlocale>:
10106d64:	00840474 	movhi	r2,4113
10106d68:	10871904 	addi	r2,r2,7268
10106d6c:	280d883a 	mov	r6,r5
10106d70:	200b883a 	mov	r5,r4
10106d74:	11000017 	ldw	r4,0(r2)
10106d78:	0106cac1 	jmpi	10106cac <_setlocale_r>

10106d7c <localeconv>:
10106d7c:	00840474 	movhi	r2,4113
10106d80:	10828804 	addi	r2,r2,2592
10106d84:	f800283a 	ret

10106d88 <_lseek_r>:
10106d88:	defffd04 	addi	sp,sp,-12
10106d8c:	2805883a 	mov	r2,r5
10106d90:	dc000015 	stw	r16,0(sp)
10106d94:	04040474 	movhi	r16,4113
10106d98:	dc400115 	stw	r17,4(sp)
10106d9c:	300b883a 	mov	r5,r6
10106da0:	840de404 	addi	r16,r16,14224
10106da4:	2023883a 	mov	r17,r4
10106da8:	380d883a 	mov	r6,r7
10106dac:	1009883a 	mov	r4,r2
10106db0:	dfc00215 	stw	ra,8(sp)
10106db4:	80000015 	stw	zero,0(r16)
10106db8:	010de6c0 	call	1010de6c <lseek>
10106dbc:	00ffffc4 	movi	r3,-1
10106dc0:	10c00526 	beq	r2,r3,10106dd8 <_lseek_r+0x50>
10106dc4:	dfc00217 	ldw	ra,8(sp)
10106dc8:	dc400117 	ldw	r17,4(sp)
10106dcc:	dc000017 	ldw	r16,0(sp)
10106dd0:	dec00304 	addi	sp,sp,12
10106dd4:	f800283a 	ret
10106dd8:	80c00017 	ldw	r3,0(r16)
10106ddc:	183ff926 	beq	r3,zero,10106dc4 <_lseek_r+0x3c>
10106de0:	88c00015 	stw	r3,0(r17)
10106de4:	003ff706 	br	10106dc4 <_lseek_r+0x3c>

10106de8 <memchr>:
10106de8:	208000cc 	andi	r2,r4,3
10106dec:	280f883a 	mov	r7,r5
10106df0:	10003426 	beq	r2,zero,10106ec4 <memchr+0xdc>
10106df4:	30bfffc4 	addi	r2,r6,-1
10106df8:	30001a26 	beq	r6,zero,10106e64 <memchr+0x7c>
10106dfc:	20c00003 	ldbu	r3,0(r4)
10106e00:	29803fcc 	andi	r6,r5,255
10106e04:	30c0051e 	bne	r6,r3,10106e1c <memchr+0x34>
10106e08:	00001806 	br	10106e6c <memchr+0x84>
10106e0c:	10001526 	beq	r2,zero,10106e64 <memchr+0x7c>
10106e10:	20c00003 	ldbu	r3,0(r4)
10106e14:	10bfffc4 	addi	r2,r2,-1
10106e18:	30c01426 	beq	r6,r3,10106e6c <memchr+0x84>
10106e1c:	21000044 	addi	r4,r4,1
10106e20:	20c000cc 	andi	r3,r4,3
10106e24:	183ff91e 	bne	r3,zero,10106e0c <memchr+0x24>
10106e28:	020000c4 	movi	r8,3
10106e2c:	40801136 	bltu	r8,r2,10106e74 <memchr+0x8c>
10106e30:	10000c26 	beq	r2,zero,10106e64 <memchr+0x7c>
10106e34:	20c00003 	ldbu	r3,0(r4)
10106e38:	29403fcc 	andi	r5,r5,255
10106e3c:	28c00b26 	beq	r5,r3,10106e6c <memchr+0x84>
10106e40:	20c00044 	addi	r3,r4,1
10106e44:	39803fcc 	andi	r6,r7,255
10106e48:	2089883a 	add	r4,r4,r2
10106e4c:	00000306 	br	10106e5c <memchr+0x74>
10106e50:	18c00044 	addi	r3,r3,1
10106e54:	197fffc3 	ldbu	r5,-1(r3)
10106e58:	31400526 	beq	r6,r5,10106e70 <memchr+0x88>
10106e5c:	1805883a 	mov	r2,r3
10106e60:	20fffb1e 	bne	r4,r3,10106e50 <memchr+0x68>
10106e64:	0005883a 	mov	r2,zero
10106e68:	f800283a 	ret
10106e6c:	2005883a 	mov	r2,r4
10106e70:	f800283a 	ret
10106e74:	28c03fcc 	andi	r3,r5,255
10106e78:	1812923a 	slli	r9,r3,8
10106e7c:	02ffbff4 	movhi	r11,65279
10106e80:	02a02074 	movhi	r10,32897
10106e84:	48d2b03a 	or	r9,r9,r3
10106e88:	4806943a 	slli	r3,r9,16
10106e8c:	5affbfc4 	addi	r11,r11,-257
10106e90:	52a02004 	addi	r10,r10,-32640
10106e94:	48d2b03a 	or	r9,r9,r3
10106e98:	20c00017 	ldw	r3,0(r4)
10106e9c:	48c6f03a 	xor	r3,r9,r3
10106ea0:	1acd883a 	add	r6,r3,r11
10106ea4:	00c6303a 	nor	r3,zero,r3
10106ea8:	30c6703a 	and	r3,r6,r3
10106eac:	1a86703a 	and	r3,r3,r10
10106eb0:	183fe01e 	bne	r3,zero,10106e34 <memchr+0x4c>
10106eb4:	10bfff04 	addi	r2,r2,-4
10106eb8:	21000104 	addi	r4,r4,4
10106ebc:	40bff636 	bltu	r8,r2,10106e98 <memchr+0xb0>
10106ec0:	003fdb06 	br	10106e30 <memchr+0x48>
10106ec4:	3005883a 	mov	r2,r6
10106ec8:	003fd706 	br	10106e28 <memchr+0x40>

10106ecc <memcpy>:
10106ecc:	defffd04 	addi	sp,sp,-12
10106ed0:	dfc00215 	stw	ra,8(sp)
10106ed4:	dc400115 	stw	r17,4(sp)
10106ed8:	dc000015 	stw	r16,0(sp)
10106edc:	00c003c4 	movi	r3,15
10106ee0:	2005883a 	mov	r2,r4
10106ee4:	1980452e 	bgeu	r3,r6,10106ffc <memcpy+0x130>
10106ee8:	2906b03a 	or	r3,r5,r4
10106eec:	18c000cc 	andi	r3,r3,3
10106ef0:	1800441e 	bne	r3,zero,10107004 <memcpy+0x138>
10106ef4:	347ffc04 	addi	r17,r6,-16
10106ef8:	8822d13a 	srli	r17,r17,4
10106efc:	28c00104 	addi	r3,r5,4
10106f00:	23400104 	addi	r13,r4,4
10106f04:	8820913a 	slli	r16,r17,4
10106f08:	2b000204 	addi	r12,r5,8
10106f0c:	22c00204 	addi	r11,r4,8
10106f10:	84000504 	addi	r16,r16,20
10106f14:	2a800304 	addi	r10,r5,12
10106f18:	22400304 	addi	r9,r4,12
10106f1c:	2c21883a 	add	r16,r5,r16
10106f20:	2811883a 	mov	r8,r5
10106f24:	200f883a 	mov	r7,r4
10106f28:	41000017 	ldw	r4,0(r8)
10106f2c:	1fc00017 	ldw	ra,0(r3)
10106f30:	63c00017 	ldw	r15,0(r12)
10106f34:	39000015 	stw	r4,0(r7)
10106f38:	53800017 	ldw	r14,0(r10)
10106f3c:	6fc00015 	stw	ra,0(r13)
10106f40:	5bc00015 	stw	r15,0(r11)
10106f44:	4b800015 	stw	r14,0(r9)
10106f48:	18c00404 	addi	r3,r3,16
10106f4c:	39c00404 	addi	r7,r7,16
10106f50:	42000404 	addi	r8,r8,16
10106f54:	6b400404 	addi	r13,r13,16
10106f58:	63000404 	addi	r12,r12,16
10106f5c:	5ac00404 	addi	r11,r11,16
10106f60:	52800404 	addi	r10,r10,16
10106f64:	4a400404 	addi	r9,r9,16
10106f68:	1c3fef1e 	bne	r3,r16,10106f28 <memcpy+0x5c>
10106f6c:	89c00044 	addi	r7,r17,1
10106f70:	380e913a 	slli	r7,r7,4
10106f74:	310003cc 	andi	r4,r6,15
10106f78:	02c000c4 	movi	r11,3
10106f7c:	11c7883a 	add	r3,r2,r7
10106f80:	29cb883a 	add	r5,r5,r7
10106f84:	5900212e 	bgeu	r11,r4,1010700c <memcpy+0x140>
10106f88:	1813883a 	mov	r9,r3
10106f8c:	2811883a 	mov	r8,r5
10106f90:	200f883a 	mov	r7,r4
10106f94:	42800017 	ldw	r10,0(r8)
10106f98:	4a400104 	addi	r9,r9,4
10106f9c:	39ffff04 	addi	r7,r7,-4
10106fa0:	4abfff15 	stw	r10,-4(r9)
10106fa4:	42000104 	addi	r8,r8,4
10106fa8:	59fffa36 	bltu	r11,r7,10106f94 <memcpy+0xc8>
10106fac:	213fff04 	addi	r4,r4,-4
10106fb0:	2008d0ba 	srli	r4,r4,2
10106fb4:	318000cc 	andi	r6,r6,3
10106fb8:	21000044 	addi	r4,r4,1
10106fbc:	2109883a 	add	r4,r4,r4
10106fc0:	2109883a 	add	r4,r4,r4
10106fc4:	1907883a 	add	r3,r3,r4
10106fc8:	290b883a 	add	r5,r5,r4
10106fcc:	30000626 	beq	r6,zero,10106fe8 <memcpy+0x11c>
10106fd0:	198d883a 	add	r6,r3,r6
10106fd4:	29c00003 	ldbu	r7,0(r5)
10106fd8:	18c00044 	addi	r3,r3,1
10106fdc:	29400044 	addi	r5,r5,1
10106fe0:	19ffffc5 	stb	r7,-1(r3)
10106fe4:	19bffb1e 	bne	r3,r6,10106fd4 <memcpy+0x108>
10106fe8:	dfc00217 	ldw	ra,8(sp)
10106fec:	dc400117 	ldw	r17,4(sp)
10106ff0:	dc000017 	ldw	r16,0(sp)
10106ff4:	dec00304 	addi	sp,sp,12
10106ff8:	f800283a 	ret
10106ffc:	2007883a 	mov	r3,r4
10107000:	003ff206 	br	10106fcc <memcpy+0x100>
10107004:	2007883a 	mov	r3,r4
10107008:	003ff106 	br	10106fd0 <memcpy+0x104>
1010700c:	200d883a 	mov	r6,r4
10107010:	003fee06 	br	10106fcc <memcpy+0x100>

10107014 <memmove>:
10107014:	2005883a 	mov	r2,r4
10107018:	29000b2e 	bgeu	r5,r4,10107048 <memmove+0x34>
1010701c:	298f883a 	add	r7,r5,r6
10107020:	21c0092e 	bgeu	r4,r7,10107048 <memmove+0x34>
10107024:	2187883a 	add	r3,r4,r6
10107028:	198bc83a 	sub	r5,r3,r6
1010702c:	30004826 	beq	r6,zero,10107150 <memmove+0x13c>
10107030:	39ffffc4 	addi	r7,r7,-1
10107034:	39000003 	ldbu	r4,0(r7)
10107038:	18ffffc4 	addi	r3,r3,-1
1010703c:	19000005 	stb	r4,0(r3)
10107040:	28fffb1e 	bne	r5,r3,10107030 <memmove+0x1c>
10107044:	f800283a 	ret
10107048:	00c003c4 	movi	r3,15
1010704c:	1980412e 	bgeu	r3,r6,10107154 <memmove+0x140>
10107050:	2886b03a 	or	r3,r5,r2
10107054:	18c000cc 	andi	r3,r3,3
10107058:	1800401e 	bne	r3,zero,1010715c <memmove+0x148>
1010705c:	33fffc04 	addi	r15,r6,-16
10107060:	781ed13a 	srli	r15,r15,4
10107064:	28c00104 	addi	r3,r5,4
10107068:	13400104 	addi	r13,r2,4
1010706c:	781c913a 	slli	r14,r15,4
10107070:	2b000204 	addi	r12,r5,8
10107074:	12c00204 	addi	r11,r2,8
10107078:	73800504 	addi	r14,r14,20
1010707c:	2a800304 	addi	r10,r5,12
10107080:	12400304 	addi	r9,r2,12
10107084:	2b9d883a 	add	r14,r5,r14
10107088:	2811883a 	mov	r8,r5
1010708c:	100f883a 	mov	r7,r2
10107090:	41000017 	ldw	r4,0(r8)
10107094:	39c00404 	addi	r7,r7,16
10107098:	18c00404 	addi	r3,r3,16
1010709c:	393ffc15 	stw	r4,-16(r7)
101070a0:	193ffc17 	ldw	r4,-16(r3)
101070a4:	6b400404 	addi	r13,r13,16
101070a8:	5ac00404 	addi	r11,r11,16
101070ac:	693ffc15 	stw	r4,-16(r13)
101070b0:	61000017 	ldw	r4,0(r12)
101070b4:	4a400404 	addi	r9,r9,16
101070b8:	42000404 	addi	r8,r8,16
101070bc:	593ffc15 	stw	r4,-16(r11)
101070c0:	51000017 	ldw	r4,0(r10)
101070c4:	63000404 	addi	r12,r12,16
101070c8:	52800404 	addi	r10,r10,16
101070cc:	493ffc15 	stw	r4,-16(r9)
101070d0:	1bbfef1e 	bne	r3,r14,10107090 <memmove+0x7c>
101070d4:	79000044 	addi	r4,r15,1
101070d8:	2008913a 	slli	r4,r4,4
101070dc:	328003cc 	andi	r10,r6,15
101070e0:	02c000c4 	movi	r11,3
101070e4:	1107883a 	add	r3,r2,r4
101070e8:	290b883a 	add	r5,r5,r4
101070ec:	5a801e2e 	bgeu	r11,r10,10107168 <memmove+0x154>
101070f0:	1813883a 	mov	r9,r3
101070f4:	2811883a 	mov	r8,r5
101070f8:	500f883a 	mov	r7,r10
101070fc:	41000017 	ldw	r4,0(r8)
10107100:	4a400104 	addi	r9,r9,4
10107104:	39ffff04 	addi	r7,r7,-4
10107108:	493fff15 	stw	r4,-4(r9)
1010710c:	42000104 	addi	r8,r8,4
10107110:	59fffa36 	bltu	r11,r7,101070fc <memmove+0xe8>
10107114:	513fff04 	addi	r4,r10,-4
10107118:	2008d0ba 	srli	r4,r4,2
1010711c:	318000cc 	andi	r6,r6,3
10107120:	21000044 	addi	r4,r4,1
10107124:	2109883a 	add	r4,r4,r4
10107128:	2109883a 	add	r4,r4,r4
1010712c:	1907883a 	add	r3,r3,r4
10107130:	290b883a 	add	r5,r5,r4
10107134:	30000b26 	beq	r6,zero,10107164 <memmove+0x150>
10107138:	198d883a 	add	r6,r3,r6
1010713c:	29c00003 	ldbu	r7,0(r5)
10107140:	18c00044 	addi	r3,r3,1
10107144:	29400044 	addi	r5,r5,1
10107148:	19ffffc5 	stb	r7,-1(r3)
1010714c:	19bffb1e 	bne	r3,r6,1010713c <memmove+0x128>
10107150:	f800283a 	ret
10107154:	1007883a 	mov	r3,r2
10107158:	003ff606 	br	10107134 <memmove+0x120>
1010715c:	1007883a 	mov	r3,r2
10107160:	003ff506 	br	10107138 <memmove+0x124>
10107164:	f800283a 	ret
10107168:	500d883a 	mov	r6,r10
1010716c:	003ff106 	br	10107134 <memmove+0x120>

10107170 <_Balloc>:
10107170:	20801317 	ldw	r2,76(r4)
10107174:	defffc04 	addi	sp,sp,-16
10107178:	dc400115 	stw	r17,4(sp)
1010717c:	dc000015 	stw	r16,0(sp)
10107180:	dfc00315 	stw	ra,12(sp)
10107184:	dc800215 	stw	r18,8(sp)
10107188:	2023883a 	mov	r17,r4
1010718c:	2821883a 	mov	r16,r5
10107190:	10000f26 	beq	r2,zero,101071d0 <_Balloc+0x60>
10107194:	8407883a 	add	r3,r16,r16
10107198:	18c7883a 	add	r3,r3,r3
1010719c:	10c7883a 	add	r3,r2,r3
101071a0:	18800017 	ldw	r2,0(r3)
101071a4:	10001126 	beq	r2,zero,101071ec <_Balloc+0x7c>
101071a8:	11000017 	ldw	r4,0(r2)
101071ac:	19000015 	stw	r4,0(r3)
101071b0:	10000415 	stw	zero,16(r2)
101071b4:	10000315 	stw	zero,12(r2)
101071b8:	dfc00317 	ldw	ra,12(sp)
101071bc:	dc800217 	ldw	r18,8(sp)
101071c0:	dc400117 	ldw	r17,4(sp)
101071c4:	dc000017 	ldw	r16,0(sp)
101071c8:	dec00404 	addi	sp,sp,16
101071cc:	f800283a 	ret
101071d0:	01800844 	movi	r6,33
101071d4:	01400104 	movi	r5,4
101071d8:	0109ec80 	call	10109ec8 <_calloc_r>
101071dc:	88801315 	stw	r2,76(r17)
101071e0:	103fec1e 	bne	r2,zero,10107194 <_Balloc+0x24>
101071e4:	0005883a 	mov	r2,zero
101071e8:	003ff306 	br	101071b8 <_Balloc+0x48>
101071ec:	01400044 	movi	r5,1
101071f0:	2c24983a 	sll	r18,r5,r16
101071f4:	8809883a 	mov	r4,r17
101071f8:	91800144 	addi	r6,r18,5
101071fc:	318d883a 	add	r6,r6,r6
10107200:	318d883a 	add	r6,r6,r6
10107204:	0109ec80 	call	10109ec8 <_calloc_r>
10107208:	103ff626 	beq	r2,zero,101071e4 <_Balloc+0x74>
1010720c:	14000115 	stw	r16,4(r2)
10107210:	14800215 	stw	r18,8(r2)
10107214:	003fe606 	br	101071b0 <_Balloc+0x40>

10107218 <_Bfree>:
10107218:	28000826 	beq	r5,zero,1010723c <_Bfree+0x24>
1010721c:	28c00117 	ldw	r3,4(r5)
10107220:	20801317 	ldw	r2,76(r4)
10107224:	18c7883a 	add	r3,r3,r3
10107228:	18c7883a 	add	r3,r3,r3
1010722c:	10c5883a 	add	r2,r2,r3
10107230:	10c00017 	ldw	r3,0(r2)
10107234:	28c00015 	stw	r3,0(r5)
10107238:	11400015 	stw	r5,0(r2)
1010723c:	f800283a 	ret

10107240 <__multadd>:
10107240:	defffa04 	addi	sp,sp,-24
10107244:	dc800315 	stw	r18,12(sp)
10107248:	dc400215 	stw	r17,8(sp)
1010724c:	dc000115 	stw	r16,4(sp)
10107250:	2823883a 	mov	r17,r5
10107254:	2c000417 	ldw	r16,16(r5)
10107258:	dfc00515 	stw	ra,20(sp)
1010725c:	dcc00415 	stw	r19,16(sp)
10107260:	2025883a 	mov	r18,r4
10107264:	29400504 	addi	r5,r5,20
10107268:	0011883a 	mov	r8,zero
1010726c:	28c00017 	ldw	r3,0(r5)
10107270:	29400104 	addi	r5,r5,4
10107274:	42000044 	addi	r8,r8,1
10107278:	18bfffcc 	andi	r2,r3,65535
1010727c:	1185383a 	mul	r2,r2,r6
10107280:	1806d43a 	srli	r3,r3,16
10107284:	11cf883a 	add	r7,r2,r7
10107288:	3808d43a 	srli	r4,r7,16
1010728c:	1987383a 	mul	r3,r3,r6
10107290:	38bfffcc 	andi	r2,r7,65535
10107294:	1907883a 	add	r3,r3,r4
10107298:	1808943a 	slli	r4,r3,16
1010729c:	180ed43a 	srli	r7,r3,16
101072a0:	2085883a 	add	r2,r4,r2
101072a4:	28bfff15 	stw	r2,-4(r5)
101072a8:	443ff016 	blt	r8,r16,1010726c <__multadd+0x2c>
101072ac:	38000926 	beq	r7,zero,101072d4 <__multadd+0x94>
101072b0:	88800217 	ldw	r2,8(r17)
101072b4:	80800f0e 	bge	r16,r2,101072f4 <__multadd+0xb4>
101072b8:	80800144 	addi	r2,r16,5
101072bc:	1085883a 	add	r2,r2,r2
101072c0:	1085883a 	add	r2,r2,r2
101072c4:	8885883a 	add	r2,r17,r2
101072c8:	11c00015 	stw	r7,0(r2)
101072cc:	84000044 	addi	r16,r16,1
101072d0:	8c000415 	stw	r16,16(r17)
101072d4:	8805883a 	mov	r2,r17
101072d8:	dfc00517 	ldw	ra,20(sp)
101072dc:	dcc00417 	ldw	r19,16(sp)
101072e0:	dc800317 	ldw	r18,12(sp)
101072e4:	dc400217 	ldw	r17,8(sp)
101072e8:	dc000117 	ldw	r16,4(sp)
101072ec:	dec00604 	addi	sp,sp,24
101072f0:	f800283a 	ret
101072f4:	89400117 	ldw	r5,4(r17)
101072f8:	9009883a 	mov	r4,r18
101072fc:	d9c00015 	stw	r7,0(sp)
10107300:	29400044 	addi	r5,r5,1
10107304:	01071700 	call	10107170 <_Balloc>
10107308:	89800417 	ldw	r6,16(r17)
1010730c:	89400304 	addi	r5,r17,12
10107310:	11000304 	addi	r4,r2,12
10107314:	31800084 	addi	r6,r6,2
10107318:	318d883a 	add	r6,r6,r6
1010731c:	318d883a 	add	r6,r6,r6
10107320:	1027883a 	mov	r19,r2
10107324:	0106ecc0 	call	10106ecc <memcpy>
10107328:	d9c00017 	ldw	r7,0(sp)
1010732c:	88000a26 	beq	r17,zero,10107358 <__multadd+0x118>
10107330:	88c00117 	ldw	r3,4(r17)
10107334:	90801317 	ldw	r2,76(r18)
10107338:	18c7883a 	add	r3,r3,r3
1010733c:	18c7883a 	add	r3,r3,r3
10107340:	10c5883a 	add	r2,r2,r3
10107344:	10c00017 	ldw	r3,0(r2)
10107348:	88c00015 	stw	r3,0(r17)
1010734c:	14400015 	stw	r17,0(r2)
10107350:	9823883a 	mov	r17,r19
10107354:	003fd806 	br	101072b8 <__multadd+0x78>
10107358:	9823883a 	mov	r17,r19
1010735c:	003fd606 	br	101072b8 <__multadd+0x78>

10107360 <__s2b>:
10107360:	defff904 	addi	sp,sp,-28
10107364:	dc400115 	stw	r17,4(sp)
10107368:	dc000015 	stw	r16,0(sp)
1010736c:	2023883a 	mov	r17,r4
10107370:	2821883a 	mov	r16,r5
10107374:	39000204 	addi	r4,r7,8
10107378:	01400244 	movi	r5,9
1010737c:	dcc00315 	stw	r19,12(sp)
10107380:	dc800215 	stw	r18,8(sp)
10107384:	dfc00615 	stw	ra,24(sp)
10107388:	dd400515 	stw	r21,20(sp)
1010738c:	dd000415 	stw	r20,16(sp)
10107390:	3825883a 	mov	r18,r7
10107394:	3027883a 	mov	r19,r6
10107398:	010af840 	call	1010af84 <__divsi3>
1010739c:	00c00044 	movi	r3,1
101073a0:	000b883a 	mov	r5,zero
101073a4:	1880030e 	bge	r3,r2,101073b4 <__s2b+0x54>
101073a8:	18c7883a 	add	r3,r3,r3
101073ac:	29400044 	addi	r5,r5,1
101073b0:	18bffd16 	blt	r3,r2,101073a8 <__s2b+0x48>
101073b4:	8809883a 	mov	r4,r17
101073b8:	01071700 	call	10107170 <_Balloc>
101073bc:	d8c00717 	ldw	r3,28(sp)
101073c0:	10c00515 	stw	r3,20(r2)
101073c4:	00c00044 	movi	r3,1
101073c8:	10c00415 	stw	r3,16(r2)
101073cc:	00c00244 	movi	r3,9
101073d0:	1cc0210e 	bge	r3,r19,10107458 <__s2b+0xf8>
101073d4:	80eb883a 	add	r21,r16,r3
101073d8:	a829883a 	mov	r20,r21
101073dc:	84e1883a 	add	r16,r16,r19
101073e0:	a1c00007 	ldb	r7,0(r20)
101073e4:	01800284 	movi	r6,10
101073e8:	a5000044 	addi	r20,r20,1
101073ec:	100b883a 	mov	r5,r2
101073f0:	39fff404 	addi	r7,r7,-48
101073f4:	8809883a 	mov	r4,r17
101073f8:	01072400 	call	10107240 <__multadd>
101073fc:	a43ff81e 	bne	r20,r16,101073e0 <__s2b+0x80>
10107400:	ace1883a 	add	r16,r21,r19
10107404:	843ffe04 	addi	r16,r16,-8
10107408:	9c800a0e 	bge	r19,r18,10107434 <__s2b+0xd4>
1010740c:	94e5c83a 	sub	r18,r18,r19
10107410:	84a5883a 	add	r18,r16,r18
10107414:	81c00007 	ldb	r7,0(r16)
10107418:	01800284 	movi	r6,10
1010741c:	84000044 	addi	r16,r16,1
10107420:	100b883a 	mov	r5,r2
10107424:	39fff404 	addi	r7,r7,-48
10107428:	8809883a 	mov	r4,r17
1010742c:	01072400 	call	10107240 <__multadd>
10107430:	84bff81e 	bne	r16,r18,10107414 <__s2b+0xb4>
10107434:	dfc00617 	ldw	ra,24(sp)
10107438:	dd400517 	ldw	r21,20(sp)
1010743c:	dd000417 	ldw	r20,16(sp)
10107440:	dcc00317 	ldw	r19,12(sp)
10107444:	dc800217 	ldw	r18,8(sp)
10107448:	dc400117 	ldw	r17,4(sp)
1010744c:	dc000017 	ldw	r16,0(sp)
10107450:	dec00704 	addi	sp,sp,28
10107454:	f800283a 	ret
10107458:	84000284 	addi	r16,r16,10
1010745c:	1827883a 	mov	r19,r3
10107460:	003fe906 	br	10107408 <__s2b+0xa8>

10107464 <__hi0bits>:
10107464:	20bfffec 	andhi	r2,r4,65535
10107468:	1000141e 	bne	r2,zero,101074bc <__hi0bits+0x58>
1010746c:	2008943a 	slli	r4,r4,16
10107470:	00800404 	movi	r2,16
10107474:	20ffc02c 	andhi	r3,r4,65280
10107478:	1800021e 	bne	r3,zero,10107484 <__hi0bits+0x20>
1010747c:	2008923a 	slli	r4,r4,8
10107480:	10800204 	addi	r2,r2,8
10107484:	20fc002c 	andhi	r3,r4,61440
10107488:	1800021e 	bne	r3,zero,10107494 <__hi0bits+0x30>
1010748c:	2008913a 	slli	r4,r4,4
10107490:	10800104 	addi	r2,r2,4
10107494:	20f0002c 	andhi	r3,r4,49152
10107498:	1800031e 	bne	r3,zero,101074a8 <__hi0bits+0x44>
1010749c:	2109883a 	add	r4,r4,r4
101074a0:	10800084 	addi	r2,r2,2
101074a4:	2109883a 	add	r4,r4,r4
101074a8:	20000316 	blt	r4,zero,101074b8 <__hi0bits+0x54>
101074ac:	2110002c 	andhi	r4,r4,16384
101074b0:	2000041e 	bne	r4,zero,101074c4 <__hi0bits+0x60>
101074b4:	00800804 	movi	r2,32
101074b8:	f800283a 	ret
101074bc:	0005883a 	mov	r2,zero
101074c0:	003fec06 	br	10107474 <__hi0bits+0x10>
101074c4:	10800044 	addi	r2,r2,1
101074c8:	f800283a 	ret

101074cc <__lo0bits>:
101074cc:	20c00017 	ldw	r3,0(r4)
101074d0:	188001cc 	andi	r2,r3,7
101074d4:	10000826 	beq	r2,zero,101074f8 <__lo0bits+0x2c>
101074d8:	1880004c 	andi	r2,r3,1
101074dc:	1000211e 	bne	r2,zero,10107564 <__lo0bits+0x98>
101074e0:	1880008c 	andi	r2,r3,2
101074e4:	1000211e 	bne	r2,zero,1010756c <__lo0bits+0xa0>
101074e8:	1806d0ba 	srli	r3,r3,2
101074ec:	00800084 	movi	r2,2
101074f0:	20c00015 	stw	r3,0(r4)
101074f4:	f800283a 	ret
101074f8:	18bfffcc 	andi	r2,r3,65535
101074fc:	10001326 	beq	r2,zero,1010754c <__lo0bits+0x80>
10107500:	0005883a 	mov	r2,zero
10107504:	19403fcc 	andi	r5,r3,255
10107508:	2800021e 	bne	r5,zero,10107514 <__lo0bits+0x48>
1010750c:	1806d23a 	srli	r3,r3,8
10107510:	10800204 	addi	r2,r2,8
10107514:	194003cc 	andi	r5,r3,15
10107518:	2800021e 	bne	r5,zero,10107524 <__lo0bits+0x58>
1010751c:	1806d13a 	srli	r3,r3,4
10107520:	10800104 	addi	r2,r2,4
10107524:	194000cc 	andi	r5,r3,3
10107528:	2800021e 	bne	r5,zero,10107534 <__lo0bits+0x68>
1010752c:	1806d0ba 	srli	r3,r3,2
10107530:	10800084 	addi	r2,r2,2
10107534:	1940004c 	andi	r5,r3,1
10107538:	2800081e 	bne	r5,zero,1010755c <__lo0bits+0x90>
1010753c:	1806d07a 	srli	r3,r3,1
10107540:	1800051e 	bne	r3,zero,10107558 <__lo0bits+0x8c>
10107544:	00800804 	movi	r2,32
10107548:	f800283a 	ret
1010754c:	1806d43a 	srli	r3,r3,16
10107550:	00800404 	movi	r2,16
10107554:	003feb06 	br	10107504 <__lo0bits+0x38>
10107558:	10800044 	addi	r2,r2,1
1010755c:	20c00015 	stw	r3,0(r4)
10107560:	f800283a 	ret
10107564:	0005883a 	mov	r2,zero
10107568:	f800283a 	ret
1010756c:	1806d07a 	srli	r3,r3,1
10107570:	00800044 	movi	r2,1
10107574:	20c00015 	stw	r3,0(r4)
10107578:	f800283a 	ret

1010757c <__i2b>:
1010757c:	defffd04 	addi	sp,sp,-12
10107580:	dc000015 	stw	r16,0(sp)
10107584:	04000044 	movi	r16,1
10107588:	dc400115 	stw	r17,4(sp)
1010758c:	2823883a 	mov	r17,r5
10107590:	800b883a 	mov	r5,r16
10107594:	dfc00215 	stw	ra,8(sp)
10107598:	01071700 	call	10107170 <_Balloc>
1010759c:	14400515 	stw	r17,20(r2)
101075a0:	14000415 	stw	r16,16(r2)
101075a4:	dfc00217 	ldw	ra,8(sp)
101075a8:	dc400117 	ldw	r17,4(sp)
101075ac:	dc000017 	ldw	r16,0(sp)
101075b0:	dec00304 	addi	sp,sp,12
101075b4:	f800283a 	ret

101075b8 <__multiply>:
101075b8:	defffa04 	addi	sp,sp,-24
101075bc:	dcc00315 	stw	r19,12(sp)
101075c0:	dc800215 	stw	r18,8(sp)
101075c4:	34c00417 	ldw	r19,16(r6)
101075c8:	2c800417 	ldw	r18,16(r5)
101075cc:	dd000415 	stw	r20,16(sp)
101075d0:	dc400115 	stw	r17,4(sp)
101075d4:	dfc00515 	stw	ra,20(sp)
101075d8:	dc000015 	stw	r16,0(sp)
101075dc:	2829883a 	mov	r20,r5
101075e0:	3023883a 	mov	r17,r6
101075e4:	94c0050e 	bge	r18,r19,101075fc <__multiply+0x44>
101075e8:	9007883a 	mov	r3,r18
101075ec:	3029883a 	mov	r20,r6
101075f0:	9825883a 	mov	r18,r19
101075f4:	2823883a 	mov	r17,r5
101075f8:	1827883a 	mov	r19,r3
101075fc:	a0800217 	ldw	r2,8(r20)
10107600:	94e1883a 	add	r16,r18,r19
10107604:	a1400117 	ldw	r5,4(r20)
10107608:	1400010e 	bge	r2,r16,10107610 <__multiply+0x58>
1010760c:	29400044 	addi	r5,r5,1
10107610:	01071700 	call	10107170 <_Balloc>
10107614:	8415883a 	add	r10,r16,r16
10107618:	12c00504 	addi	r11,r2,20
1010761c:	5295883a 	add	r10,r10,r10
10107620:	5a95883a 	add	r10,r11,r10
10107624:	5807883a 	mov	r3,r11
10107628:	5a80032e 	bgeu	r11,r10,10107638 <__multiply+0x80>
1010762c:	18000015 	stw	zero,0(r3)
10107630:	18c00104 	addi	r3,r3,4
10107634:	1abffd36 	bltu	r3,r10,1010762c <__multiply+0x74>
10107638:	9ce7883a 	add	r19,r19,r19
1010763c:	94a5883a 	add	r18,r18,r18
10107640:	89800504 	addi	r6,r17,20
10107644:	9ce7883a 	add	r19,r19,r19
10107648:	a3400504 	addi	r13,r20,20
1010764c:	94a5883a 	add	r18,r18,r18
10107650:	34d9883a 	add	r12,r6,r19
10107654:	6c93883a 	add	r9,r13,r18
10107658:	3300422e 	bgeu	r6,r12,10107764 <__multiply+0x1ac>
1010765c:	37c00017 	ldw	ra,0(r6)
10107660:	fbffffcc 	andi	r15,ra,65535
10107664:	78001b26 	beq	r15,zero,101076d4 <__multiply+0x11c>
10107668:	5811883a 	mov	r8,r11
1010766c:	681d883a 	mov	r14,r13
10107670:	000f883a 	mov	r7,zero
10107674:	71000017 	ldw	r4,0(r14)
10107678:	40c00017 	ldw	r3,0(r8)
1010767c:	73800104 	addi	r14,r14,4
10107680:	217fffcc 	andi	r5,r4,65535
10107684:	2bcb383a 	mul	r5,r5,r15
10107688:	2008d43a 	srli	r4,r4,16
1010768c:	1c7fffcc 	andi	r17,r3,65535
10107690:	2c4b883a 	add	r5,r5,r17
10107694:	29cb883a 	add	r5,r5,r7
10107698:	23c9383a 	mul	r4,r4,r15
1010769c:	1806d43a 	srli	r3,r3,16
101076a0:	280ed43a 	srli	r7,r5,16
101076a4:	297fffcc 	andi	r5,r5,65535
101076a8:	20c7883a 	add	r3,r4,r3
101076ac:	19c7883a 	add	r3,r3,r7
101076b0:	1808943a 	slli	r4,r3,16
101076b4:	4023883a 	mov	r17,r8
101076b8:	180ed43a 	srli	r7,r3,16
101076bc:	214ab03a 	or	r5,r4,r5
101076c0:	41400015 	stw	r5,0(r8)
101076c4:	42000104 	addi	r8,r8,4
101076c8:	727fea36 	bltu	r14,r9,10107674 <__multiply+0xbc>
101076cc:	89c00115 	stw	r7,4(r17)
101076d0:	37c00017 	ldw	ra,0(r6)
101076d4:	f83ed43a 	srli	ra,ra,16
101076d8:	f8001f26 	beq	ra,zero,10107758 <__multiply+0x1a0>
101076dc:	58c00017 	ldw	r3,0(r11)
101076e0:	681d883a 	mov	r14,r13
101076e4:	581f883a 	mov	r15,r11
101076e8:	1811883a 	mov	r8,r3
101076ec:	5825883a 	mov	r18,r11
101076f0:	000f883a 	mov	r7,zero
101076f4:	00000106 	br	101076fc <__multiply+0x144>
101076f8:	8825883a 	mov	r18,r17
101076fc:	7140000b 	ldhu	r5,0(r14)
10107700:	4010d43a 	srli	r8,r8,16
10107704:	193fffcc 	andi	r4,r3,65535
10107708:	2fcb383a 	mul	r5,r5,ra
1010770c:	7bc00104 	addi	r15,r15,4
10107710:	73800104 	addi	r14,r14,4
10107714:	2a0b883a 	add	r5,r5,r8
10107718:	29cb883a 	add	r5,r5,r7
1010771c:	2806943a 	slli	r3,r5,16
10107720:	94400104 	addi	r17,r18,4
10107724:	280ad43a 	srli	r5,r5,16
10107728:	1908b03a 	or	r4,r3,r4
1010772c:	793fff15 	stw	r4,-4(r15)
10107730:	70ffff17 	ldw	r3,-4(r14)
10107734:	8a000017 	ldw	r8,0(r17)
10107738:	1806d43a 	srli	r3,r3,16
1010773c:	413fffcc 	andi	r4,r8,65535
10107740:	1fc7383a 	mul	r3,r3,ra
10107744:	1907883a 	add	r3,r3,r4
10107748:	1947883a 	add	r3,r3,r5
1010774c:	180ed43a 	srli	r7,r3,16
10107750:	727fe936 	bltu	r14,r9,101076f8 <__multiply+0x140>
10107754:	90c00115 	stw	r3,4(r18)
10107758:	31800104 	addi	r6,r6,4
1010775c:	5ac00104 	addi	r11,r11,4
10107760:	333fbe36 	bltu	r6,r12,1010765c <__multiply+0xa4>
10107764:	0400090e 	bge	zero,r16,1010778c <__multiply+0x1d4>
10107768:	50ffff17 	ldw	r3,-4(r10)
1010776c:	52bfff04 	addi	r10,r10,-4
10107770:	18000326 	beq	r3,zero,10107780 <__multiply+0x1c8>
10107774:	00000506 	br	1010778c <__multiply+0x1d4>
10107778:	50c00017 	ldw	r3,0(r10)
1010777c:	1800031e 	bne	r3,zero,1010778c <__multiply+0x1d4>
10107780:	843fffc4 	addi	r16,r16,-1
10107784:	52bfff04 	addi	r10,r10,-4
10107788:	803ffb1e 	bne	r16,zero,10107778 <__multiply+0x1c0>
1010778c:	14000415 	stw	r16,16(r2)
10107790:	dfc00517 	ldw	ra,20(sp)
10107794:	dd000417 	ldw	r20,16(sp)
10107798:	dcc00317 	ldw	r19,12(sp)
1010779c:	dc800217 	ldw	r18,8(sp)
101077a0:	dc400117 	ldw	r17,4(sp)
101077a4:	dc000017 	ldw	r16,0(sp)
101077a8:	dec00604 	addi	sp,sp,24
101077ac:	f800283a 	ret

101077b0 <__pow5mult>:
101077b0:	defffa04 	addi	sp,sp,-24
101077b4:	dcc00315 	stw	r19,12(sp)
101077b8:	dc000015 	stw	r16,0(sp)
101077bc:	dfc00515 	stw	ra,20(sp)
101077c0:	dd000415 	stw	r20,16(sp)
101077c4:	dc800215 	stw	r18,8(sp)
101077c8:	dc400115 	stw	r17,4(sp)
101077cc:	308000cc 	andi	r2,r6,3
101077d0:	3021883a 	mov	r16,r6
101077d4:	2027883a 	mov	r19,r4
101077d8:	10002f1e 	bne	r2,zero,10107898 <__pow5mult+0xe8>
101077dc:	2825883a 	mov	r18,r5
101077e0:	8021d0ba 	srai	r16,r16,2
101077e4:	80001a26 	beq	r16,zero,10107850 <__pow5mult+0xa0>
101077e8:	9c401217 	ldw	r17,72(r19)
101077ec:	8800061e 	bne	r17,zero,10107808 <__pow5mult+0x58>
101077f0:	00003406 	br	101078c4 <__pow5mult+0x114>
101077f4:	8021d07a 	srai	r16,r16,1
101077f8:	80001526 	beq	r16,zero,10107850 <__pow5mult+0xa0>
101077fc:	88800017 	ldw	r2,0(r17)
10107800:	10001c26 	beq	r2,zero,10107874 <__pow5mult+0xc4>
10107804:	1023883a 	mov	r17,r2
10107808:	8080004c 	andi	r2,r16,1
1010780c:	103ff926 	beq	r2,zero,101077f4 <__pow5mult+0x44>
10107810:	880d883a 	mov	r6,r17
10107814:	900b883a 	mov	r5,r18
10107818:	9809883a 	mov	r4,r19
1010781c:	01075b80 	call	101075b8 <__multiply>
10107820:	90001b26 	beq	r18,zero,10107890 <__pow5mult+0xe0>
10107824:	91000117 	ldw	r4,4(r18)
10107828:	98c01317 	ldw	r3,76(r19)
1010782c:	8021d07a 	srai	r16,r16,1
10107830:	2109883a 	add	r4,r4,r4
10107834:	2109883a 	add	r4,r4,r4
10107838:	1907883a 	add	r3,r3,r4
1010783c:	19000017 	ldw	r4,0(r3)
10107840:	91000015 	stw	r4,0(r18)
10107844:	1c800015 	stw	r18,0(r3)
10107848:	1025883a 	mov	r18,r2
1010784c:	803feb1e 	bne	r16,zero,101077fc <__pow5mult+0x4c>
10107850:	9005883a 	mov	r2,r18
10107854:	dfc00517 	ldw	ra,20(sp)
10107858:	dd000417 	ldw	r20,16(sp)
1010785c:	dcc00317 	ldw	r19,12(sp)
10107860:	dc800217 	ldw	r18,8(sp)
10107864:	dc400117 	ldw	r17,4(sp)
10107868:	dc000017 	ldw	r16,0(sp)
1010786c:	dec00604 	addi	sp,sp,24
10107870:	f800283a 	ret
10107874:	880d883a 	mov	r6,r17
10107878:	880b883a 	mov	r5,r17
1010787c:	9809883a 	mov	r4,r19
10107880:	01075b80 	call	101075b8 <__multiply>
10107884:	88800015 	stw	r2,0(r17)
10107888:	10000015 	stw	zero,0(r2)
1010788c:	003fdd06 	br	10107804 <__pow5mult+0x54>
10107890:	1025883a 	mov	r18,r2
10107894:	003fd706 	br	101077f4 <__pow5mult+0x44>
10107898:	10bfffc4 	addi	r2,r2,-1
1010789c:	1085883a 	add	r2,r2,r2
101078a0:	00c40474 	movhi	r3,4113
101078a4:	18ffcf04 	addi	r3,r3,-196
101078a8:	1085883a 	add	r2,r2,r2
101078ac:	1885883a 	add	r2,r3,r2
101078b0:	11800017 	ldw	r6,0(r2)
101078b4:	000f883a 	mov	r7,zero
101078b8:	01072400 	call	10107240 <__multadd>
101078bc:	1025883a 	mov	r18,r2
101078c0:	003fc706 	br	101077e0 <__pow5mult+0x30>
101078c4:	05000044 	movi	r20,1
101078c8:	a00b883a 	mov	r5,r20
101078cc:	9809883a 	mov	r4,r19
101078d0:	01071700 	call	10107170 <_Balloc>
101078d4:	1023883a 	mov	r17,r2
101078d8:	00809c44 	movi	r2,625
101078dc:	88800515 	stw	r2,20(r17)
101078e0:	8d000415 	stw	r20,16(r17)
101078e4:	9c401215 	stw	r17,72(r19)
101078e8:	88000015 	stw	zero,0(r17)
101078ec:	003fc606 	br	10107808 <__pow5mult+0x58>

101078f0 <__lshift>:
101078f0:	defff904 	addi	sp,sp,-28
101078f4:	dd400515 	stw	r21,20(sp)
101078f8:	dcc00315 	stw	r19,12(sp)
101078fc:	302bd17a 	srai	r21,r6,5
10107900:	2cc00417 	ldw	r19,16(r5)
10107904:	28800217 	ldw	r2,8(r5)
10107908:	dd000415 	stw	r20,16(sp)
1010790c:	ace7883a 	add	r19,r21,r19
10107910:	dc800215 	stw	r18,8(sp)
10107914:	dc400115 	stw	r17,4(sp)
10107918:	dc000015 	stw	r16,0(sp)
1010791c:	dfc00615 	stw	ra,24(sp)
10107920:	9c000044 	addi	r16,r19,1
10107924:	2823883a 	mov	r17,r5
10107928:	3029883a 	mov	r20,r6
1010792c:	2025883a 	mov	r18,r4
10107930:	29400117 	ldw	r5,4(r5)
10107934:	1400030e 	bge	r2,r16,10107944 <__lshift+0x54>
10107938:	1085883a 	add	r2,r2,r2
1010793c:	29400044 	addi	r5,r5,1
10107940:	143ffd16 	blt	r2,r16,10107938 <__lshift+0x48>
10107944:	9009883a 	mov	r4,r18
10107948:	01071700 	call	10107170 <_Balloc>
1010794c:	10c00504 	addi	r3,r2,20
10107950:	0540070e 	bge	zero,r21,10107970 <__lshift+0x80>
10107954:	ad6b883a 	add	r21,r21,r21
10107958:	ad6b883a 	add	r21,r21,r21
1010795c:	1809883a 	mov	r4,r3
10107960:	1d47883a 	add	r3,r3,r21
10107964:	20000015 	stw	zero,0(r4)
10107968:	21000104 	addi	r4,r4,4
1010796c:	193ffd1e 	bne	r3,r4,10107964 <__lshift+0x74>
10107970:	8a000417 	ldw	r8,16(r17)
10107974:	89000504 	addi	r4,r17,20
10107978:	a18007cc 	andi	r6,r20,31
1010797c:	4211883a 	add	r8,r8,r8
10107980:	4211883a 	add	r8,r8,r8
10107984:	2211883a 	add	r8,r4,r8
10107988:	30002326 	beq	r6,zero,10107a18 <__lshift+0x128>
1010798c:	02400804 	movi	r9,32
10107990:	4993c83a 	sub	r9,r9,r6
10107994:	000b883a 	mov	r5,zero
10107998:	21c00017 	ldw	r7,0(r4)
1010799c:	1815883a 	mov	r10,r3
101079a0:	18c00104 	addi	r3,r3,4
101079a4:	398e983a 	sll	r7,r7,r6
101079a8:	21000104 	addi	r4,r4,4
101079ac:	394ab03a 	or	r5,r7,r5
101079b0:	197fff15 	stw	r5,-4(r3)
101079b4:	217fff17 	ldw	r5,-4(r4)
101079b8:	2a4ad83a 	srl	r5,r5,r9
101079bc:	223ff636 	bltu	r4,r8,10107998 <__lshift+0xa8>
101079c0:	51400115 	stw	r5,4(r10)
101079c4:	28001a1e 	bne	r5,zero,10107a30 <__lshift+0x140>
101079c8:	843fffc4 	addi	r16,r16,-1
101079cc:	14000415 	stw	r16,16(r2)
101079d0:	88000826 	beq	r17,zero,101079f4 <__lshift+0x104>
101079d4:	89000117 	ldw	r4,4(r17)
101079d8:	90c01317 	ldw	r3,76(r18)
101079dc:	2109883a 	add	r4,r4,r4
101079e0:	2109883a 	add	r4,r4,r4
101079e4:	1907883a 	add	r3,r3,r4
101079e8:	19000017 	ldw	r4,0(r3)
101079ec:	89000015 	stw	r4,0(r17)
101079f0:	1c400015 	stw	r17,0(r3)
101079f4:	dfc00617 	ldw	ra,24(sp)
101079f8:	dd400517 	ldw	r21,20(sp)
101079fc:	dd000417 	ldw	r20,16(sp)
10107a00:	dcc00317 	ldw	r19,12(sp)
10107a04:	dc800217 	ldw	r18,8(sp)
10107a08:	dc400117 	ldw	r17,4(sp)
10107a0c:	dc000017 	ldw	r16,0(sp)
10107a10:	dec00704 	addi	sp,sp,28
10107a14:	f800283a 	ret
10107a18:	21400017 	ldw	r5,0(r4)
10107a1c:	18c00104 	addi	r3,r3,4
10107a20:	21000104 	addi	r4,r4,4
10107a24:	197fff15 	stw	r5,-4(r3)
10107a28:	223ffb36 	bltu	r4,r8,10107a18 <__lshift+0x128>
10107a2c:	003fe606 	br	101079c8 <__lshift+0xd8>
10107a30:	9c000084 	addi	r16,r19,2
10107a34:	003fe406 	br	101079c8 <__lshift+0xd8>

10107a38 <__mcmp>:
10107a38:	20800417 	ldw	r2,16(r4)
10107a3c:	28c00417 	ldw	r3,16(r5)
10107a40:	10c5c83a 	sub	r2,r2,r3
10107a44:	1000111e 	bne	r2,zero,10107a8c <__mcmp+0x54>
10107a48:	18c7883a 	add	r3,r3,r3
10107a4c:	18c7883a 	add	r3,r3,r3
10107a50:	21000504 	addi	r4,r4,20
10107a54:	29400504 	addi	r5,r5,20
10107a58:	20c5883a 	add	r2,r4,r3
10107a5c:	28cb883a 	add	r5,r5,r3
10107a60:	00000106 	br	10107a68 <__mcmp+0x30>
10107a64:	20800a2e 	bgeu	r4,r2,10107a90 <__mcmp+0x58>
10107a68:	10bfff04 	addi	r2,r2,-4
10107a6c:	297fff04 	addi	r5,r5,-4
10107a70:	11800017 	ldw	r6,0(r2)
10107a74:	28c00017 	ldw	r3,0(r5)
10107a78:	30fffa26 	beq	r6,r3,10107a64 <__mcmp+0x2c>
10107a7c:	30c00236 	bltu	r6,r3,10107a88 <__mcmp+0x50>
10107a80:	00800044 	movi	r2,1
10107a84:	f800283a 	ret
10107a88:	00bfffc4 	movi	r2,-1
10107a8c:	f800283a 	ret
10107a90:	0005883a 	mov	r2,zero
10107a94:	f800283a 	ret

10107a98 <__mdiff>:
10107a98:	28c00417 	ldw	r3,16(r5)
10107a9c:	30800417 	ldw	r2,16(r6)
10107aa0:	defffa04 	addi	sp,sp,-24
10107aa4:	dcc00315 	stw	r19,12(sp)
10107aa8:	dc800215 	stw	r18,8(sp)
10107aac:	dfc00515 	stw	ra,20(sp)
10107ab0:	dd000415 	stw	r20,16(sp)
10107ab4:	dc400115 	stw	r17,4(sp)
10107ab8:	dc000015 	stw	r16,0(sp)
10107abc:	1887c83a 	sub	r3,r3,r2
10107ac0:	2825883a 	mov	r18,r5
10107ac4:	3027883a 	mov	r19,r6
10107ac8:	1800141e 	bne	r3,zero,10107b1c <__mdiff+0x84>
10107acc:	1085883a 	add	r2,r2,r2
10107ad0:	1085883a 	add	r2,r2,r2
10107ad4:	2a000504 	addi	r8,r5,20
10107ad8:	34000504 	addi	r16,r6,20
10107adc:	4087883a 	add	r3,r8,r2
10107ae0:	8085883a 	add	r2,r16,r2
10107ae4:	00000106 	br	10107aec <__mdiff+0x54>
10107ae8:	40c0592e 	bgeu	r8,r3,10107c50 <__mdiff+0x1b8>
10107aec:	18ffff04 	addi	r3,r3,-4
10107af0:	10bfff04 	addi	r2,r2,-4
10107af4:	19c00017 	ldw	r7,0(r3)
10107af8:	11400017 	ldw	r5,0(r2)
10107afc:	397ffa26 	beq	r7,r5,10107ae8 <__mdiff+0x50>
10107b00:	3940592e 	bgeu	r7,r5,10107c68 <__mdiff+0x1d0>
10107b04:	9005883a 	mov	r2,r18
10107b08:	4023883a 	mov	r17,r8
10107b0c:	9825883a 	mov	r18,r19
10107b10:	05000044 	movi	r20,1
10107b14:	1027883a 	mov	r19,r2
10107b18:	00000406 	br	10107b2c <__mdiff+0x94>
10107b1c:	18005616 	blt	r3,zero,10107c78 <__mdiff+0x1e0>
10107b20:	34400504 	addi	r17,r6,20
10107b24:	2c000504 	addi	r16,r5,20
10107b28:	0029883a 	mov	r20,zero
10107b2c:	91400117 	ldw	r5,4(r18)
10107b30:	01071700 	call	10107170 <_Balloc>
10107b34:	92400417 	ldw	r9,16(r18)
10107b38:	9b000417 	ldw	r12,16(r19)
10107b3c:	12c00504 	addi	r11,r2,20
10107b40:	4a51883a 	add	r8,r9,r9
10107b44:	6319883a 	add	r12,r12,r12
10107b48:	4211883a 	add	r8,r8,r8
10107b4c:	6319883a 	add	r12,r12,r12
10107b50:	15000315 	stw	r20,12(r2)
10107b54:	8211883a 	add	r8,r16,r8
10107b58:	8b19883a 	add	r12,r17,r12
10107b5c:	0007883a 	mov	r3,zero
10107b60:	81400017 	ldw	r5,0(r16)
10107b64:	89c00017 	ldw	r7,0(r17)
10107b68:	59800104 	addi	r6,r11,4
10107b6c:	293fffcc 	andi	r4,r5,65535
10107b70:	20c7883a 	add	r3,r4,r3
10107b74:	393fffcc 	andi	r4,r7,65535
10107b78:	1909c83a 	sub	r4,r3,r4
10107b7c:	280ad43a 	srli	r5,r5,16
10107b80:	380ed43a 	srli	r7,r7,16
10107b84:	2007d43a 	srai	r3,r4,16
10107b88:	213fffcc 	andi	r4,r4,65535
10107b8c:	29cbc83a 	sub	r5,r5,r7
10107b90:	28c7883a 	add	r3,r5,r3
10107b94:	180a943a 	slli	r5,r3,16
10107b98:	8c400104 	addi	r17,r17,4
10107b9c:	84000104 	addi	r16,r16,4
10107ba0:	2908b03a 	or	r4,r5,r4
10107ba4:	59000015 	stw	r4,0(r11)
10107ba8:	1807d43a 	srai	r3,r3,16
10107bac:	3015883a 	mov	r10,r6
10107bb0:	3017883a 	mov	r11,r6
10107bb4:	8b3fea36 	bltu	r17,r12,10107b60 <__mdiff+0xc8>
10107bb8:	8200162e 	bgeu	r16,r8,10107c14 <__mdiff+0x17c>
10107bbc:	8017883a 	mov	r11,r16
10107bc0:	59400017 	ldw	r5,0(r11)
10107bc4:	31800104 	addi	r6,r6,4
10107bc8:	5ac00104 	addi	r11,r11,4
10107bcc:	293fffcc 	andi	r4,r5,65535
10107bd0:	20c7883a 	add	r3,r4,r3
10107bd4:	280ed43a 	srli	r7,r5,16
10107bd8:	180bd43a 	srai	r5,r3,16
10107bdc:	193fffcc 	andi	r4,r3,65535
10107be0:	3947883a 	add	r3,r7,r5
10107be4:	180a943a 	slli	r5,r3,16
10107be8:	1807d43a 	srai	r3,r3,16
10107bec:	2908b03a 	or	r4,r5,r4
10107bf0:	313fff15 	stw	r4,-4(r6)
10107bf4:	5a3ff236 	bltu	r11,r8,10107bc0 <__mdiff+0x128>
10107bf8:	0406303a 	nor	r3,zero,r16
10107bfc:	1a07883a 	add	r3,r3,r8
10107c00:	1806d0ba 	srli	r3,r3,2
10107c04:	18c00044 	addi	r3,r3,1
10107c08:	18c7883a 	add	r3,r3,r3
10107c0c:	18c7883a 	add	r3,r3,r3
10107c10:	50d5883a 	add	r10,r10,r3
10107c14:	50ffff04 	addi	r3,r10,-4
10107c18:	2000041e 	bne	r4,zero,10107c2c <__mdiff+0x194>
10107c1c:	18ffff04 	addi	r3,r3,-4
10107c20:	19000017 	ldw	r4,0(r3)
10107c24:	4a7fffc4 	addi	r9,r9,-1
10107c28:	203ffc26 	beq	r4,zero,10107c1c <__mdiff+0x184>
10107c2c:	12400415 	stw	r9,16(r2)
10107c30:	dfc00517 	ldw	ra,20(sp)
10107c34:	dd000417 	ldw	r20,16(sp)
10107c38:	dcc00317 	ldw	r19,12(sp)
10107c3c:	dc800217 	ldw	r18,8(sp)
10107c40:	dc400117 	ldw	r17,4(sp)
10107c44:	dc000017 	ldw	r16,0(sp)
10107c48:	dec00604 	addi	sp,sp,24
10107c4c:	f800283a 	ret
10107c50:	000b883a 	mov	r5,zero
10107c54:	01071700 	call	10107170 <_Balloc>
10107c58:	00c00044 	movi	r3,1
10107c5c:	10c00415 	stw	r3,16(r2)
10107c60:	10000515 	stw	zero,20(r2)
10107c64:	003ff206 	br	10107c30 <__mdiff+0x198>
10107c68:	8023883a 	mov	r17,r16
10107c6c:	0029883a 	mov	r20,zero
10107c70:	4021883a 	mov	r16,r8
10107c74:	003fad06 	br	10107b2c <__mdiff+0x94>
10107c78:	9005883a 	mov	r2,r18
10107c7c:	94400504 	addi	r17,r18,20
10107c80:	9c000504 	addi	r16,r19,20
10107c84:	9825883a 	mov	r18,r19
10107c88:	05000044 	movi	r20,1
10107c8c:	1027883a 	mov	r19,r2
10107c90:	003fa606 	br	10107b2c <__mdiff+0x94>

10107c94 <__ulp>:
10107c94:	295ffc2c 	andhi	r5,r5,32752
10107c98:	00bf3034 	movhi	r2,64704
10107c9c:	2887883a 	add	r3,r5,r2
10107ca0:	00c0020e 	bge	zero,r3,10107cac <__ulp+0x18>
10107ca4:	0005883a 	mov	r2,zero
10107ca8:	f800283a 	ret
10107cac:	00c7c83a 	sub	r3,zero,r3
10107cb0:	1807d53a 	srai	r3,r3,20
10107cb4:	008004c4 	movi	r2,19
10107cb8:	10c00b0e 	bge	r2,r3,10107ce8 <__ulp+0x54>
10107cbc:	18bffb04 	addi	r2,r3,-20
10107cc0:	01000784 	movi	r4,30
10107cc4:	0007883a 	mov	r3,zero
10107cc8:	20800516 	blt	r4,r2,10107ce0 <__ulp+0x4c>
10107ccc:	010007c4 	movi	r4,31
10107cd0:	2089c83a 	sub	r4,r4,r2
10107cd4:	00800044 	movi	r2,1
10107cd8:	1104983a 	sll	r2,r2,r4
10107cdc:	f800283a 	ret
10107ce0:	00800044 	movi	r2,1
10107ce4:	f800283a 	ret
10107ce8:	01400234 	movhi	r5,8
10107cec:	28c7d83a 	sra	r3,r5,r3
10107cf0:	0005883a 	mov	r2,zero
10107cf4:	f800283a 	ret

10107cf8 <__b2d>:
10107cf8:	defffa04 	addi	sp,sp,-24
10107cfc:	dc000015 	stw	r16,0(sp)
10107d00:	24000417 	ldw	r16,16(r4)
10107d04:	dc400115 	stw	r17,4(sp)
10107d08:	24400504 	addi	r17,r4,20
10107d0c:	8421883a 	add	r16,r16,r16
10107d10:	8421883a 	add	r16,r16,r16
10107d14:	8c21883a 	add	r16,r17,r16
10107d18:	dc800215 	stw	r18,8(sp)
10107d1c:	84bfff17 	ldw	r18,-4(r16)
10107d20:	dd000415 	stw	r20,16(sp)
10107d24:	dcc00315 	stw	r19,12(sp)
10107d28:	9009883a 	mov	r4,r18
10107d2c:	2829883a 	mov	r20,r5
10107d30:	dfc00515 	stw	ra,20(sp)
10107d34:	01074640 	call	10107464 <__hi0bits>
10107d38:	00c00804 	movi	r3,32
10107d3c:	1889c83a 	sub	r4,r3,r2
10107d40:	a1000015 	stw	r4,0(r20)
10107d44:	01000284 	movi	r4,10
10107d48:	84ffff04 	addi	r19,r16,-4
10107d4c:	20801216 	blt	r4,r2,10107d98 <__b2d+0xa0>
10107d50:	018002c4 	movi	r6,11
10107d54:	308dc83a 	sub	r6,r6,r2
10107d58:	9186d83a 	srl	r3,r18,r6
10107d5c:	18cffc34 	orhi	r3,r3,16368
10107d60:	8cc0212e 	bgeu	r17,r19,10107de8 <__b2d+0xf0>
10107d64:	813ffe17 	ldw	r4,-8(r16)
10107d68:	218cd83a 	srl	r6,r4,r6
10107d6c:	10800544 	addi	r2,r2,21
10107d70:	9084983a 	sll	r2,r18,r2
10107d74:	1184b03a 	or	r2,r2,r6
10107d78:	dfc00517 	ldw	ra,20(sp)
10107d7c:	dd000417 	ldw	r20,16(sp)
10107d80:	dcc00317 	ldw	r19,12(sp)
10107d84:	dc800217 	ldw	r18,8(sp)
10107d88:	dc400117 	ldw	r17,4(sp)
10107d8c:	dc000017 	ldw	r16,0(sp)
10107d90:	dec00604 	addi	sp,sp,24
10107d94:	f800283a 	ret
10107d98:	8cc00f2e 	bgeu	r17,r19,10107dd8 <__b2d+0xe0>
10107d9c:	117ffd44 	addi	r5,r2,-11
10107da0:	80bffe17 	ldw	r2,-8(r16)
10107da4:	28000e26 	beq	r5,zero,10107de0 <__b2d+0xe8>
10107da8:	1949c83a 	sub	r4,r3,r5
10107dac:	9164983a 	sll	r18,r18,r5
10107db0:	1106d83a 	srl	r3,r2,r4
10107db4:	81bffe04 	addi	r6,r16,-8
10107db8:	948ffc34 	orhi	r18,r18,16368
10107dbc:	90c6b03a 	or	r3,r18,r3
10107dc0:	89800e2e 	bgeu	r17,r6,10107dfc <__b2d+0x104>
10107dc4:	81bffd17 	ldw	r6,-12(r16)
10107dc8:	1144983a 	sll	r2,r2,r5
10107dcc:	310ad83a 	srl	r5,r6,r4
10107dd0:	2884b03a 	or	r2,r5,r2
10107dd4:	003fe806 	br	10107d78 <__b2d+0x80>
10107dd8:	10bffd44 	addi	r2,r2,-11
10107ddc:	1000041e 	bne	r2,zero,10107df0 <__b2d+0xf8>
10107de0:	90cffc34 	orhi	r3,r18,16368
10107de4:	003fe406 	br	10107d78 <__b2d+0x80>
10107de8:	000d883a 	mov	r6,zero
10107dec:	003fdf06 	br	10107d6c <__b2d+0x74>
10107df0:	90a4983a 	sll	r18,r18,r2
10107df4:	0005883a 	mov	r2,zero
10107df8:	003ff906 	br	10107de0 <__b2d+0xe8>
10107dfc:	1144983a 	sll	r2,r2,r5
10107e00:	003fdd06 	br	10107d78 <__b2d+0x80>

10107e04 <__d2b>:
10107e04:	defff804 	addi	sp,sp,-32
10107e08:	dc000215 	stw	r16,8(sp)
10107e0c:	3021883a 	mov	r16,r6
10107e10:	dc400315 	stw	r17,12(sp)
10107e14:	8022907a 	slli	r17,r16,1
10107e18:	dd000615 	stw	r20,24(sp)
10107e1c:	2829883a 	mov	r20,r5
10107e20:	01400044 	movi	r5,1
10107e24:	dcc00515 	stw	r19,20(sp)
10107e28:	dc800415 	stw	r18,16(sp)
10107e2c:	dfc00715 	stw	ra,28(sp)
10107e30:	3825883a 	mov	r18,r7
10107e34:	8822d57a 	srli	r17,r17,21
10107e38:	01071700 	call	10107170 <_Balloc>
10107e3c:	1027883a 	mov	r19,r2
10107e40:	00800434 	movhi	r2,16
10107e44:	10bfffc4 	addi	r2,r2,-1
10107e48:	808c703a 	and	r6,r16,r2
10107e4c:	88000126 	beq	r17,zero,10107e54 <__d2b+0x50>
10107e50:	31800434 	orhi	r6,r6,16
10107e54:	d9800015 	stw	r6,0(sp)
10107e58:	a0002426 	beq	r20,zero,10107eec <__d2b+0xe8>
10107e5c:	d9000104 	addi	r4,sp,4
10107e60:	dd000115 	stw	r20,4(sp)
10107e64:	01074cc0 	call	101074cc <__lo0bits>
10107e68:	d8c00017 	ldw	r3,0(sp)
10107e6c:	10002f1e 	bne	r2,zero,10107f2c <__d2b+0x128>
10107e70:	d9000117 	ldw	r4,4(sp)
10107e74:	99000515 	stw	r4,20(r19)
10107e78:	1821003a 	cmpeq	r16,r3,zero
10107e7c:	01000084 	movi	r4,2
10107e80:	2421c83a 	sub	r16,r4,r16
10107e84:	98c00615 	stw	r3,24(r19)
10107e88:	9c000415 	stw	r16,16(r19)
10107e8c:	88001f1e 	bne	r17,zero,10107f0c <__d2b+0x108>
10107e90:	10bef384 	addi	r2,r2,-1074
10107e94:	90800015 	stw	r2,0(r18)
10107e98:	00900034 	movhi	r2,16384
10107e9c:	10bfffc4 	addi	r2,r2,-1
10107ea0:	8085883a 	add	r2,r16,r2
10107ea4:	1085883a 	add	r2,r2,r2
10107ea8:	1085883a 	add	r2,r2,r2
10107eac:	9885883a 	add	r2,r19,r2
10107eb0:	11000517 	ldw	r4,20(r2)
10107eb4:	8020917a 	slli	r16,r16,5
10107eb8:	01074640 	call	10107464 <__hi0bits>
10107ebc:	d8c00817 	ldw	r3,32(sp)
10107ec0:	8085c83a 	sub	r2,r16,r2
10107ec4:	18800015 	stw	r2,0(r3)
10107ec8:	9805883a 	mov	r2,r19
10107ecc:	dfc00717 	ldw	ra,28(sp)
10107ed0:	dd000617 	ldw	r20,24(sp)
10107ed4:	dcc00517 	ldw	r19,20(sp)
10107ed8:	dc800417 	ldw	r18,16(sp)
10107edc:	dc400317 	ldw	r17,12(sp)
10107ee0:	dc000217 	ldw	r16,8(sp)
10107ee4:	dec00804 	addi	sp,sp,32
10107ee8:	f800283a 	ret
10107eec:	d809883a 	mov	r4,sp
10107ef0:	01074cc0 	call	101074cc <__lo0bits>
10107ef4:	d8c00017 	ldw	r3,0(sp)
10107ef8:	04000044 	movi	r16,1
10107efc:	9c000415 	stw	r16,16(r19)
10107f00:	98c00515 	stw	r3,20(r19)
10107f04:	10800804 	addi	r2,r2,32
10107f08:	883fe126 	beq	r17,zero,10107e90 <__d2b+0x8c>
10107f0c:	00c00d44 	movi	r3,53
10107f10:	8c7ef344 	addi	r17,r17,-1075
10107f14:	88a3883a 	add	r17,r17,r2
10107f18:	1885c83a 	sub	r2,r3,r2
10107f1c:	d8c00817 	ldw	r3,32(sp)
10107f20:	94400015 	stw	r17,0(r18)
10107f24:	18800015 	stw	r2,0(r3)
10107f28:	003fe706 	br	10107ec8 <__d2b+0xc4>
10107f2c:	01000804 	movi	r4,32
10107f30:	2089c83a 	sub	r4,r4,r2
10107f34:	1908983a 	sll	r4,r3,r4
10107f38:	d9400117 	ldw	r5,4(sp)
10107f3c:	1886d83a 	srl	r3,r3,r2
10107f40:	2148b03a 	or	r4,r4,r5
10107f44:	99000515 	stw	r4,20(r19)
10107f48:	d8c00015 	stw	r3,0(sp)
10107f4c:	003fca06 	br	10107e78 <__d2b+0x74>

10107f50 <__ratio>:
10107f50:	defff904 	addi	sp,sp,-28
10107f54:	dc400315 	stw	r17,12(sp)
10107f58:	2823883a 	mov	r17,r5
10107f5c:	d9400104 	addi	r5,sp,4
10107f60:	dfc00615 	stw	ra,24(sp)
10107f64:	dcc00515 	stw	r19,20(sp)
10107f68:	dc800415 	stw	r18,16(sp)
10107f6c:	2027883a 	mov	r19,r4
10107f70:	dc000215 	stw	r16,8(sp)
10107f74:	0107cf80 	call	10107cf8 <__b2d>
10107f78:	d80b883a 	mov	r5,sp
10107f7c:	8809883a 	mov	r4,r17
10107f80:	1025883a 	mov	r18,r2
10107f84:	1821883a 	mov	r16,r3
10107f88:	0107cf80 	call	10107cf8 <__b2d>
10107f8c:	8a000417 	ldw	r8,16(r17)
10107f90:	99000417 	ldw	r4,16(r19)
10107f94:	d9400117 	ldw	r5,4(sp)
10107f98:	2209c83a 	sub	r4,r4,r8
10107f9c:	2010917a 	slli	r8,r4,5
10107fa0:	d9000017 	ldw	r4,0(sp)
10107fa4:	2909c83a 	sub	r4,r5,r4
10107fa8:	4109883a 	add	r4,r8,r4
10107fac:	01000e0e 	bge	zero,r4,10107fe8 <__ratio+0x98>
10107fb0:	2008953a 	slli	r4,r4,20
10107fb4:	2421883a 	add	r16,r4,r16
10107fb8:	100d883a 	mov	r6,r2
10107fbc:	180f883a 	mov	r7,r3
10107fc0:	9009883a 	mov	r4,r18
10107fc4:	800b883a 	mov	r5,r16
10107fc8:	010b9e40 	call	1010b9e4 <__divdf3>
10107fcc:	dfc00617 	ldw	ra,24(sp)
10107fd0:	dcc00517 	ldw	r19,20(sp)
10107fd4:	dc800417 	ldw	r18,16(sp)
10107fd8:	dc400317 	ldw	r17,12(sp)
10107fdc:	dc000217 	ldw	r16,8(sp)
10107fe0:	dec00704 	addi	sp,sp,28
10107fe4:	f800283a 	ret
10107fe8:	2008953a 	slli	r4,r4,20
10107fec:	1907c83a 	sub	r3,r3,r4
10107ff0:	003ff106 	br	10107fb8 <__ratio+0x68>

10107ff4 <_mprec_log10>:
10107ff4:	defffe04 	addi	sp,sp,-8
10107ff8:	dc000015 	stw	r16,0(sp)
10107ffc:	dfc00115 	stw	ra,4(sp)
10108000:	008005c4 	movi	r2,23
10108004:	2021883a 	mov	r16,r4
10108008:	11000d0e 	bge	r2,r4,10108040 <_mprec_log10+0x4c>
1010800c:	0005883a 	mov	r2,zero
10108010:	00cffc34 	movhi	r3,16368
10108014:	843fffc4 	addi	r16,r16,-1
10108018:	000d883a 	mov	r6,zero
1010801c:	01d00934 	movhi	r7,16420
10108020:	1009883a 	mov	r4,r2
10108024:	180b883a 	mov	r5,r3
10108028:	010c5240 	call	1010c524 <__muldf3>
1010802c:	803ff91e 	bne	r16,zero,10108014 <_mprec_log10+0x20>
10108030:	dfc00117 	ldw	ra,4(sp)
10108034:	dc000017 	ldw	r16,0(sp)
10108038:	dec00204 	addi	sp,sp,8
1010803c:	f800283a 	ret
10108040:	202090fa 	slli	r16,r4,3
10108044:	00840474 	movhi	r2,4113
10108048:	10bfe604 	addi	r2,r2,-104
1010804c:	1421883a 	add	r16,r2,r16
10108050:	80800017 	ldw	r2,0(r16)
10108054:	80c00117 	ldw	r3,4(r16)
10108058:	dfc00117 	ldw	ra,4(sp)
1010805c:	dc000017 	ldw	r16,0(sp)
10108060:	dec00204 	addi	sp,sp,8
10108064:	f800283a 	ret

10108068 <__copybits>:
10108068:	297fffc4 	addi	r5,r5,-1
1010806c:	280fd17a 	srai	r7,r5,5
10108070:	30c00417 	ldw	r3,16(r6)
10108074:	30800504 	addi	r2,r6,20
10108078:	39c00044 	addi	r7,r7,1
1010807c:	18c7883a 	add	r3,r3,r3
10108080:	39cf883a 	add	r7,r7,r7
10108084:	18c7883a 	add	r3,r3,r3
10108088:	39cf883a 	add	r7,r7,r7
1010808c:	10c7883a 	add	r3,r2,r3
10108090:	21cf883a 	add	r7,r4,r7
10108094:	10c00d2e 	bgeu	r2,r3,101080cc <__copybits+0x64>
10108098:	200b883a 	mov	r5,r4
1010809c:	12000017 	ldw	r8,0(r2)
101080a0:	29400104 	addi	r5,r5,4
101080a4:	10800104 	addi	r2,r2,4
101080a8:	2a3fff15 	stw	r8,-4(r5)
101080ac:	10fffb36 	bltu	r2,r3,1010809c <__copybits+0x34>
101080b0:	1985c83a 	sub	r2,r3,r6
101080b4:	10bffac4 	addi	r2,r2,-21
101080b8:	1004d0ba 	srli	r2,r2,2
101080bc:	10800044 	addi	r2,r2,1
101080c0:	1085883a 	add	r2,r2,r2
101080c4:	1085883a 	add	r2,r2,r2
101080c8:	2089883a 	add	r4,r4,r2
101080cc:	21c0032e 	bgeu	r4,r7,101080dc <__copybits+0x74>
101080d0:	20000015 	stw	zero,0(r4)
101080d4:	21000104 	addi	r4,r4,4
101080d8:	21fffd36 	bltu	r4,r7,101080d0 <__copybits+0x68>
101080dc:	f800283a 	ret

101080e0 <__any_on>:
101080e0:	20c00417 	ldw	r3,16(r4)
101080e4:	2805d17a 	srai	r2,r5,5
101080e8:	21000504 	addi	r4,r4,20
101080ec:	18800d0e 	bge	r3,r2,10108124 <__any_on+0x44>
101080f0:	18c7883a 	add	r3,r3,r3
101080f4:	18c7883a 	add	r3,r3,r3
101080f8:	20c7883a 	add	r3,r4,r3
101080fc:	20c0192e 	bgeu	r4,r3,10108164 <__any_on+0x84>
10108100:	18bfff17 	ldw	r2,-4(r3)
10108104:	18ffff04 	addi	r3,r3,-4
10108108:	1000041e 	bne	r2,zero,1010811c <__any_on+0x3c>
1010810c:	20c0142e 	bgeu	r4,r3,10108160 <__any_on+0x80>
10108110:	18ffff04 	addi	r3,r3,-4
10108114:	19400017 	ldw	r5,0(r3)
10108118:	283ffc26 	beq	r5,zero,1010810c <__any_on+0x2c>
1010811c:	00800044 	movi	r2,1
10108120:	f800283a 	ret
10108124:	10c00a0e 	bge	r2,r3,10108150 <__any_on+0x70>
10108128:	1085883a 	add	r2,r2,r2
1010812c:	1085883a 	add	r2,r2,r2
10108130:	294007cc 	andi	r5,r5,31
10108134:	2087883a 	add	r3,r4,r2
10108138:	283ff026 	beq	r5,zero,101080fc <__any_on+0x1c>
1010813c:	19800017 	ldw	r6,0(r3)
10108140:	3144d83a 	srl	r2,r6,r5
10108144:	114a983a 	sll	r5,r2,r5
10108148:	317ff41e 	bne	r6,r5,1010811c <__any_on+0x3c>
1010814c:	003feb06 	br	101080fc <__any_on+0x1c>
10108150:	1085883a 	add	r2,r2,r2
10108154:	1085883a 	add	r2,r2,r2
10108158:	2087883a 	add	r3,r4,r2
1010815c:	003fe706 	br	101080fc <__any_on+0x1c>
10108160:	f800283a 	ret
10108164:	0005883a 	mov	r2,zero
10108168:	f800283a 	ret

1010816c <_read_r>:
1010816c:	defffd04 	addi	sp,sp,-12
10108170:	2805883a 	mov	r2,r5
10108174:	dc000015 	stw	r16,0(sp)
10108178:	04040474 	movhi	r16,4113
1010817c:	dc400115 	stw	r17,4(sp)
10108180:	300b883a 	mov	r5,r6
10108184:	840de404 	addi	r16,r16,14224
10108188:	2023883a 	mov	r17,r4
1010818c:	380d883a 	mov	r6,r7
10108190:	1009883a 	mov	r4,r2
10108194:	dfc00215 	stw	ra,8(sp)
10108198:	80000015 	stw	zero,0(r16)
1010819c:	010e2940 	call	1010e294 <read>
101081a0:	00ffffc4 	movi	r3,-1
101081a4:	10c00526 	beq	r2,r3,101081bc <_read_r+0x50>
101081a8:	dfc00217 	ldw	ra,8(sp)
101081ac:	dc400117 	ldw	r17,4(sp)
101081b0:	dc000017 	ldw	r16,0(sp)
101081b4:	dec00304 	addi	sp,sp,12
101081b8:	f800283a 	ret
101081bc:	80c00017 	ldw	r3,0(r16)
101081c0:	183ff926 	beq	r3,zero,101081a8 <_read_r+0x3c>
101081c4:	88c00015 	stw	r3,0(r17)
101081c8:	003ff706 	br	101081a8 <_read_r+0x3c>

101081cc <_realloc_r>:
101081cc:	defff604 	addi	sp,sp,-40
101081d0:	dc800215 	stw	r18,8(sp)
101081d4:	dfc00915 	stw	ra,36(sp)
101081d8:	df000815 	stw	fp,32(sp)
101081dc:	ddc00715 	stw	r23,28(sp)
101081e0:	dd800615 	stw	r22,24(sp)
101081e4:	dd400515 	stw	r21,20(sp)
101081e8:	dd000415 	stw	r20,16(sp)
101081ec:	dcc00315 	stw	r19,12(sp)
101081f0:	dc400115 	stw	r17,4(sp)
101081f4:	dc000015 	stw	r16,0(sp)
101081f8:	3025883a 	mov	r18,r6
101081fc:	2800b726 	beq	r5,zero,101084dc <_realloc_r+0x310>
10108200:	282b883a 	mov	r21,r5
10108204:	2029883a 	mov	r20,r4
10108208:	010dfbc0 	call	1010dfbc <__malloc_lock>
1010820c:	a8bfff17 	ldw	r2,-4(r21)
10108210:	043fff04 	movi	r16,-4
10108214:	90c002c4 	addi	r3,r18,11
10108218:	01000584 	movi	r4,22
1010821c:	acfffe04 	addi	r19,r21,-8
10108220:	1420703a 	and	r16,r2,r16
10108224:	20c0332e 	bgeu	r4,r3,101082f4 <_realloc_r+0x128>
10108228:	047ffe04 	movi	r17,-8
1010822c:	1c62703a 	and	r17,r3,r17
10108230:	8807883a 	mov	r3,r17
10108234:	88005816 	blt	r17,zero,10108398 <_realloc_r+0x1cc>
10108238:	8c805736 	bltu	r17,r18,10108398 <_realloc_r+0x1cc>
1010823c:	80c0300e 	bge	r16,r3,10108300 <_realloc_r+0x134>
10108240:	07040474 	movhi	fp,4113
10108244:	e7017604 	addi	fp,fp,1496
10108248:	e1c00217 	ldw	r7,8(fp)
1010824c:	9c09883a 	add	r4,r19,r16
10108250:	22000117 	ldw	r8,4(r4)
10108254:	21c06326 	beq	r4,r7,101083e4 <_realloc_r+0x218>
10108258:	017fff84 	movi	r5,-2
1010825c:	414a703a 	and	r5,r8,r5
10108260:	214b883a 	add	r5,r4,r5
10108264:	29800117 	ldw	r6,4(r5)
10108268:	3180004c 	andi	r6,r6,1
1010826c:	30003f26 	beq	r6,zero,1010836c <_realloc_r+0x1a0>
10108270:	1080004c 	andi	r2,r2,1
10108274:	10008326 	beq	r2,zero,10108484 <_realloc_r+0x2b8>
10108278:	900b883a 	mov	r5,r18
1010827c:	a009883a 	mov	r4,r20
10108280:	0101aa40 	call	10101aa4 <_malloc_r>
10108284:	1025883a 	mov	r18,r2
10108288:	10011e26 	beq	r2,zero,10108704 <_realloc_r+0x538>
1010828c:	a93fff17 	ldw	r4,-4(r21)
10108290:	10fffe04 	addi	r3,r2,-8
10108294:	00bfff84 	movi	r2,-2
10108298:	2084703a 	and	r2,r4,r2
1010829c:	9885883a 	add	r2,r19,r2
101082a0:	1880ee26 	beq	r3,r2,1010865c <_realloc_r+0x490>
101082a4:	81bfff04 	addi	r6,r16,-4
101082a8:	00800904 	movi	r2,36
101082ac:	1180b836 	bltu	r2,r6,10108590 <_realloc_r+0x3c4>
101082b0:	00c004c4 	movi	r3,19
101082b4:	19809636 	bltu	r3,r6,10108510 <_realloc_r+0x344>
101082b8:	9005883a 	mov	r2,r18
101082bc:	a807883a 	mov	r3,r21
101082c0:	19000017 	ldw	r4,0(r3)
101082c4:	11000015 	stw	r4,0(r2)
101082c8:	19000117 	ldw	r4,4(r3)
101082cc:	11000115 	stw	r4,4(r2)
101082d0:	18c00217 	ldw	r3,8(r3)
101082d4:	10c00215 	stw	r3,8(r2)
101082d8:	a80b883a 	mov	r5,r21
101082dc:	a009883a 	mov	r4,r20
101082e0:	0100e740 	call	10100e74 <_free_r>
101082e4:	a009883a 	mov	r4,r20
101082e8:	010dfe00 	call	1010dfe0 <__malloc_unlock>
101082ec:	9005883a 	mov	r2,r18
101082f0:	00001206 	br	1010833c <_realloc_r+0x170>
101082f4:	00c00404 	movi	r3,16
101082f8:	1823883a 	mov	r17,r3
101082fc:	003fce06 	br	10108238 <_realloc_r+0x6c>
10108300:	a825883a 	mov	r18,r21
10108304:	8445c83a 	sub	r2,r16,r17
10108308:	00c003c4 	movi	r3,15
1010830c:	18802636 	bltu	r3,r2,101083a8 <_realloc_r+0x1dc>
10108310:	99800117 	ldw	r6,4(r19)
10108314:	9c07883a 	add	r3,r19,r16
10108318:	3180004c 	andi	r6,r6,1
1010831c:	3420b03a 	or	r16,r6,r16
10108320:	9c000115 	stw	r16,4(r19)
10108324:	18800117 	ldw	r2,4(r3)
10108328:	10800054 	ori	r2,r2,1
1010832c:	18800115 	stw	r2,4(r3)
10108330:	a009883a 	mov	r4,r20
10108334:	010dfe00 	call	1010dfe0 <__malloc_unlock>
10108338:	9005883a 	mov	r2,r18
1010833c:	dfc00917 	ldw	ra,36(sp)
10108340:	df000817 	ldw	fp,32(sp)
10108344:	ddc00717 	ldw	r23,28(sp)
10108348:	dd800617 	ldw	r22,24(sp)
1010834c:	dd400517 	ldw	r21,20(sp)
10108350:	dd000417 	ldw	r20,16(sp)
10108354:	dcc00317 	ldw	r19,12(sp)
10108358:	dc800217 	ldw	r18,8(sp)
1010835c:	dc400117 	ldw	r17,4(sp)
10108360:	dc000017 	ldw	r16,0(sp)
10108364:	dec00a04 	addi	sp,sp,40
10108368:	f800283a 	ret
1010836c:	017fff04 	movi	r5,-4
10108370:	414a703a 	and	r5,r8,r5
10108374:	814d883a 	add	r6,r16,r5
10108378:	30c01f16 	blt	r6,r3,101083f8 <_realloc_r+0x22c>
1010837c:	20800317 	ldw	r2,12(r4)
10108380:	20c00217 	ldw	r3,8(r4)
10108384:	a825883a 	mov	r18,r21
10108388:	3021883a 	mov	r16,r6
1010838c:	18800315 	stw	r2,12(r3)
10108390:	10c00215 	stw	r3,8(r2)
10108394:	003fdb06 	br	10108304 <_realloc_r+0x138>
10108398:	00800304 	movi	r2,12
1010839c:	a0800015 	stw	r2,0(r20)
101083a0:	0005883a 	mov	r2,zero
101083a4:	003fe506 	br	1010833c <_realloc_r+0x170>
101083a8:	98c00117 	ldw	r3,4(r19)
101083ac:	9c4b883a 	add	r5,r19,r17
101083b0:	11000054 	ori	r4,r2,1
101083b4:	18c0004c 	andi	r3,r3,1
101083b8:	1c62b03a 	or	r17,r3,r17
101083bc:	9c400115 	stw	r17,4(r19)
101083c0:	29000115 	stw	r4,4(r5)
101083c4:	2885883a 	add	r2,r5,r2
101083c8:	10c00117 	ldw	r3,4(r2)
101083cc:	29400204 	addi	r5,r5,8
101083d0:	a009883a 	mov	r4,r20
101083d4:	18c00054 	ori	r3,r3,1
101083d8:	10c00115 	stw	r3,4(r2)
101083dc:	0100e740 	call	10100e74 <_free_r>
101083e0:	003fd306 	br	10108330 <_realloc_r+0x164>
101083e4:	017fff04 	movi	r5,-4
101083e8:	414a703a 	and	r5,r8,r5
101083ec:	89800404 	addi	r6,r17,16
101083f0:	8151883a 	add	r8,r16,r5
101083f4:	4180590e 	bge	r8,r6,1010855c <_realloc_r+0x390>
101083f8:	1080004c 	andi	r2,r2,1
101083fc:	103f9e1e 	bne	r2,zero,10108278 <_realloc_r+0xac>
10108400:	adbffe17 	ldw	r22,-8(r21)
10108404:	00bfff04 	movi	r2,-4
10108408:	9dadc83a 	sub	r22,r19,r22
1010840c:	b1800117 	ldw	r6,4(r22)
10108410:	3084703a 	and	r2,r6,r2
10108414:	20002026 	beq	r4,zero,10108498 <_realloc_r+0x2cc>
10108418:	80af883a 	add	r23,r16,r2
1010841c:	b96f883a 	add	r23,r23,r5
10108420:	21c05f26 	beq	r4,r7,101085a0 <_realloc_r+0x3d4>
10108424:	b8c01c16 	blt	r23,r3,10108498 <_realloc_r+0x2cc>
10108428:	20800317 	ldw	r2,12(r4)
1010842c:	20c00217 	ldw	r3,8(r4)
10108430:	81bfff04 	addi	r6,r16,-4
10108434:	01000904 	movi	r4,36
10108438:	18800315 	stw	r2,12(r3)
1010843c:	10c00215 	stw	r3,8(r2)
10108440:	b0c00217 	ldw	r3,8(r22)
10108444:	b0800317 	ldw	r2,12(r22)
10108448:	b4800204 	addi	r18,r22,8
1010844c:	18800315 	stw	r2,12(r3)
10108450:	10c00215 	stw	r3,8(r2)
10108454:	21801b36 	bltu	r4,r6,101084c4 <_realloc_r+0x2f8>
10108458:	008004c4 	movi	r2,19
1010845c:	1180352e 	bgeu	r2,r6,10108534 <_realloc_r+0x368>
10108460:	a8800017 	ldw	r2,0(r21)
10108464:	b0800215 	stw	r2,8(r22)
10108468:	a8800117 	ldw	r2,4(r21)
1010846c:	b0800315 	stw	r2,12(r22)
10108470:	008006c4 	movi	r2,27
10108474:	11807f36 	bltu	r2,r6,10108674 <_realloc_r+0x4a8>
10108478:	b0800404 	addi	r2,r22,16
1010847c:	ad400204 	addi	r21,r21,8
10108480:	00002d06 	br	10108538 <_realloc_r+0x36c>
10108484:	adbffe17 	ldw	r22,-8(r21)
10108488:	00bfff04 	movi	r2,-4
1010848c:	9dadc83a 	sub	r22,r19,r22
10108490:	b1000117 	ldw	r4,4(r22)
10108494:	2084703a 	and	r2,r4,r2
10108498:	b03f7726 	beq	r22,zero,10108278 <_realloc_r+0xac>
1010849c:	80af883a 	add	r23,r16,r2
101084a0:	b8ff7516 	blt	r23,r3,10108278 <_realloc_r+0xac>
101084a4:	b0800317 	ldw	r2,12(r22)
101084a8:	b0c00217 	ldw	r3,8(r22)
101084ac:	81bfff04 	addi	r6,r16,-4
101084b0:	01000904 	movi	r4,36
101084b4:	18800315 	stw	r2,12(r3)
101084b8:	10c00215 	stw	r3,8(r2)
101084bc:	b4800204 	addi	r18,r22,8
101084c0:	21bfe52e 	bgeu	r4,r6,10108458 <_realloc_r+0x28c>
101084c4:	a80b883a 	mov	r5,r21
101084c8:	9009883a 	mov	r4,r18
101084cc:	01070140 	call	10107014 <memmove>
101084d0:	b821883a 	mov	r16,r23
101084d4:	b027883a 	mov	r19,r22
101084d8:	003f8a06 	br	10108304 <_realloc_r+0x138>
101084dc:	300b883a 	mov	r5,r6
101084e0:	dfc00917 	ldw	ra,36(sp)
101084e4:	df000817 	ldw	fp,32(sp)
101084e8:	ddc00717 	ldw	r23,28(sp)
101084ec:	dd800617 	ldw	r22,24(sp)
101084f0:	dd400517 	ldw	r21,20(sp)
101084f4:	dd000417 	ldw	r20,16(sp)
101084f8:	dcc00317 	ldw	r19,12(sp)
101084fc:	dc800217 	ldw	r18,8(sp)
10108500:	dc400117 	ldw	r17,4(sp)
10108504:	dc000017 	ldw	r16,0(sp)
10108508:	dec00a04 	addi	sp,sp,40
1010850c:	0101aa41 	jmpi	10101aa4 <_malloc_r>
10108510:	a8c00017 	ldw	r3,0(r21)
10108514:	90c00015 	stw	r3,0(r18)
10108518:	a8c00117 	ldw	r3,4(r21)
1010851c:	90c00115 	stw	r3,4(r18)
10108520:	00c006c4 	movi	r3,27
10108524:	19804536 	bltu	r3,r6,1010863c <_realloc_r+0x470>
10108528:	90800204 	addi	r2,r18,8
1010852c:	a8c00204 	addi	r3,r21,8
10108530:	003f6306 	br	101082c0 <_realloc_r+0xf4>
10108534:	9005883a 	mov	r2,r18
10108538:	a8c00017 	ldw	r3,0(r21)
1010853c:	b821883a 	mov	r16,r23
10108540:	b027883a 	mov	r19,r22
10108544:	10c00015 	stw	r3,0(r2)
10108548:	a8c00117 	ldw	r3,4(r21)
1010854c:	10c00115 	stw	r3,4(r2)
10108550:	a8c00217 	ldw	r3,8(r21)
10108554:	10c00215 	stw	r3,8(r2)
10108558:	003f6a06 	br	10108304 <_realloc_r+0x138>
1010855c:	9c67883a 	add	r19,r19,r17
10108560:	4445c83a 	sub	r2,r8,r17
10108564:	e4c00215 	stw	r19,8(fp)
10108568:	10800054 	ori	r2,r2,1
1010856c:	98800115 	stw	r2,4(r19)
10108570:	a8bfff17 	ldw	r2,-4(r21)
10108574:	a009883a 	mov	r4,r20
10108578:	1080004c 	andi	r2,r2,1
1010857c:	1462b03a 	or	r17,r2,r17
10108580:	ac7fff15 	stw	r17,-4(r21)
10108584:	010dfe00 	call	1010dfe0 <__malloc_unlock>
10108588:	a805883a 	mov	r2,r21
1010858c:	003f6b06 	br	1010833c <_realloc_r+0x170>
10108590:	a80b883a 	mov	r5,r21
10108594:	9009883a 	mov	r4,r18
10108598:	01070140 	call	10107014 <memmove>
1010859c:	003f4e06 	br	101082d8 <_realloc_r+0x10c>
101085a0:	89000404 	addi	r4,r17,16
101085a4:	b93fbc16 	blt	r23,r4,10108498 <_realloc_r+0x2cc>
101085a8:	b0800317 	ldw	r2,12(r22)
101085ac:	b0c00217 	ldw	r3,8(r22)
101085b0:	81bfff04 	addi	r6,r16,-4
101085b4:	01000904 	movi	r4,36
101085b8:	18800315 	stw	r2,12(r3)
101085bc:	10c00215 	stw	r3,8(r2)
101085c0:	b4800204 	addi	r18,r22,8
101085c4:	21804336 	bltu	r4,r6,101086d4 <_realloc_r+0x508>
101085c8:	008004c4 	movi	r2,19
101085cc:	11803f2e 	bgeu	r2,r6,101086cc <_realloc_r+0x500>
101085d0:	a8800017 	ldw	r2,0(r21)
101085d4:	b0800215 	stw	r2,8(r22)
101085d8:	a8800117 	ldw	r2,4(r21)
101085dc:	b0800315 	stw	r2,12(r22)
101085e0:	008006c4 	movi	r2,27
101085e4:	11803f36 	bltu	r2,r6,101086e4 <_realloc_r+0x518>
101085e8:	b0800404 	addi	r2,r22,16
101085ec:	ad400204 	addi	r21,r21,8
101085f0:	a8c00017 	ldw	r3,0(r21)
101085f4:	10c00015 	stw	r3,0(r2)
101085f8:	a8c00117 	ldw	r3,4(r21)
101085fc:	10c00115 	stw	r3,4(r2)
10108600:	a8c00217 	ldw	r3,8(r21)
10108604:	10c00215 	stw	r3,8(r2)
10108608:	b447883a 	add	r3,r22,r17
1010860c:	bc45c83a 	sub	r2,r23,r17
10108610:	e0c00215 	stw	r3,8(fp)
10108614:	10800054 	ori	r2,r2,1
10108618:	18800115 	stw	r2,4(r3)
1010861c:	b0800117 	ldw	r2,4(r22)
10108620:	a009883a 	mov	r4,r20
10108624:	1080004c 	andi	r2,r2,1
10108628:	1462b03a 	or	r17,r2,r17
1010862c:	b4400115 	stw	r17,4(r22)
10108630:	010dfe00 	call	1010dfe0 <__malloc_unlock>
10108634:	9005883a 	mov	r2,r18
10108638:	003f4006 	br	1010833c <_realloc_r+0x170>
1010863c:	a8c00217 	ldw	r3,8(r21)
10108640:	90c00215 	stw	r3,8(r18)
10108644:	a8c00317 	ldw	r3,12(r21)
10108648:	90c00315 	stw	r3,12(r18)
1010864c:	30801126 	beq	r6,r2,10108694 <_realloc_r+0x4c8>
10108650:	90800404 	addi	r2,r18,16
10108654:	a8c00404 	addi	r3,r21,16
10108658:	003f1906 	br	101082c0 <_realloc_r+0xf4>
1010865c:	90ffff17 	ldw	r3,-4(r18)
10108660:	00bfff04 	movi	r2,-4
10108664:	a825883a 	mov	r18,r21
10108668:	1884703a 	and	r2,r3,r2
1010866c:	80a1883a 	add	r16,r16,r2
10108670:	003f2406 	br	10108304 <_realloc_r+0x138>
10108674:	a8800217 	ldw	r2,8(r21)
10108678:	b0800415 	stw	r2,16(r22)
1010867c:	a8800317 	ldw	r2,12(r21)
10108680:	b0800515 	stw	r2,20(r22)
10108684:	31000a26 	beq	r6,r4,101086b0 <_realloc_r+0x4e4>
10108688:	b0800604 	addi	r2,r22,24
1010868c:	ad400404 	addi	r21,r21,16
10108690:	003fa906 	br	10108538 <_realloc_r+0x36c>
10108694:	a9000417 	ldw	r4,16(r21)
10108698:	90800604 	addi	r2,r18,24
1010869c:	a8c00604 	addi	r3,r21,24
101086a0:	91000415 	stw	r4,16(r18)
101086a4:	a9000517 	ldw	r4,20(r21)
101086a8:	91000515 	stw	r4,20(r18)
101086ac:	003f0406 	br	101082c0 <_realloc_r+0xf4>
101086b0:	a8c00417 	ldw	r3,16(r21)
101086b4:	ad400604 	addi	r21,r21,24
101086b8:	b0800804 	addi	r2,r22,32
101086bc:	b0c00615 	stw	r3,24(r22)
101086c0:	a8ffff17 	ldw	r3,-4(r21)
101086c4:	b0c00715 	stw	r3,28(r22)
101086c8:	003f9b06 	br	10108538 <_realloc_r+0x36c>
101086cc:	9005883a 	mov	r2,r18
101086d0:	003fc706 	br	101085f0 <_realloc_r+0x424>
101086d4:	a80b883a 	mov	r5,r21
101086d8:	9009883a 	mov	r4,r18
101086dc:	01070140 	call	10107014 <memmove>
101086e0:	003fc906 	br	10108608 <_realloc_r+0x43c>
101086e4:	a8800217 	ldw	r2,8(r21)
101086e8:	b0800415 	stw	r2,16(r22)
101086ec:	a8800317 	ldw	r2,12(r21)
101086f0:	b0800515 	stw	r2,20(r22)
101086f4:	31000726 	beq	r6,r4,10108714 <_realloc_r+0x548>
101086f8:	b0800604 	addi	r2,r22,24
101086fc:	ad400404 	addi	r21,r21,16
10108700:	003fbb06 	br	101085f0 <_realloc_r+0x424>
10108704:	a009883a 	mov	r4,r20
10108708:	010dfe00 	call	1010dfe0 <__malloc_unlock>
1010870c:	0005883a 	mov	r2,zero
10108710:	003f0a06 	br	1010833c <_realloc_r+0x170>
10108714:	a8c00417 	ldw	r3,16(r21)
10108718:	ad400604 	addi	r21,r21,24
1010871c:	b0800804 	addi	r2,r22,32
10108720:	b0c00615 	stw	r3,24(r22)
10108724:	a8ffff17 	ldw	r3,-4(r21)
10108728:	b0c00715 	stw	r3,28(r22)
1010872c:	003fb006 	br	101085f0 <_realloc_r+0x424>

10108730 <__fpclassifyd>:
10108730:	00a00034 	movhi	r2,32768
10108734:	10bfffc4 	addi	r2,r2,-1
10108738:	2884703a 	and	r2,r5,r2
1010873c:	10000726 	beq	r2,zero,1010875c <__fpclassifyd+0x2c>
10108740:	00fffc34 	movhi	r3,65520
10108744:	019ff834 	movhi	r6,32736
10108748:	28c7883a 	add	r3,r5,r3
1010874c:	31bfffc4 	addi	r6,r6,-1
10108750:	30c00536 	bltu	r6,r3,10108768 <__fpclassifyd+0x38>
10108754:	00800104 	movi	r2,4
10108758:	f800283a 	ret
1010875c:	2000021e 	bne	r4,zero,10108768 <__fpclassifyd+0x38>
10108760:	00800084 	movi	r2,2
10108764:	f800283a 	ret
10108768:	00dffc34 	movhi	r3,32752
1010876c:	019ff834 	movhi	r6,32736
10108770:	28cb883a 	add	r5,r5,r3
10108774:	31bfffc4 	addi	r6,r6,-1
10108778:	317ff62e 	bgeu	r6,r5,10108754 <__fpclassifyd+0x24>
1010877c:	01400434 	movhi	r5,16
10108780:	297fffc4 	addi	r5,r5,-1
10108784:	28800236 	bltu	r5,r2,10108790 <__fpclassifyd+0x60>
10108788:	008000c4 	movi	r2,3
1010878c:	f800283a 	ret
10108790:	10c00226 	beq	r2,r3,1010879c <__fpclassifyd+0x6c>
10108794:	0005883a 	mov	r2,zero
10108798:	f800283a 	ret
1010879c:	2005003a 	cmpeq	r2,r4,zero
101087a0:	f800283a 	ret

101087a4 <strcmp>:
101087a4:	2144b03a 	or	r2,r4,r5
101087a8:	108000cc 	andi	r2,r2,3
101087ac:	1000171e 	bne	r2,zero,1010880c <strcmp+0x68>
101087b0:	20800017 	ldw	r2,0(r4)
101087b4:	28c00017 	ldw	r3,0(r5)
101087b8:	10c0141e 	bne	r2,r3,1010880c <strcmp+0x68>
101087bc:	027fbff4 	movhi	r9,65279
101087c0:	4a7fbfc4 	addi	r9,r9,-257
101087c4:	0086303a 	nor	r3,zero,r2
101087c8:	02202074 	movhi	r8,32897
101087cc:	1245883a 	add	r2,r2,r9
101087d0:	42202004 	addi	r8,r8,-32640
101087d4:	10c4703a 	and	r2,r2,r3
101087d8:	1204703a 	and	r2,r2,r8
101087dc:	10000226 	beq	r2,zero,101087e8 <strcmp+0x44>
101087e0:	00002306 	br	10108870 <strcmp+0xcc>
101087e4:	1000221e 	bne	r2,zero,10108870 <strcmp+0xcc>
101087e8:	21000104 	addi	r4,r4,4
101087ec:	20c00017 	ldw	r3,0(r4)
101087f0:	29400104 	addi	r5,r5,4
101087f4:	29800017 	ldw	r6,0(r5)
101087f8:	1a4f883a 	add	r7,r3,r9
101087fc:	00c4303a 	nor	r2,zero,r3
10108800:	3884703a 	and	r2,r7,r2
10108804:	1204703a 	and	r2,r2,r8
10108808:	19bff626 	beq	r3,r6,101087e4 <strcmp+0x40>
1010880c:	20800003 	ldbu	r2,0(r4)
10108810:	10c03fcc 	andi	r3,r2,255
10108814:	18c0201c 	xori	r3,r3,128
10108818:	18ffe004 	addi	r3,r3,-128
1010881c:	18000c26 	beq	r3,zero,10108850 <strcmp+0xac>
10108820:	29800007 	ldb	r6,0(r5)
10108824:	19800326 	beq	r3,r6,10108834 <strcmp+0x90>
10108828:	00001306 	br	10108878 <strcmp+0xd4>
1010882c:	29800007 	ldb	r6,0(r5)
10108830:	11800b1e 	bne	r2,r6,10108860 <strcmp+0xbc>
10108834:	21000044 	addi	r4,r4,1
10108838:	20c00003 	ldbu	r3,0(r4)
1010883c:	29400044 	addi	r5,r5,1
10108840:	18803fcc 	andi	r2,r3,255
10108844:	1080201c 	xori	r2,r2,128
10108848:	10bfe004 	addi	r2,r2,-128
1010884c:	103ff71e 	bne	r2,zero,1010882c <strcmp+0x88>
10108850:	0007883a 	mov	r3,zero
10108854:	28800003 	ldbu	r2,0(r5)
10108858:	1885c83a 	sub	r2,r3,r2
1010885c:	f800283a 	ret
10108860:	28800003 	ldbu	r2,0(r5)
10108864:	18c03fcc 	andi	r3,r3,255
10108868:	1885c83a 	sub	r2,r3,r2
1010886c:	f800283a 	ret
10108870:	0005883a 	mov	r2,zero
10108874:	f800283a 	ret
10108878:	10c03fcc 	andi	r3,r2,255
1010887c:	003ff506 	br	10108854 <strcmp+0xb0>

10108880 <__sprint_r.part.0>:
10108880:	28801917 	ldw	r2,100(r5)
10108884:	defff604 	addi	sp,sp,-40
10108888:	dd400515 	stw	r21,20(sp)
1010888c:	dfc00915 	stw	ra,36(sp)
10108890:	df000815 	stw	fp,32(sp)
10108894:	ddc00715 	stw	r23,28(sp)
10108898:	dd800615 	stw	r22,24(sp)
1010889c:	dd000415 	stw	r20,16(sp)
101088a0:	dcc00315 	stw	r19,12(sp)
101088a4:	dc800215 	stw	r18,8(sp)
101088a8:	dc400115 	stw	r17,4(sp)
101088ac:	dc000015 	stw	r16,0(sp)
101088b0:	1088000c 	andi	r2,r2,8192
101088b4:	302b883a 	mov	r21,r6
101088b8:	10002e26 	beq	r2,zero,10108974 <__sprint_r.part.0+0xf4>
101088bc:	30800217 	ldw	r2,8(r6)
101088c0:	35800017 	ldw	r22,0(r6)
101088c4:	10002926 	beq	r2,zero,1010896c <__sprint_r.part.0+0xec>
101088c8:	2827883a 	mov	r19,r5
101088cc:	2029883a 	mov	r20,r4
101088d0:	b5c00104 	addi	r23,r22,4
101088d4:	04bfffc4 	movi	r18,-1
101088d8:	bc400017 	ldw	r17,0(r23)
101088dc:	b4000017 	ldw	r16,0(r22)
101088e0:	0039883a 	mov	fp,zero
101088e4:	8822d0ba 	srli	r17,r17,2
101088e8:	8800031e 	bne	r17,zero,101088f8 <__sprint_r.part.0+0x78>
101088ec:	00001806 	br	10108950 <__sprint_r.part.0+0xd0>
101088f0:	84000104 	addi	r16,r16,4
101088f4:	8f001526 	beq	r17,fp,1010894c <__sprint_r.part.0+0xcc>
101088f8:	81400017 	ldw	r5,0(r16)
101088fc:	980d883a 	mov	r6,r19
10108900:	a009883a 	mov	r4,r20
10108904:	010a0f00 	call	1010a0f0 <_fputwc_r>
10108908:	e7000044 	addi	fp,fp,1
1010890c:	14bff81e 	bne	r2,r18,101088f0 <__sprint_r.part.0+0x70>
10108910:	9005883a 	mov	r2,r18
10108914:	a8000215 	stw	zero,8(r21)
10108918:	a8000115 	stw	zero,4(r21)
1010891c:	dfc00917 	ldw	ra,36(sp)
10108920:	df000817 	ldw	fp,32(sp)
10108924:	ddc00717 	ldw	r23,28(sp)
10108928:	dd800617 	ldw	r22,24(sp)
1010892c:	dd400517 	ldw	r21,20(sp)
10108930:	dd000417 	ldw	r20,16(sp)
10108934:	dcc00317 	ldw	r19,12(sp)
10108938:	dc800217 	ldw	r18,8(sp)
1010893c:	dc400117 	ldw	r17,4(sp)
10108940:	dc000017 	ldw	r16,0(sp)
10108944:	dec00a04 	addi	sp,sp,40
10108948:	f800283a 	ret
1010894c:	a8800217 	ldw	r2,8(r21)
10108950:	8c63883a 	add	r17,r17,r17
10108954:	8c63883a 	add	r17,r17,r17
10108958:	1445c83a 	sub	r2,r2,r17
1010895c:	a8800215 	stw	r2,8(r21)
10108960:	b5800204 	addi	r22,r22,8
10108964:	bdc00204 	addi	r23,r23,8
10108968:	103fdb1e 	bne	r2,zero,101088d8 <__sprint_r.part.0+0x58>
1010896c:	0005883a 	mov	r2,zero
10108970:	003fe806 	br	10108914 <__sprint_r.part.0+0x94>
10108974:	010679c0 	call	1010679c <__sfvwrite_r>
10108978:	003fe606 	br	10108914 <__sprint_r.part.0+0x94>

1010897c <__sprint_r>:
1010897c:	30c00217 	ldw	r3,8(r6)
10108980:	18000126 	beq	r3,zero,10108988 <__sprint_r+0xc>
10108984:	01088801 	jmpi	10108880 <__sprint_r.part.0>
10108988:	30000115 	stw	zero,4(r6)
1010898c:	0005883a 	mov	r2,zero
10108990:	f800283a 	ret

10108994 <___vfiprintf_internal_r>:
10108994:	deffc904 	addi	sp,sp,-220
10108998:	df003515 	stw	fp,212(sp)
1010899c:	dd003115 	stw	r20,196(sp)
101089a0:	dfc03615 	stw	ra,216(sp)
101089a4:	ddc03415 	stw	r23,208(sp)
101089a8:	dd803315 	stw	r22,204(sp)
101089ac:	dd403215 	stw	r21,200(sp)
101089b0:	dcc03015 	stw	r19,192(sp)
101089b4:	dc802f15 	stw	r18,188(sp)
101089b8:	dc402e15 	stw	r17,184(sp)
101089bc:	dc002d15 	stw	r16,180(sp)
101089c0:	d9002015 	stw	r4,128(sp)
101089c4:	d9c02215 	stw	r7,136(sp)
101089c8:	2829883a 	mov	r20,r5
101089cc:	3039883a 	mov	fp,r6
101089d0:	20000226 	beq	r4,zero,101089dc <___vfiprintf_internal_r+0x48>
101089d4:	20800e17 	ldw	r2,56(r4)
101089d8:	1000cf26 	beq	r2,zero,10108d18 <___vfiprintf_internal_r+0x384>
101089dc:	a080030b 	ldhu	r2,12(r20)
101089e0:	10c8000c 	andi	r3,r2,8192
101089e4:	1800061e 	bne	r3,zero,10108a00 <___vfiprintf_internal_r+0x6c>
101089e8:	a1001917 	ldw	r4,100(r20)
101089ec:	00f7ffc4 	movi	r3,-8193
101089f0:	10880014 	ori	r2,r2,8192
101089f4:	20c6703a 	and	r3,r4,r3
101089f8:	a080030d 	sth	r2,12(r20)
101089fc:	a0c01915 	stw	r3,100(r20)
10108a00:	10c0020c 	andi	r3,r2,8
10108a04:	1800a926 	beq	r3,zero,10108cac <___vfiprintf_internal_r+0x318>
10108a08:	a0c00417 	ldw	r3,16(r20)
10108a0c:	1800a726 	beq	r3,zero,10108cac <___vfiprintf_internal_r+0x318>
10108a10:	1080068c 	andi	r2,r2,26
10108a14:	00c00284 	movi	r3,10
10108a18:	10c0ac26 	beq	r2,r3,10108ccc <___vfiprintf_internal_r+0x338>
10108a1c:	da801a04 	addi	r10,sp,104
10108a20:	da801e15 	stw	r10,120(sp)
10108a24:	d8801e17 	ldw	r2,120(sp)
10108a28:	da8019c4 	addi	r10,sp,103
10108a2c:	05840474 	movhi	r22,4113
10108a30:	05c40474 	movhi	r23,4113
10108a34:	da801f15 	stw	r10,124(sp)
10108a38:	1295c83a 	sub	r10,r2,r10
10108a3c:	b5801c04 	addi	r22,r22,112
10108a40:	bdc01804 	addi	r23,r23,96
10108a44:	dec01a15 	stw	sp,104(sp)
10108a48:	d8001c15 	stw	zero,112(sp)
10108a4c:	d8001b15 	stw	zero,108(sp)
10108a50:	d8002615 	stw	zero,152(sp)
10108a54:	d8002315 	stw	zero,140(sp)
10108a58:	da802715 	stw	r10,156(sp)
10108a5c:	d811883a 	mov	r8,sp
10108a60:	dd002115 	stw	r20,132(sp)
10108a64:	e021883a 	mov	r16,fp
10108a68:	80800007 	ldb	r2,0(r16)
10108a6c:	1003ea26 	beq	r2,zero,10109a18 <___vfiprintf_internal_r+0x1084>
10108a70:	00c00944 	movi	r3,37
10108a74:	8025883a 	mov	r18,r16
10108a78:	10c0021e 	bne	r2,r3,10108a84 <___vfiprintf_internal_r+0xf0>
10108a7c:	00001606 	br	10108ad8 <___vfiprintf_internal_r+0x144>
10108a80:	10c00326 	beq	r2,r3,10108a90 <___vfiprintf_internal_r+0xfc>
10108a84:	94800044 	addi	r18,r18,1
10108a88:	90800007 	ldb	r2,0(r18)
10108a8c:	103ffc1e 	bne	r2,zero,10108a80 <___vfiprintf_internal_r+0xec>
10108a90:	9423c83a 	sub	r17,r18,r16
10108a94:	88001026 	beq	r17,zero,10108ad8 <___vfiprintf_internal_r+0x144>
10108a98:	d8c01c17 	ldw	r3,112(sp)
10108a9c:	d8801b17 	ldw	r2,108(sp)
10108aa0:	44000015 	stw	r16,0(r8)
10108aa4:	88c7883a 	add	r3,r17,r3
10108aa8:	10800044 	addi	r2,r2,1
10108aac:	44400115 	stw	r17,4(r8)
10108ab0:	d8c01c15 	stw	r3,112(sp)
10108ab4:	d8801b15 	stw	r2,108(sp)
10108ab8:	010001c4 	movi	r4,7
10108abc:	2080760e 	bge	r4,r2,10108c98 <___vfiprintf_internal_r+0x304>
10108ac0:	1803821e 	bne	r3,zero,101098cc <___vfiprintf_internal_r+0xf38>
10108ac4:	da802317 	ldw	r10,140(sp)
10108ac8:	d8001b15 	stw	zero,108(sp)
10108acc:	d811883a 	mov	r8,sp
10108ad0:	5455883a 	add	r10,r10,r17
10108ad4:	da802315 	stw	r10,140(sp)
10108ad8:	90800007 	ldb	r2,0(r18)
10108adc:	10044626 	beq	r2,zero,10109bf8 <___vfiprintf_internal_r+0x1264>
10108ae0:	90c00047 	ldb	r3,1(r18)
10108ae4:	94000044 	addi	r16,r18,1
10108ae8:	d8001d85 	stb	zero,118(sp)
10108aec:	0009883a 	mov	r4,zero
10108af0:	000f883a 	mov	r7,zero
10108af4:	027fffc4 	movi	r9,-1
10108af8:	0023883a 	mov	r17,zero
10108afc:	0029883a 	mov	r20,zero
10108b00:	01401604 	movi	r5,88
10108b04:	01800244 	movi	r6,9
10108b08:	03400a84 	movi	r13,42
10108b0c:	03001b04 	movi	r12,108
10108b10:	84000044 	addi	r16,r16,1
10108b14:	18bff804 	addi	r2,r3,-32
10108b18:	28827336 	bltu	r5,r2,101094e8 <___vfiprintf_internal_r+0xb54>
10108b1c:	100490ba 	slli	r2,r2,2
10108b20:	02840474 	movhi	r10,4113
10108b24:	52a2cd04 	addi	r10,r10,-29900
10108b28:	1285883a 	add	r2,r2,r10
10108b2c:	10800017 	ldw	r2,0(r2)
10108b30:	1000683a 	jmp	r2
10108b34:	1010921c 	xori	zero,r2,16968
10108b38:	101094e8 	cmpgeui	zero,r2,16979
10108b3c:	101094e8 	cmpgeui	zero,r2,16979
10108b40:	1010923c 	xorhi	zero,r2,16968
10108b44:	101094e8 	cmpgeui	zero,r2,16979
10108b48:	101094e8 	cmpgeui	zero,r2,16979
10108b4c:	101094e8 	cmpgeui	zero,r2,16979
10108b50:	101094e8 	cmpgeui	zero,r2,16979
10108b54:	101094e8 	cmpgeui	zero,r2,16979
10108b58:	101094e8 	cmpgeui	zero,r2,16979
10108b5c:	10109424 	muli	zero,r2,16976
10108b60:	10109440 	call	11010944 <__alt_data_end+0xef0944>
10108b64:	101094e8 	cmpgeui	zero,r2,16979
10108b68:	10108d28 	cmpgeui	zero,r2,16948
10108b6c:	10109450 	cmplti	zero,r2,16977
10108b70:	101094e8 	cmpgeui	zero,r2,16979
10108b74:	10109248 	cmpgei	zero,r2,16969
10108b78:	10109254 	ori	zero,r2,16969
10108b7c:	10109254 	ori	zero,r2,16969
10108b80:	10109254 	ori	zero,r2,16969
10108b84:	10109254 	ori	zero,r2,16969
10108b88:	10109254 	ori	zero,r2,16969
10108b8c:	10109254 	ori	zero,r2,16969
10108b90:	10109254 	ori	zero,r2,16969
10108b94:	10109254 	ori	zero,r2,16969
10108b98:	10109254 	ori	zero,r2,16969
10108b9c:	101094e8 	cmpgeui	zero,r2,16979
10108ba0:	101094e8 	cmpgeui	zero,r2,16979
10108ba4:	101094e8 	cmpgeui	zero,r2,16979
10108ba8:	101094e8 	cmpgeui	zero,r2,16979
10108bac:	101094e8 	cmpgeui	zero,r2,16979
10108bb0:	101094e8 	cmpgeui	zero,r2,16979
10108bb4:	101094e8 	cmpgeui	zero,r2,16979
10108bb8:	101094e8 	cmpgeui	zero,r2,16979
10108bbc:	101094e8 	cmpgeui	zero,r2,16979
10108bc0:	101094e8 	cmpgeui	zero,r2,16979
10108bc4:	10109280 	call	11010928 <__alt_data_end+0xef0928>
10108bc8:	101094e8 	cmpgeui	zero,r2,16979
10108bcc:	101094e8 	cmpgeui	zero,r2,16979
10108bd0:	101094e8 	cmpgeui	zero,r2,16979
10108bd4:	101094e8 	cmpgeui	zero,r2,16979
10108bd8:	101094e8 	cmpgeui	zero,r2,16979
10108bdc:	101094e8 	cmpgeui	zero,r2,16979
10108be0:	101094e8 	cmpgeui	zero,r2,16979
10108be4:	101094e8 	cmpgeui	zero,r2,16979
10108be8:	101094e8 	cmpgeui	zero,r2,16979
10108bec:	101094e8 	cmpgeui	zero,r2,16979
10108bf0:	101092b8 	rdprs	zero,r2,16970
10108bf4:	101094e8 	cmpgeui	zero,r2,16979
10108bf8:	101094e8 	cmpgeui	zero,r2,16979
10108bfc:	101094e8 	cmpgeui	zero,r2,16979
10108c00:	101094e8 	cmpgeui	zero,r2,16979
10108c04:	101094e8 	cmpgeui	zero,r2,16979
10108c08:	10109310 	cmplti	zero,r2,16972
10108c0c:	101094e8 	cmpgeui	zero,r2,16979
10108c10:	101094e8 	cmpgeui	zero,r2,16979
10108c14:	10109380 	call	11010938 <__alt_data_end+0xef0938>
10108c18:	101094e8 	cmpgeui	zero,r2,16979
10108c1c:	101094e8 	cmpgeui	zero,r2,16979
10108c20:	101094e8 	cmpgeui	zero,r2,16979
10108c24:	101094e8 	cmpgeui	zero,r2,16979
10108c28:	101094e8 	cmpgeui	zero,r2,16979
10108c2c:	101094e8 	cmpgeui	zero,r2,16979
10108c30:	101094e8 	cmpgeui	zero,r2,16979
10108c34:	101094e8 	cmpgeui	zero,r2,16979
10108c38:	101094e8 	cmpgeui	zero,r2,16979
10108c3c:	101094e8 	cmpgeui	zero,r2,16979
10108c40:	1010912c 	andhi	zero,r2,16964
10108c44:	10109158 	cmpnei	zero,r2,16965
10108c48:	101094e8 	cmpgeui	zero,r2,16979
10108c4c:	101094e8 	cmpgeui	zero,r2,16979
10108c50:	101094e8 	cmpgeui	zero,r2,16979
10108c54:	10109490 	cmplti	zero,r2,16978
10108c58:	10109158 	cmpnei	zero,r2,16965
10108c5c:	101094e8 	cmpgeui	zero,r2,16979
10108c60:	101094e8 	cmpgeui	zero,r2,16979
10108c64:	10108fec 	andhi	zero,r2,16959
10108c68:	101094e8 	cmpgeui	zero,r2,16979
10108c6c:	10108ffc 	xorhi	zero,r2,16959
10108c70:	10109038 	rdprs	zero,r2,16960
10108c74:	10108d34 	orhi	zero,r2,16948
10108c78:	10108fe0 	cmpeqi	zero,r2,16959
10108c7c:	101094e8 	cmpgeui	zero,r2,16979
10108c80:	101093bc 	xorhi	zero,r2,16974
10108c84:	101094e8 	cmpgeui	zero,r2,16979
10108c88:	10109414 	ori	zero,r2,16976
10108c8c:	101094e8 	cmpgeui	zero,r2,16979
10108c90:	101094e8 	cmpgeui	zero,r2,16979
10108c94:	101090d8 	cmpnei	zero,r2,16963
10108c98:	42000204 	addi	r8,r8,8
10108c9c:	da802317 	ldw	r10,140(sp)
10108ca0:	5455883a 	add	r10,r10,r17
10108ca4:	da802315 	stw	r10,140(sp)
10108ca8:	003f8b06 	br	10108ad8 <___vfiprintf_internal_r+0x144>
10108cac:	d9002017 	ldw	r4,128(sp)
10108cb0:	a00b883a 	mov	r5,r20
10108cb4:	0104cc00 	call	10104cc0 <__swsetup_r>
10108cb8:	1003b11e 	bne	r2,zero,10109b80 <___vfiprintf_internal_r+0x11ec>
10108cbc:	a080030b 	ldhu	r2,12(r20)
10108cc0:	00c00284 	movi	r3,10
10108cc4:	1080068c 	andi	r2,r2,26
10108cc8:	10ff541e 	bne	r2,r3,10108a1c <___vfiprintf_internal_r+0x88>
10108ccc:	a080038f 	ldh	r2,14(r20)
10108cd0:	103f5216 	blt	r2,zero,10108a1c <___vfiprintf_internal_r+0x88>
10108cd4:	d9c02217 	ldw	r7,136(sp)
10108cd8:	d9002017 	ldw	r4,128(sp)
10108cdc:	e00d883a 	mov	r6,fp
10108ce0:	a00b883a 	mov	r5,r20
10108ce4:	0109e0c0 	call	10109e0c <__sbprintf>
10108ce8:	dfc03617 	ldw	ra,216(sp)
10108cec:	df003517 	ldw	fp,212(sp)
10108cf0:	ddc03417 	ldw	r23,208(sp)
10108cf4:	dd803317 	ldw	r22,204(sp)
10108cf8:	dd403217 	ldw	r21,200(sp)
10108cfc:	dd003117 	ldw	r20,196(sp)
10108d00:	dcc03017 	ldw	r19,192(sp)
10108d04:	dc802f17 	ldw	r18,188(sp)
10108d08:	dc402e17 	ldw	r17,184(sp)
10108d0c:	dc002d17 	ldw	r16,180(sp)
10108d10:	dec03704 	addi	sp,sp,220
10108d14:	f800283a 	ret
10108d18:	0100ba80 	call	10100ba8 <__sinit>
10108d1c:	003f2f06 	br	101089dc <___vfiprintf_internal_r+0x48>
10108d20:	0463c83a 	sub	r17,zero,r17
10108d24:	d8802215 	stw	r2,136(sp)
10108d28:	a5000114 	ori	r20,r20,4
10108d2c:	80c00007 	ldb	r3,0(r16)
10108d30:	003f7706 	br	10108b10 <___vfiprintf_internal_r+0x17c>
10108d34:	00800c04 	movi	r2,48
10108d38:	da802217 	ldw	r10,136(sp)
10108d3c:	d8801d05 	stb	r2,116(sp)
10108d40:	00801e04 	movi	r2,120
10108d44:	d8801d45 	stb	r2,117(sp)
10108d48:	d8001d85 	stb	zero,118(sp)
10108d4c:	50c00104 	addi	r3,r10,4
10108d50:	54800017 	ldw	r18,0(r10)
10108d54:	0027883a 	mov	r19,zero
10108d58:	a0800094 	ori	r2,r20,2
10108d5c:	48030b16 	blt	r9,zero,1010998c <___vfiprintf_internal_r+0xff8>
10108d60:	00bfdfc4 	movi	r2,-129
10108d64:	a096703a 	and	r11,r20,r2
10108d68:	d8c02215 	stw	r3,136(sp)
10108d6c:	5d000094 	ori	r20,r11,2
10108d70:	90032b1e 	bne	r18,zero,10109a20 <___vfiprintf_internal_r+0x108c>
10108d74:	00840474 	movhi	r2,4113
10108d78:	10bfb804 	addi	r2,r2,-288
10108d7c:	d8802615 	stw	r2,152(sp)
10108d80:	0039883a 	mov	fp,zero
10108d84:	48017b1e 	bne	r9,zero,10109374 <___vfiprintf_internal_r+0x9e0>
10108d88:	0013883a 	mov	r9,zero
10108d8c:	0027883a 	mov	r19,zero
10108d90:	dd401a04 	addi	r21,sp,104
10108d94:	4825883a 	mov	r18,r9
10108d98:	4cc0010e 	bge	r9,r19,10108da0 <___vfiprintf_internal_r+0x40c>
10108d9c:	9825883a 	mov	r18,r19
10108da0:	e7003fcc 	andi	fp,fp,255
10108da4:	e700201c 	xori	fp,fp,128
10108da8:	e73fe004 	addi	fp,fp,-128
10108dac:	e0000126 	beq	fp,zero,10108db4 <___vfiprintf_internal_r+0x420>
10108db0:	94800044 	addi	r18,r18,1
10108db4:	a380008c 	andi	r14,r20,2
10108db8:	70000126 	beq	r14,zero,10108dc0 <___vfiprintf_internal_r+0x42c>
10108dbc:	94800084 	addi	r18,r18,2
10108dc0:	a700210c 	andi	fp,r20,132
10108dc4:	e001df1e 	bne	fp,zero,10109544 <___vfiprintf_internal_r+0xbb0>
10108dc8:	8c87c83a 	sub	r3,r17,r18
10108dcc:	00c1dd0e 	bge	zero,r3,10109544 <___vfiprintf_internal_r+0xbb0>
10108dd0:	01c00404 	movi	r7,16
10108dd4:	d8801c17 	ldw	r2,112(sp)
10108dd8:	38c3ad0e 	bge	r7,r3,10109c90 <___vfiprintf_internal_r+0x12fc>
10108ddc:	02840474 	movhi	r10,4113
10108de0:	52801c04 	addi	r10,r10,112
10108de4:	dc002915 	stw	r16,164(sp)
10108de8:	d9801b17 	ldw	r6,108(sp)
10108dec:	da802415 	stw	r10,144(sp)
10108df0:	03c001c4 	movi	r15,7
10108df4:	da402515 	stw	r9,148(sp)
10108df8:	db802815 	stw	r14,160(sp)
10108dfc:	1821883a 	mov	r16,r3
10108e00:	00000506 	br	10108e18 <___vfiprintf_internal_r+0x484>
10108e04:	31400084 	addi	r5,r6,2
10108e08:	42000204 	addi	r8,r8,8
10108e0c:	200d883a 	mov	r6,r4
10108e10:	843ffc04 	addi	r16,r16,-16
10108e14:	3c000d0e 	bge	r7,r16,10108e4c <___vfiprintf_internal_r+0x4b8>
10108e18:	10800404 	addi	r2,r2,16
10108e1c:	31000044 	addi	r4,r6,1
10108e20:	45800015 	stw	r22,0(r8)
10108e24:	41c00115 	stw	r7,4(r8)
10108e28:	d8801c15 	stw	r2,112(sp)
10108e2c:	d9001b15 	stw	r4,108(sp)
10108e30:	793ff40e 	bge	r15,r4,10108e04 <___vfiprintf_internal_r+0x470>
10108e34:	1001b51e 	bne	r2,zero,1010950c <___vfiprintf_internal_r+0xb78>
10108e38:	843ffc04 	addi	r16,r16,-16
10108e3c:	000d883a 	mov	r6,zero
10108e40:	01400044 	movi	r5,1
10108e44:	d811883a 	mov	r8,sp
10108e48:	3c3ff316 	blt	r7,r16,10108e18 <___vfiprintf_internal_r+0x484>
10108e4c:	8007883a 	mov	r3,r16
10108e50:	da402517 	ldw	r9,148(sp)
10108e54:	db802817 	ldw	r14,160(sp)
10108e58:	dc002917 	ldw	r16,164(sp)
10108e5c:	da802417 	ldw	r10,144(sp)
10108e60:	1885883a 	add	r2,r3,r2
10108e64:	40c00115 	stw	r3,4(r8)
10108e68:	42800015 	stw	r10,0(r8)
10108e6c:	d8801c15 	stw	r2,112(sp)
10108e70:	d9401b15 	stw	r5,108(sp)
10108e74:	00c001c4 	movi	r3,7
10108e78:	19426016 	blt	r3,r5,101097fc <___vfiprintf_internal_r+0xe68>
10108e7c:	d8c01d87 	ldb	r3,118(sp)
10108e80:	42000204 	addi	r8,r8,8
10108e84:	29000044 	addi	r4,r5,1
10108e88:	1801b31e 	bne	r3,zero,10109558 <___vfiprintf_internal_r+0xbc4>
10108e8c:	7001c026 	beq	r14,zero,10109590 <___vfiprintf_internal_r+0xbfc>
10108e90:	d8c01d04 	addi	r3,sp,116
10108e94:	10800084 	addi	r2,r2,2
10108e98:	40c00015 	stw	r3,0(r8)
10108e9c:	00c00084 	movi	r3,2
10108ea0:	40c00115 	stw	r3,4(r8)
10108ea4:	d8801c15 	stw	r2,112(sp)
10108ea8:	d9001b15 	stw	r4,108(sp)
10108eac:	00c001c4 	movi	r3,7
10108eb0:	1902650e 	bge	r3,r4,10109848 <___vfiprintf_internal_r+0xeb4>
10108eb4:	10029a1e 	bne	r2,zero,10109920 <___vfiprintf_internal_r+0xf8c>
10108eb8:	00c02004 	movi	r3,128
10108ebc:	01000044 	movi	r4,1
10108ec0:	000b883a 	mov	r5,zero
10108ec4:	d811883a 	mov	r8,sp
10108ec8:	e0c1b31e 	bne	fp,r3,10109598 <___vfiprintf_internal_r+0xc04>
10108ecc:	8cb9c83a 	sub	fp,r17,r18
10108ed0:	0701b10e 	bge	zero,fp,10109598 <___vfiprintf_internal_r+0xc04>
10108ed4:	01c00404 	movi	r7,16
10108ed8:	3f03890e 	bge	r7,fp,10109d00 <___vfiprintf_internal_r+0x136c>
10108edc:	00c40474 	movhi	r3,4113
10108ee0:	18c01804 	addi	r3,r3,96
10108ee4:	d8c02415 	stw	r3,144(sp)
10108ee8:	8007883a 	mov	r3,r16
10108eec:	034001c4 	movi	r13,7
10108ef0:	e021883a 	mov	r16,fp
10108ef4:	da402515 	stw	r9,148(sp)
10108ef8:	1839883a 	mov	fp,r3
10108efc:	00000506 	br	10108f14 <___vfiprintf_internal_r+0x580>
10108f00:	29800084 	addi	r6,r5,2
10108f04:	42000204 	addi	r8,r8,8
10108f08:	180b883a 	mov	r5,r3
10108f0c:	843ffc04 	addi	r16,r16,-16
10108f10:	3c000d0e 	bge	r7,r16,10108f48 <___vfiprintf_internal_r+0x5b4>
10108f14:	10800404 	addi	r2,r2,16
10108f18:	28c00044 	addi	r3,r5,1
10108f1c:	45c00015 	stw	r23,0(r8)
10108f20:	41c00115 	stw	r7,4(r8)
10108f24:	d8801c15 	stw	r2,112(sp)
10108f28:	d8c01b15 	stw	r3,108(sp)
10108f2c:	68fff40e 	bge	r13,r3,10108f00 <___vfiprintf_internal_r+0x56c>
10108f30:	1002241e 	bne	r2,zero,101097c4 <___vfiprintf_internal_r+0xe30>
10108f34:	843ffc04 	addi	r16,r16,-16
10108f38:	01800044 	movi	r6,1
10108f3c:	000b883a 	mov	r5,zero
10108f40:	d811883a 	mov	r8,sp
10108f44:	3c3ff316 	blt	r7,r16,10108f14 <___vfiprintf_internal_r+0x580>
10108f48:	da402517 	ldw	r9,148(sp)
10108f4c:	e007883a 	mov	r3,fp
10108f50:	8039883a 	mov	fp,r16
10108f54:	1821883a 	mov	r16,r3
10108f58:	d8c02417 	ldw	r3,144(sp)
10108f5c:	1705883a 	add	r2,r2,fp
10108f60:	47000115 	stw	fp,4(r8)
10108f64:	40c00015 	stw	r3,0(r8)
10108f68:	d8801c15 	stw	r2,112(sp)
10108f6c:	d9801b15 	stw	r6,108(sp)
10108f70:	00c001c4 	movi	r3,7
10108f74:	19827616 	blt	r3,r6,10109950 <___vfiprintf_internal_r+0xfbc>
10108f78:	4cf9c83a 	sub	fp,r9,r19
10108f7c:	42000204 	addi	r8,r8,8
10108f80:	31000044 	addi	r4,r6,1
10108f84:	300b883a 	mov	r5,r6
10108f88:	07018516 	blt	zero,fp,101095a0 <___vfiprintf_internal_r+0xc0c>
10108f8c:	9885883a 	add	r2,r19,r2
10108f90:	45400015 	stw	r21,0(r8)
10108f94:	44c00115 	stw	r19,4(r8)
10108f98:	d8801c15 	stw	r2,112(sp)
10108f9c:	d9001b15 	stw	r4,108(sp)
10108fa0:	00c001c4 	movi	r3,7
10108fa4:	1901dd0e 	bge	r3,r4,1010971c <___vfiprintf_internal_r+0xd88>
10108fa8:	1002401e 	bne	r2,zero,101098ac <___vfiprintf_internal_r+0xf18>
10108fac:	d8001b15 	stw	zero,108(sp)
10108fb0:	a2c0010c 	andi	r11,r20,4
10108fb4:	58000226 	beq	r11,zero,10108fc0 <___vfiprintf_internal_r+0x62c>
10108fb8:	8ca7c83a 	sub	r19,r17,r18
10108fbc:	04c2f216 	blt	zero,r19,10109b88 <___vfiprintf_internal_r+0x11f4>
10108fc0:	8c80010e 	bge	r17,r18,10108fc8 <___vfiprintf_internal_r+0x634>
10108fc4:	9023883a 	mov	r17,r18
10108fc8:	da802317 	ldw	r10,140(sp)
10108fcc:	5455883a 	add	r10,r10,r17
10108fd0:	da802315 	stw	r10,140(sp)
10108fd4:	d8001b15 	stw	zero,108(sp)
10108fd8:	d811883a 	mov	r8,sp
10108fdc:	003ea206 	br	10108a68 <___vfiprintf_internal_r+0xd4>
10108fe0:	a5000814 	ori	r20,r20,32
10108fe4:	80c00007 	ldb	r3,0(r16)
10108fe8:	003ec906 	br	10108b10 <___vfiprintf_internal_r+0x17c>
10108fec:	80c00007 	ldb	r3,0(r16)
10108ff0:	1b030926 	beq	r3,r12,10109c18 <___vfiprintf_internal_r+0x1284>
10108ff4:	a5000414 	ori	r20,r20,16
10108ff8:	003ec506 	br	10108b10 <___vfiprintf_internal_r+0x17c>
10108ffc:	21003fcc 	andi	r4,r4,255
10109000:	20035e1e 	bne	r4,zero,10109d7c <___vfiprintf_internal_r+0x13e8>
10109004:	a080080c 	andi	r2,r20,32
10109008:	1002a526 	beq	r2,zero,10109aa0 <___vfiprintf_internal_r+0x110c>
1010900c:	da802217 	ldw	r10,136(sp)
10109010:	50800017 	ldw	r2,0(r10)
10109014:	da802317 	ldw	r10,140(sp)
10109018:	5007d7fa 	srai	r3,r10,31
1010901c:	da802217 	ldw	r10,136(sp)
10109020:	10c00115 	stw	r3,4(r2)
10109024:	52800104 	addi	r10,r10,4
10109028:	da802215 	stw	r10,136(sp)
1010902c:	da802317 	ldw	r10,140(sp)
10109030:	12800015 	stw	r10,0(r2)
10109034:	003e8c06 	br	10108a68 <___vfiprintf_internal_r+0xd4>
10109038:	21003fcc 	andi	r4,r4,255
1010903c:	2003511e 	bne	r4,zero,10109d84 <___vfiprintf_internal_r+0x13f0>
10109040:	a080080c 	andi	r2,r20,32
10109044:	1000a126 	beq	r2,zero,101092cc <___vfiprintf_internal_r+0x938>
10109048:	da802217 	ldw	r10,136(sp)
1010904c:	d8001d85 	stb	zero,118(sp)
10109050:	50800204 	addi	r2,r10,8
10109054:	54800017 	ldw	r18,0(r10)
10109058:	54c00117 	ldw	r19,4(r10)
1010905c:	4802b416 	blt	r9,zero,10109b30 <___vfiprintf_internal_r+0x119c>
10109060:	013fdfc4 	movi	r4,-129
10109064:	94c6b03a 	or	r3,r18,r19
10109068:	d8802215 	stw	r2,136(sp)
1010906c:	a128703a 	and	r20,r20,r4
10109070:	1800a226 	beq	r3,zero,101092fc <___vfiprintf_internal_r+0x968>
10109074:	0039883a 	mov	fp,zero
10109078:	dd401a04 	addi	r21,sp,104
1010907c:	9006d0fa 	srli	r3,r18,3
10109080:	9808977a 	slli	r4,r19,29
10109084:	9826d0fa 	srli	r19,r19,3
10109088:	948001cc 	andi	r18,r18,7
1010908c:	90800c04 	addi	r2,r18,48
10109090:	ad7fffc4 	addi	r21,r21,-1
10109094:	20e4b03a 	or	r18,r4,r3
10109098:	a8800005 	stb	r2,0(r21)
1010909c:	94c6b03a 	or	r3,r18,r19
101090a0:	183ff61e 	bne	r3,zero,1010907c <___vfiprintf_internal_r+0x6e8>
101090a4:	a0c0004c 	andi	r3,r20,1
101090a8:	18005926 	beq	r3,zero,10109210 <___vfiprintf_internal_r+0x87c>
101090ac:	10803fcc 	andi	r2,r2,255
101090b0:	1080201c 	xori	r2,r2,128
101090b4:	10bfe004 	addi	r2,r2,-128
101090b8:	00c00c04 	movi	r3,48
101090bc:	10c05426 	beq	r2,r3,10109210 <___vfiprintf_internal_r+0x87c>
101090c0:	da801e17 	ldw	r10,120(sp)
101090c4:	a8bfffc4 	addi	r2,r21,-1
101090c8:	a8ffffc5 	stb	r3,-1(r21)
101090cc:	50a7c83a 	sub	r19,r10,r2
101090d0:	102b883a 	mov	r21,r2
101090d4:	003f2f06 	br	10108d94 <___vfiprintf_internal_r+0x400>
101090d8:	21003fcc 	andi	r4,r4,255
101090dc:	2003421e 	bne	r4,zero,10109de8 <___vfiprintf_internal_r+0x1454>
101090e0:	00840474 	movhi	r2,4113
101090e4:	10bfb804 	addi	r2,r2,-288
101090e8:	d8802615 	stw	r2,152(sp)
101090ec:	a080080c 	andi	r2,r20,32
101090f0:	1000aa26 	beq	r2,zero,1010939c <___vfiprintf_internal_r+0xa08>
101090f4:	da802217 	ldw	r10,136(sp)
101090f8:	54800017 	ldw	r18,0(r10)
101090fc:	54c00117 	ldw	r19,4(r10)
10109100:	52800204 	addi	r10,r10,8
10109104:	da802215 	stw	r10,136(sp)
10109108:	a080004c 	andi	r2,r20,1
1010910c:	1001d226 	beq	r2,zero,10109858 <___vfiprintf_internal_r+0xec4>
10109110:	94c4b03a 	or	r2,r18,r19
10109114:	1002351e 	bne	r2,zero,101099ec <___vfiprintf_internal_r+0x1058>
10109118:	d8001d85 	stb	zero,118(sp)
1010911c:	48022216 	blt	r9,zero,101099a8 <___vfiprintf_internal_r+0x1014>
10109120:	00bfdfc4 	movi	r2,-129
10109124:	a0a8703a 	and	r20,r20,r2
10109128:	003f1506 	br	10108d80 <___vfiprintf_internal_r+0x3ec>
1010912c:	da802217 	ldw	r10,136(sp)
10109130:	04800044 	movi	r18,1
10109134:	d8001d85 	stb	zero,118(sp)
10109138:	50800017 	ldw	r2,0(r10)
1010913c:	52800104 	addi	r10,r10,4
10109140:	da802215 	stw	r10,136(sp)
10109144:	d8801005 	stb	r2,64(sp)
10109148:	9027883a 	mov	r19,r18
1010914c:	dd401004 	addi	r21,sp,64
10109150:	0013883a 	mov	r9,zero
10109154:	003f1706 	br	10108db4 <___vfiprintf_internal_r+0x420>
10109158:	21003fcc 	andi	r4,r4,255
1010915c:	2003201e 	bne	r4,zero,10109de0 <___vfiprintf_internal_r+0x144c>
10109160:	a080080c 	andi	r2,r20,32
10109164:	10004b26 	beq	r2,zero,10109294 <___vfiprintf_internal_r+0x900>
10109168:	da802217 	ldw	r10,136(sp)
1010916c:	50800117 	ldw	r2,4(r10)
10109170:	54800017 	ldw	r18,0(r10)
10109174:	52800204 	addi	r10,r10,8
10109178:	da802215 	stw	r10,136(sp)
1010917c:	1027883a 	mov	r19,r2
10109180:	10022c16 	blt	r2,zero,10109a34 <___vfiprintf_internal_r+0x10a0>
10109184:	df001d83 	ldbu	fp,118(sp)
10109188:	48007216 	blt	r9,zero,10109354 <___vfiprintf_internal_r+0x9c0>
1010918c:	00ffdfc4 	movi	r3,-129
10109190:	94c4b03a 	or	r2,r18,r19
10109194:	a0e8703a 	and	r20,r20,r3
10109198:	1000cc26 	beq	r2,zero,101094cc <___vfiprintf_internal_r+0xb38>
1010919c:	98021026 	beq	r19,zero,101099e0 <___vfiprintf_internal_r+0x104c>
101091a0:	dc402415 	stw	r17,144(sp)
101091a4:	dc002515 	stw	r16,148(sp)
101091a8:	9823883a 	mov	r17,r19
101091ac:	9021883a 	mov	r16,r18
101091b0:	dd401a04 	addi	r21,sp,104
101091b4:	4825883a 	mov	r18,r9
101091b8:	4027883a 	mov	r19,r8
101091bc:	8009883a 	mov	r4,r16
101091c0:	880b883a 	mov	r5,r17
101091c4:	01800284 	movi	r6,10
101091c8:	000f883a 	mov	r7,zero
101091cc:	010aa4c0 	call	1010aa4c <__umoddi3>
101091d0:	10800c04 	addi	r2,r2,48
101091d4:	ad7fffc4 	addi	r21,r21,-1
101091d8:	8009883a 	mov	r4,r16
101091dc:	880b883a 	mov	r5,r17
101091e0:	a8800005 	stb	r2,0(r21)
101091e4:	01800284 	movi	r6,10
101091e8:	000f883a 	mov	r7,zero
101091ec:	010a4d40 	call	1010a4d4 <__udivdi3>
101091f0:	1021883a 	mov	r16,r2
101091f4:	10c4b03a 	or	r2,r2,r3
101091f8:	1823883a 	mov	r17,r3
101091fc:	103fef1e 	bne	r2,zero,101091bc <___vfiprintf_internal_r+0x828>
10109200:	dc402417 	ldw	r17,144(sp)
10109204:	dc002517 	ldw	r16,148(sp)
10109208:	9013883a 	mov	r9,r18
1010920c:	9811883a 	mov	r8,r19
10109210:	da801e17 	ldw	r10,120(sp)
10109214:	5567c83a 	sub	r19,r10,r21
10109218:	003ede06 	br	10108d94 <___vfiprintf_internal_r+0x400>
1010921c:	38803fcc 	andi	r2,r7,255
10109220:	1080201c 	xori	r2,r2,128
10109224:	10bfe004 	addi	r2,r2,-128
10109228:	1002371e 	bne	r2,zero,10109b08 <___vfiprintf_internal_r+0x1174>
1010922c:	01000044 	movi	r4,1
10109230:	01c00804 	movi	r7,32
10109234:	80c00007 	ldb	r3,0(r16)
10109238:	003e3506 	br	10108b10 <___vfiprintf_internal_r+0x17c>
1010923c:	a5000054 	ori	r20,r20,1
10109240:	80c00007 	ldb	r3,0(r16)
10109244:	003e3206 	br	10108b10 <___vfiprintf_internal_r+0x17c>
10109248:	a5002014 	ori	r20,r20,128
1010924c:	80c00007 	ldb	r3,0(r16)
10109250:	003e2f06 	br	10108b10 <___vfiprintf_internal_r+0x17c>
10109254:	8015883a 	mov	r10,r16
10109258:	0023883a 	mov	r17,zero
1010925c:	18bff404 	addi	r2,r3,-48
10109260:	50c00007 	ldb	r3,0(r10)
10109264:	8c4002a4 	muli	r17,r17,10
10109268:	84000044 	addi	r16,r16,1
1010926c:	8015883a 	mov	r10,r16
10109270:	1463883a 	add	r17,r2,r17
10109274:	18bff404 	addi	r2,r3,-48
10109278:	30bff92e 	bgeu	r6,r2,10109260 <___vfiprintf_internal_r+0x8cc>
1010927c:	003e2506 	br	10108b14 <___vfiprintf_internal_r+0x180>
10109280:	21003fcc 	andi	r4,r4,255
10109284:	2002d41e 	bne	r4,zero,10109dd8 <___vfiprintf_internal_r+0x1444>
10109288:	a5000414 	ori	r20,r20,16
1010928c:	a080080c 	andi	r2,r20,32
10109290:	103fb51e 	bne	r2,zero,10109168 <___vfiprintf_internal_r+0x7d4>
10109294:	a080040c 	andi	r2,r20,16
10109298:	1001f826 	beq	r2,zero,10109a7c <___vfiprintf_internal_r+0x10e8>
1010929c:	da802217 	ldw	r10,136(sp)
101092a0:	54800017 	ldw	r18,0(r10)
101092a4:	52800104 	addi	r10,r10,4
101092a8:	da802215 	stw	r10,136(sp)
101092ac:	9027d7fa 	srai	r19,r18,31
101092b0:	9805883a 	mov	r2,r19
101092b4:	003fb206 	br	10109180 <___vfiprintf_internal_r+0x7ec>
101092b8:	21003fcc 	andi	r4,r4,255
101092bc:	2002c41e 	bne	r4,zero,10109dd0 <___vfiprintf_internal_r+0x143c>
101092c0:	a5000414 	ori	r20,r20,16
101092c4:	a080080c 	andi	r2,r20,32
101092c8:	103f5f1e 	bne	r2,zero,10109048 <___vfiprintf_internal_r+0x6b4>
101092cc:	a080040c 	andi	r2,r20,16
101092d0:	10020f26 	beq	r2,zero,10109b10 <___vfiprintf_internal_r+0x117c>
101092d4:	da802217 	ldw	r10,136(sp)
101092d8:	d8001d85 	stb	zero,118(sp)
101092dc:	0027883a 	mov	r19,zero
101092e0:	50800104 	addi	r2,r10,4
101092e4:	54800017 	ldw	r18,0(r10)
101092e8:	48021116 	blt	r9,zero,10109b30 <___vfiprintf_internal_r+0x119c>
101092ec:	00ffdfc4 	movi	r3,-129
101092f0:	d8802215 	stw	r2,136(sp)
101092f4:	a0e8703a 	and	r20,r20,r3
101092f8:	903f5e1e 	bne	r18,zero,10109074 <___vfiprintf_internal_r+0x6e0>
101092fc:	0039883a 	mov	fp,zero
10109300:	4802a626 	beq	r9,zero,10109d9c <___vfiprintf_internal_r+0x1408>
10109304:	0025883a 	mov	r18,zero
10109308:	0027883a 	mov	r19,zero
1010930c:	003f5a06 	br	10109078 <___vfiprintf_internal_r+0x6e4>
10109310:	21003fcc 	andi	r4,r4,255
10109314:	20029f1e 	bne	r4,zero,10109d94 <___vfiprintf_internal_r+0x1400>
10109318:	a5000414 	ori	r20,r20,16
1010931c:	a080080c 	andi	r2,r20,32
10109320:	10005e1e 	bne	r2,zero,1010949c <___vfiprintf_internal_r+0xb08>
10109324:	a080040c 	andi	r2,r20,16
10109328:	1001a21e 	bne	r2,zero,101099b4 <___vfiprintf_internal_r+0x1020>
1010932c:	a080100c 	andi	r2,r20,64
10109330:	d8001d85 	stb	zero,118(sp)
10109334:	da802217 	ldw	r10,136(sp)
10109338:	1002231e 	bne	r2,zero,10109bc8 <___vfiprintf_internal_r+0x1234>
1010933c:	50800104 	addi	r2,r10,4
10109340:	54800017 	ldw	r18,0(r10)
10109344:	0027883a 	mov	r19,zero
10109348:	4801a00e 	bge	r9,zero,101099cc <___vfiprintf_internal_r+0x1038>
1010934c:	d8802215 	stw	r2,136(sp)
10109350:	0039883a 	mov	fp,zero
10109354:	94c4b03a 	or	r2,r18,r19
10109358:	103f901e 	bne	r2,zero,1010919c <___vfiprintf_internal_r+0x808>
1010935c:	00800044 	movi	r2,1
10109360:	10803fcc 	andi	r2,r2,255
10109364:	00c00044 	movi	r3,1
10109368:	10c05926 	beq	r2,r3,101094d0 <___vfiprintf_internal_r+0xb3c>
1010936c:	00c00084 	movi	r3,2
10109370:	10ffe41e 	bne	r2,r3,10109304 <___vfiprintf_internal_r+0x970>
10109374:	0025883a 	mov	r18,zero
10109378:	0027883a 	mov	r19,zero
1010937c:	00013d06 	br	10109874 <___vfiprintf_internal_r+0xee0>
10109380:	21003fcc 	andi	r4,r4,255
10109384:	2002811e 	bne	r4,zero,10109d8c <___vfiprintf_internal_r+0x13f8>
10109388:	00840474 	movhi	r2,4113
1010938c:	10bfb304 	addi	r2,r2,-308
10109390:	d8802615 	stw	r2,152(sp)
10109394:	a080080c 	andi	r2,r20,32
10109398:	103f561e 	bne	r2,zero,101090f4 <___vfiprintf_internal_r+0x760>
1010939c:	a080040c 	andi	r2,r20,16
101093a0:	1001d126 	beq	r2,zero,10109ae8 <___vfiprintf_internal_r+0x1154>
101093a4:	da802217 	ldw	r10,136(sp)
101093a8:	0027883a 	mov	r19,zero
101093ac:	54800017 	ldw	r18,0(r10)
101093b0:	52800104 	addi	r10,r10,4
101093b4:	da802215 	stw	r10,136(sp)
101093b8:	003f5306 	br	10109108 <___vfiprintf_internal_r+0x774>
101093bc:	da802217 	ldw	r10,136(sp)
101093c0:	d8001d85 	stb	zero,118(sp)
101093c4:	55400017 	ldw	r21,0(r10)
101093c8:	50c00104 	addi	r3,r10,4
101093cc:	a8024226 	beq	r21,zero,10109cd8 <___vfiprintf_internal_r+0x1344>
101093d0:	48021816 	blt	r9,zero,10109c34 <___vfiprintf_internal_r+0x12a0>
101093d4:	480d883a 	mov	r6,r9
101093d8:	000b883a 	mov	r5,zero
101093dc:	a809883a 	mov	r4,r21
101093e0:	d8c02a15 	stw	r3,168(sp)
101093e4:	da002b15 	stw	r8,172(sp)
101093e8:	da402c15 	stw	r9,176(sp)
101093ec:	0106de80 	call	10106de8 <memchr>
101093f0:	d8c02a17 	ldw	r3,168(sp)
101093f4:	da002b17 	ldw	r8,172(sp)
101093f8:	da402c17 	ldw	r9,176(sp)
101093fc:	10024826 	beq	r2,zero,10109d20 <___vfiprintf_internal_r+0x138c>
10109400:	1567c83a 	sub	r19,r2,r21
10109404:	df001d83 	ldbu	fp,118(sp)
10109408:	d8c02215 	stw	r3,136(sp)
1010940c:	0013883a 	mov	r9,zero
10109410:	003e6006 	br	10108d94 <___vfiprintf_internal_r+0x400>
10109414:	21003fcc 	andi	r4,r4,255
10109418:	203fc026 	beq	r4,zero,1010931c <___vfiprintf_internal_r+0x988>
1010941c:	d9c01d85 	stb	r7,118(sp)
10109420:	003fbe06 	br	1010931c <___vfiprintf_internal_r+0x988>
10109424:	da802217 	ldw	r10,136(sp)
10109428:	54400017 	ldw	r17,0(r10)
1010942c:	50800104 	addi	r2,r10,4
10109430:	883e3b16 	blt	r17,zero,10108d20 <___vfiprintf_internal_r+0x38c>
10109434:	d8802215 	stw	r2,136(sp)
10109438:	80c00007 	ldb	r3,0(r16)
1010943c:	003db406 	br	10108b10 <___vfiprintf_internal_r+0x17c>
10109440:	01000044 	movi	r4,1
10109444:	01c00ac4 	movi	r7,43
10109448:	80c00007 	ldb	r3,0(r16)
1010944c:	003db006 	br	10108b10 <___vfiprintf_internal_r+0x17c>
10109450:	80c00007 	ldb	r3,0(r16)
10109454:	82800044 	addi	r10,r16,1
10109458:	1b423c26 	beq	r3,r13,10109d4c <___vfiprintf_internal_r+0x13b8>
1010945c:	18bff404 	addi	r2,r3,-48
10109460:	0013883a 	mov	r9,zero
10109464:	30822b36 	bltu	r6,r2,10109d14 <___vfiprintf_internal_r+0x1380>
10109468:	50c00007 	ldb	r3,0(r10)
1010946c:	4a4002a4 	muli	r9,r9,10
10109470:	54000044 	addi	r16,r10,1
10109474:	8015883a 	mov	r10,r16
10109478:	4893883a 	add	r9,r9,r2
1010947c:	18bff404 	addi	r2,r3,-48
10109480:	30bff92e 	bgeu	r6,r2,10109468 <___vfiprintf_internal_r+0xad4>
10109484:	483da30e 	bge	r9,zero,10108b14 <___vfiprintf_internal_r+0x180>
10109488:	027fffc4 	movi	r9,-1
1010948c:	003da106 	br	10108b14 <___vfiprintf_internal_r+0x180>
10109490:	a5001014 	ori	r20,r20,64
10109494:	80c00007 	ldb	r3,0(r16)
10109498:	003d9d06 	br	10108b10 <___vfiprintf_internal_r+0x17c>
1010949c:	da802217 	ldw	r10,136(sp)
101094a0:	d8001d85 	stb	zero,118(sp)
101094a4:	50c00204 	addi	r3,r10,8
101094a8:	54800017 	ldw	r18,0(r10)
101094ac:	54c00117 	ldw	r19,4(r10)
101094b0:	4801ca16 	blt	r9,zero,10109bdc <___vfiprintf_internal_r+0x1248>
101094b4:	013fdfc4 	movi	r4,-129
101094b8:	94c4b03a 	or	r2,r18,r19
101094bc:	d8c02215 	stw	r3,136(sp)
101094c0:	a128703a 	and	r20,r20,r4
101094c4:	0039883a 	mov	fp,zero
101094c8:	103f341e 	bne	r2,zero,1010919c <___vfiprintf_internal_r+0x808>
101094cc:	483e2e26 	beq	r9,zero,10108d88 <___vfiprintf_internal_r+0x3f4>
101094d0:	0025883a 	mov	r18,zero
101094d4:	94800c04 	addi	r18,r18,48
101094d8:	dc8019c5 	stb	r18,103(sp)
101094dc:	dcc02717 	ldw	r19,156(sp)
101094e0:	dd4019c4 	addi	r21,sp,103
101094e4:	003e2b06 	br	10108d94 <___vfiprintf_internal_r+0x400>
101094e8:	21003fcc 	andi	r4,r4,255
101094ec:	2002361e 	bne	r4,zero,10109dc8 <___vfiprintf_internal_r+0x1434>
101094f0:	1801c126 	beq	r3,zero,10109bf8 <___vfiprintf_internal_r+0x1264>
101094f4:	04800044 	movi	r18,1
101094f8:	d8c01005 	stb	r3,64(sp)
101094fc:	d8001d85 	stb	zero,118(sp)
10109500:	9027883a 	mov	r19,r18
10109504:	dd401004 	addi	r21,sp,64
10109508:	003f1106 	br	10109150 <___vfiprintf_internal_r+0x7bc>
1010950c:	d9402117 	ldw	r5,132(sp)
10109510:	d9002017 	ldw	r4,128(sp)
10109514:	d9801a04 	addi	r6,sp,104
10109518:	d9c02b15 	stw	r7,172(sp)
1010951c:	dbc02a15 	stw	r15,168(sp)
10109520:	01088800 	call	10108880 <__sprint_r.part.0>
10109524:	d9c02b17 	ldw	r7,172(sp)
10109528:	dbc02a17 	ldw	r15,168(sp)
1010952c:	10006d1e 	bne	r2,zero,101096e4 <___vfiprintf_internal_r+0xd50>
10109530:	d9801b17 	ldw	r6,108(sp)
10109534:	d8801c17 	ldw	r2,112(sp)
10109538:	d811883a 	mov	r8,sp
1010953c:	31400044 	addi	r5,r6,1
10109540:	003e3306 	br	10108e10 <___vfiprintf_internal_r+0x47c>
10109544:	d9401b17 	ldw	r5,108(sp)
10109548:	d8801c17 	ldw	r2,112(sp)
1010954c:	29000044 	addi	r4,r5,1
10109550:	d8c01d87 	ldb	r3,118(sp)
10109554:	183e4d26 	beq	r3,zero,10108e8c <___vfiprintf_internal_r+0x4f8>
10109558:	00c00044 	movi	r3,1
1010955c:	d9401d84 	addi	r5,sp,118
10109560:	10c5883a 	add	r2,r2,r3
10109564:	41400015 	stw	r5,0(r8)
10109568:	40c00115 	stw	r3,4(r8)
1010956c:	d8801c15 	stw	r2,112(sp)
10109570:	d9001b15 	stw	r4,108(sp)
10109574:	014001c4 	movi	r5,7
10109578:	2900a90e 	bge	r5,r4,10109820 <___vfiprintf_internal_r+0xe8c>
1010957c:	1000da1e 	bne	r2,zero,101098e8 <___vfiprintf_internal_r+0xf54>
10109580:	7000ab1e 	bne	r14,zero,10109830 <___vfiprintf_internal_r+0xe9c>
10109584:	000b883a 	mov	r5,zero
10109588:	1809883a 	mov	r4,r3
1010958c:	d811883a 	mov	r8,sp
10109590:	00c02004 	movi	r3,128
10109594:	e0fe4d26 	beq	fp,r3,10108ecc <___vfiprintf_internal_r+0x538>
10109598:	4cf9c83a 	sub	fp,r9,r19
1010959c:	073e7b0e 	bge	zero,fp,10108f8c <___vfiprintf_internal_r+0x5f8>
101095a0:	01c00404 	movi	r7,16
101095a4:	3f01900e 	bge	r7,fp,10109be8 <___vfiprintf_internal_r+0x1254>
101095a8:	00c40474 	movhi	r3,4113
101095ac:	18c01804 	addi	r3,r3,96
101095b0:	d8c02415 	stw	r3,144(sp)
101095b4:	034001c4 	movi	r13,7
101095b8:	00000506 	br	101095d0 <___vfiprintf_internal_r+0xc3c>
101095bc:	29000084 	addi	r4,r5,2
101095c0:	42000204 	addi	r8,r8,8
101095c4:	180b883a 	mov	r5,r3
101095c8:	e73ffc04 	addi	fp,fp,-16
101095cc:	3f000d0e 	bge	r7,fp,10109604 <___vfiprintf_internal_r+0xc70>
101095d0:	10800404 	addi	r2,r2,16
101095d4:	28c00044 	addi	r3,r5,1
101095d8:	45c00015 	stw	r23,0(r8)
101095dc:	41c00115 	stw	r7,4(r8)
101095e0:	d8801c15 	stw	r2,112(sp)
101095e4:	d8c01b15 	stw	r3,108(sp)
101095e8:	68fff40e 	bge	r13,r3,101095bc <___vfiprintf_internal_r+0xc28>
101095ec:	1000101e 	bne	r2,zero,10109630 <___vfiprintf_internal_r+0xc9c>
101095f0:	e73ffc04 	addi	fp,fp,-16
101095f4:	01000044 	movi	r4,1
101095f8:	000b883a 	mov	r5,zero
101095fc:	d811883a 	mov	r8,sp
10109600:	3f3ff316 	blt	r7,fp,101095d0 <___vfiprintf_internal_r+0xc3c>
10109604:	da802417 	ldw	r10,144(sp)
10109608:	1705883a 	add	r2,r2,fp
1010960c:	47000115 	stw	fp,4(r8)
10109610:	42800015 	stw	r10,0(r8)
10109614:	d8801c15 	stw	r2,112(sp)
10109618:	d9001b15 	stw	r4,108(sp)
1010961c:	00c001c4 	movi	r3,7
10109620:	19003616 	blt	r3,r4,101096fc <___vfiprintf_internal_r+0xd68>
10109624:	42000204 	addi	r8,r8,8
10109628:	21000044 	addi	r4,r4,1
1010962c:	003e5706 	br	10108f8c <___vfiprintf_internal_r+0x5f8>
10109630:	d9402117 	ldw	r5,132(sp)
10109634:	d9002017 	ldw	r4,128(sp)
10109638:	d9801a04 	addi	r6,sp,104
1010963c:	d9c02b15 	stw	r7,172(sp)
10109640:	db402a15 	stw	r13,168(sp)
10109644:	01088800 	call	10108880 <__sprint_r.part.0>
10109648:	d9c02b17 	ldw	r7,172(sp)
1010964c:	db402a17 	ldw	r13,168(sp)
10109650:	1000241e 	bne	r2,zero,101096e4 <___vfiprintf_internal_r+0xd50>
10109654:	d9401b17 	ldw	r5,108(sp)
10109658:	d8801c17 	ldw	r2,112(sp)
1010965c:	d811883a 	mov	r8,sp
10109660:	29000044 	addi	r4,r5,1
10109664:	003fd806 	br	101095c8 <___vfiprintf_internal_r+0xc34>
10109668:	d9401b17 	ldw	r5,108(sp)
1010966c:	00c40474 	movhi	r3,4113
10109670:	18c01c04 	addi	r3,r3,112
10109674:	d8c02415 	stw	r3,144(sp)
10109678:	29400044 	addi	r5,r5,1
1010967c:	d8c02417 	ldw	r3,144(sp)
10109680:	14c5883a 	add	r2,r2,r19
10109684:	44c00115 	stw	r19,4(r8)
10109688:	40c00015 	stw	r3,0(r8)
1010968c:	d8801c15 	stw	r2,112(sp)
10109690:	d9401b15 	stw	r5,108(sp)
10109694:	00c001c4 	movi	r3,7
10109698:	1940070e 	bge	r3,r5,101096b8 <___vfiprintf_internal_r+0xd24>
1010969c:	103e4826 	beq	r2,zero,10108fc0 <___vfiprintf_internal_r+0x62c>
101096a0:	d9402117 	ldw	r5,132(sp)
101096a4:	d9002017 	ldw	r4,128(sp)
101096a8:	d9801a04 	addi	r6,sp,104
101096ac:	01088800 	call	10108880 <__sprint_r.part.0>
101096b0:	10000c1e 	bne	r2,zero,101096e4 <___vfiprintf_internal_r+0xd50>
101096b4:	d8801c17 	ldw	r2,112(sp)
101096b8:	8c80010e 	bge	r17,r18,101096c0 <___vfiprintf_internal_r+0xd2c>
101096bc:	9023883a 	mov	r17,r18
101096c0:	da802317 	ldw	r10,140(sp)
101096c4:	5455883a 	add	r10,r10,r17
101096c8:	da802315 	stw	r10,140(sp)
101096cc:	103e4126 	beq	r2,zero,10108fd4 <___vfiprintf_internal_r+0x640>
101096d0:	d9402117 	ldw	r5,132(sp)
101096d4:	d9002017 	ldw	r4,128(sp)
101096d8:	d9801a04 	addi	r6,sp,104
101096dc:	01088800 	call	10108880 <__sprint_r.part.0>
101096e0:	103e3c26 	beq	r2,zero,10108fd4 <___vfiprintf_internal_r+0x640>
101096e4:	dd002117 	ldw	r20,132(sp)
101096e8:	a080030b 	ldhu	r2,12(r20)
101096ec:	1080100c 	andi	r2,r2,64
101096f0:	1001231e 	bne	r2,zero,10109b80 <___vfiprintf_internal_r+0x11ec>
101096f4:	d8802317 	ldw	r2,140(sp)
101096f8:	003d7b06 	br	10108ce8 <___vfiprintf_internal_r+0x354>
101096fc:	1000991e 	bne	r2,zero,10109964 <___vfiprintf_internal_r+0xfd0>
10109700:	00c00044 	movi	r3,1
10109704:	9805883a 	mov	r2,r19
10109708:	dd400015 	stw	r21,0(sp)
1010970c:	dcc00115 	stw	r19,4(sp)
10109710:	dcc01c15 	stw	r19,112(sp)
10109714:	d8c01b15 	stw	r3,108(sp)
10109718:	d811883a 	mov	r8,sp
1010971c:	42000204 	addi	r8,r8,8
10109720:	a2c0010c 	andi	r11,r20,4
10109724:	583fe426 	beq	r11,zero,101096b8 <___vfiprintf_internal_r+0xd24>
10109728:	8ca7c83a 	sub	r19,r17,r18
1010972c:	04ffe20e 	bge	zero,r19,101096b8 <___vfiprintf_internal_r+0xd24>
10109730:	01c00404 	movi	r7,16
10109734:	3cffcc0e 	bge	r7,r19,10109668 <___vfiprintf_internal_r+0xcd4>
10109738:	02840474 	movhi	r10,4113
1010973c:	52801c04 	addi	r10,r10,112
10109740:	d9001b17 	ldw	r4,108(sp)
10109744:	da802415 	stw	r10,144(sp)
10109748:	382b883a 	mov	r21,r7
1010974c:	050001c4 	movi	r20,7
10109750:	df002017 	ldw	fp,128(sp)
10109754:	00000506 	br	1010976c <___vfiprintf_internal_r+0xdd8>
10109758:	21400084 	addi	r5,r4,2
1010975c:	42000204 	addi	r8,r8,8
10109760:	1809883a 	mov	r4,r3
10109764:	9cfffc04 	addi	r19,r19,-16
10109768:	acffc40e 	bge	r21,r19,1010967c <___vfiprintf_internal_r+0xce8>
1010976c:	10800404 	addi	r2,r2,16
10109770:	20c00044 	addi	r3,r4,1
10109774:	45800015 	stw	r22,0(r8)
10109778:	45400115 	stw	r21,4(r8)
1010977c:	d8801c15 	stw	r2,112(sp)
10109780:	d8c01b15 	stw	r3,108(sp)
10109784:	a0fff40e 	bge	r20,r3,10109758 <___vfiprintf_internal_r+0xdc4>
10109788:	1000041e 	bne	r2,zero,1010979c <___vfiprintf_internal_r+0xe08>
1010978c:	01400044 	movi	r5,1
10109790:	0009883a 	mov	r4,zero
10109794:	d811883a 	mov	r8,sp
10109798:	003ff206 	br	10109764 <___vfiprintf_internal_r+0xdd0>
1010979c:	d9402117 	ldw	r5,132(sp)
101097a0:	d9801a04 	addi	r6,sp,104
101097a4:	e009883a 	mov	r4,fp
101097a8:	01088800 	call	10108880 <__sprint_r.part.0>
101097ac:	103fcd1e 	bne	r2,zero,101096e4 <___vfiprintf_internal_r+0xd50>
101097b0:	d9001b17 	ldw	r4,108(sp)
101097b4:	d8801c17 	ldw	r2,112(sp)
101097b8:	d811883a 	mov	r8,sp
101097bc:	21400044 	addi	r5,r4,1
101097c0:	003fe806 	br	10109764 <___vfiprintf_internal_r+0xdd0>
101097c4:	d9402117 	ldw	r5,132(sp)
101097c8:	d9002017 	ldw	r4,128(sp)
101097cc:	d9801a04 	addi	r6,sp,104
101097d0:	d9c02b15 	stw	r7,172(sp)
101097d4:	db402a15 	stw	r13,168(sp)
101097d8:	01088800 	call	10108880 <__sprint_r.part.0>
101097dc:	d9c02b17 	ldw	r7,172(sp)
101097e0:	db402a17 	ldw	r13,168(sp)
101097e4:	103fbf1e 	bne	r2,zero,101096e4 <___vfiprintf_internal_r+0xd50>
101097e8:	d9401b17 	ldw	r5,108(sp)
101097ec:	d8801c17 	ldw	r2,112(sp)
101097f0:	d811883a 	mov	r8,sp
101097f4:	29800044 	addi	r6,r5,1
101097f8:	003dc406 	br	10108f0c <___vfiprintf_internal_r+0x578>
101097fc:	1000d21e 	bne	r2,zero,10109b48 <___vfiprintf_internal_r+0x11b4>
10109800:	d8c01d87 	ldb	r3,118(sp)
10109804:	18009526 	beq	r3,zero,10109a5c <___vfiprintf_internal_r+0x10c8>
10109808:	00800044 	movi	r2,1
1010980c:	d8c01d84 	addi	r3,sp,118
10109810:	1009883a 	mov	r4,r2
10109814:	d8c00015 	stw	r3,0(sp)
10109818:	d8800115 	stw	r2,4(sp)
1010981c:	d811883a 	mov	r8,sp
10109820:	200b883a 	mov	r5,r4
10109824:	42000204 	addi	r8,r8,8
10109828:	21000044 	addi	r4,r4,1
1010982c:	003d9706 	br	10108e8c <___vfiprintf_internal_r+0x4f8>
10109830:	d9001d04 	addi	r4,sp,116
10109834:	00800084 	movi	r2,2
10109838:	d9000015 	stw	r4,0(sp)
1010983c:	d8800115 	stw	r2,4(sp)
10109840:	1809883a 	mov	r4,r3
10109844:	d811883a 	mov	r8,sp
10109848:	200b883a 	mov	r5,r4
1010984c:	42000204 	addi	r8,r8,8
10109850:	21000044 	addi	r4,r4,1
10109854:	003f4e06 	br	10109590 <___vfiprintf_internal_r+0xbfc>
10109858:	d8001d85 	stb	zero,118(sp)
1010985c:	48005016 	blt	r9,zero,101099a0 <___vfiprintf_internal_r+0x100c>
10109860:	00ffdfc4 	movi	r3,-129
10109864:	94c4b03a 	or	r2,r18,r19
10109868:	a0e8703a 	and	r20,r20,r3
1010986c:	103d4426 	beq	r2,zero,10108d80 <___vfiprintf_internal_r+0x3ec>
10109870:	0039883a 	mov	fp,zero
10109874:	d9002617 	ldw	r4,152(sp)
10109878:	dd401a04 	addi	r21,sp,104
1010987c:	908003cc 	andi	r2,r18,15
10109880:	9806973a 	slli	r3,r19,28
10109884:	2085883a 	add	r2,r4,r2
10109888:	9024d13a 	srli	r18,r18,4
1010988c:	10800003 	ldbu	r2,0(r2)
10109890:	9826d13a 	srli	r19,r19,4
10109894:	ad7fffc4 	addi	r21,r21,-1
10109898:	1ca4b03a 	or	r18,r3,r18
1010989c:	a8800005 	stb	r2,0(r21)
101098a0:	94c4b03a 	or	r2,r18,r19
101098a4:	103ff51e 	bne	r2,zero,1010987c <___vfiprintf_internal_r+0xee8>
101098a8:	003e5906 	br	10109210 <___vfiprintf_internal_r+0x87c>
101098ac:	d9402117 	ldw	r5,132(sp)
101098b0:	d9002017 	ldw	r4,128(sp)
101098b4:	d9801a04 	addi	r6,sp,104
101098b8:	01088800 	call	10108880 <__sprint_r.part.0>
101098bc:	103f891e 	bne	r2,zero,101096e4 <___vfiprintf_internal_r+0xd50>
101098c0:	d8801c17 	ldw	r2,112(sp)
101098c4:	d811883a 	mov	r8,sp
101098c8:	003f9506 	br	10109720 <___vfiprintf_internal_r+0xd8c>
101098cc:	d9402117 	ldw	r5,132(sp)
101098d0:	d9002017 	ldw	r4,128(sp)
101098d4:	d9801a04 	addi	r6,sp,104
101098d8:	01088800 	call	10108880 <__sprint_r.part.0>
101098dc:	103f811e 	bne	r2,zero,101096e4 <___vfiprintf_internal_r+0xd50>
101098e0:	d811883a 	mov	r8,sp
101098e4:	003ced06 	br	10108c9c <___vfiprintf_internal_r+0x308>
101098e8:	d9402117 	ldw	r5,132(sp)
101098ec:	d9002017 	ldw	r4,128(sp)
101098f0:	d9801a04 	addi	r6,sp,104
101098f4:	da402c15 	stw	r9,176(sp)
101098f8:	db802a15 	stw	r14,168(sp)
101098fc:	01088800 	call	10108880 <__sprint_r.part.0>
10109900:	da402c17 	ldw	r9,176(sp)
10109904:	db802a17 	ldw	r14,168(sp)
10109908:	103f761e 	bne	r2,zero,101096e4 <___vfiprintf_internal_r+0xd50>
1010990c:	d9401b17 	ldw	r5,108(sp)
10109910:	d8801c17 	ldw	r2,112(sp)
10109914:	d811883a 	mov	r8,sp
10109918:	29000044 	addi	r4,r5,1
1010991c:	003d5b06 	br	10108e8c <___vfiprintf_internal_r+0x4f8>
10109920:	d9402117 	ldw	r5,132(sp)
10109924:	d9002017 	ldw	r4,128(sp)
10109928:	d9801a04 	addi	r6,sp,104
1010992c:	da402c15 	stw	r9,176(sp)
10109930:	01088800 	call	10108880 <__sprint_r.part.0>
10109934:	da402c17 	ldw	r9,176(sp)
10109938:	103f6a1e 	bne	r2,zero,101096e4 <___vfiprintf_internal_r+0xd50>
1010993c:	d9401b17 	ldw	r5,108(sp)
10109940:	d8801c17 	ldw	r2,112(sp)
10109944:	d811883a 	mov	r8,sp
10109948:	29000044 	addi	r4,r5,1
1010994c:	003f1006 	br	10109590 <___vfiprintf_internal_r+0xbfc>
10109950:	1000c31e 	bne	r2,zero,10109c60 <___vfiprintf_internal_r+0x12cc>
10109954:	01000044 	movi	r4,1
10109958:	000b883a 	mov	r5,zero
1010995c:	d811883a 	mov	r8,sp
10109960:	003f0d06 	br	10109598 <___vfiprintf_internal_r+0xc04>
10109964:	d9402117 	ldw	r5,132(sp)
10109968:	d9002017 	ldw	r4,128(sp)
1010996c:	d9801a04 	addi	r6,sp,104
10109970:	01088800 	call	10108880 <__sprint_r.part.0>
10109974:	103f5b1e 	bne	r2,zero,101096e4 <___vfiprintf_internal_r+0xd50>
10109978:	d9001b17 	ldw	r4,108(sp)
1010997c:	d8801c17 	ldw	r2,112(sp)
10109980:	d811883a 	mov	r8,sp
10109984:	21000044 	addi	r4,r4,1
10109988:	003d8006 	br	10108f8c <___vfiprintf_internal_r+0x5f8>
1010998c:	01040474 	movhi	r4,4113
10109990:	213fb804 	addi	r4,r4,-288
10109994:	d9002615 	stw	r4,152(sp)
10109998:	d8c02215 	stw	r3,136(sp)
1010999c:	1029883a 	mov	r20,r2
101099a0:	94c4b03a 	or	r2,r18,r19
101099a4:	103fb21e 	bne	r2,zero,10109870 <___vfiprintf_internal_r+0xedc>
101099a8:	0039883a 	mov	fp,zero
101099ac:	00800084 	movi	r2,2
101099b0:	003e6b06 	br	10109360 <___vfiprintf_internal_r+0x9cc>
101099b4:	da802217 	ldw	r10,136(sp)
101099b8:	d8001d85 	stb	zero,118(sp)
101099bc:	0027883a 	mov	r19,zero
101099c0:	50800104 	addi	r2,r10,4
101099c4:	54800017 	ldw	r18,0(r10)
101099c8:	483e6016 	blt	r9,zero,1010934c <___vfiprintf_internal_r+0x9b8>
101099cc:	00ffdfc4 	movi	r3,-129
101099d0:	d8802215 	stw	r2,136(sp)
101099d4:	a0e8703a 	and	r20,r20,r3
101099d8:	0039883a 	mov	fp,zero
101099dc:	903ebb26 	beq	r18,zero,101094cc <___vfiprintf_internal_r+0xb38>
101099e0:	00800244 	movi	r2,9
101099e4:	14bdee36 	bltu	r2,r18,101091a0 <___vfiprintf_internal_r+0x80c>
101099e8:	003eba06 	br	101094d4 <___vfiprintf_internal_r+0xb40>
101099ec:	00800c04 	movi	r2,48
101099f0:	d8c01d45 	stb	r3,117(sp)
101099f4:	d8801d05 	stb	r2,116(sp)
101099f8:	d8001d85 	stb	zero,118(sp)
101099fc:	a0c00094 	ori	r3,r20,2
10109a00:	4800a916 	blt	r9,zero,10109ca8 <___vfiprintf_internal_r+0x1314>
10109a04:	00bfdfc4 	movi	r2,-129
10109a08:	a096703a 	and	r11,r20,r2
10109a0c:	5d000094 	ori	r20,r11,2
10109a10:	0039883a 	mov	fp,zero
10109a14:	003f9706 	br	10109874 <___vfiprintf_internal_r+0xee0>
10109a18:	8025883a 	mov	r18,r16
10109a1c:	003c2e06 	br	10108ad8 <___vfiprintf_internal_r+0x144>
10109a20:	00840474 	movhi	r2,4113
10109a24:	10bfb804 	addi	r2,r2,-288
10109a28:	0039883a 	mov	fp,zero
10109a2c:	d8802615 	stw	r2,152(sp)
10109a30:	003f9006 	br	10109874 <___vfiprintf_internal_r+0xee0>
10109a34:	04a5c83a 	sub	r18,zero,r18
10109a38:	07000b44 	movi	fp,45
10109a3c:	9004c03a 	cmpne	r2,r18,zero
10109a40:	04e7c83a 	sub	r19,zero,r19
10109a44:	df001d85 	stb	fp,118(sp)
10109a48:	98a7c83a 	sub	r19,r19,r2
10109a4c:	48009f16 	blt	r9,zero,10109ccc <___vfiprintf_internal_r+0x1338>
10109a50:	00bfdfc4 	movi	r2,-129
10109a54:	a0a8703a 	and	r20,r20,r2
10109a58:	003dd006 	br	1010919c <___vfiprintf_internal_r+0x808>
10109a5c:	70004c26 	beq	r14,zero,10109b90 <___vfiprintf_internal_r+0x11fc>
10109a60:	00800084 	movi	r2,2
10109a64:	d8c01d04 	addi	r3,sp,116
10109a68:	d8c00015 	stw	r3,0(sp)
10109a6c:	d8800115 	stw	r2,4(sp)
10109a70:	01000044 	movi	r4,1
10109a74:	d811883a 	mov	r8,sp
10109a78:	003f7306 	br	10109848 <___vfiprintf_internal_r+0xeb4>
10109a7c:	a080100c 	andi	r2,r20,64
10109a80:	da802217 	ldw	r10,136(sp)
10109a84:	103e0626 	beq	r2,zero,101092a0 <___vfiprintf_internal_r+0x90c>
10109a88:	5480000f 	ldh	r18,0(r10)
10109a8c:	52800104 	addi	r10,r10,4
10109a90:	da802215 	stw	r10,136(sp)
10109a94:	9027d7fa 	srai	r19,r18,31
10109a98:	9805883a 	mov	r2,r19
10109a9c:	003db806 	br	10109180 <___vfiprintf_internal_r+0x7ec>
10109aa0:	a080040c 	andi	r2,r20,16
10109aa4:	1000091e 	bne	r2,zero,10109acc <___vfiprintf_internal_r+0x1138>
10109aa8:	a2c0100c 	andi	r11,r20,64
10109aac:	58000726 	beq	r11,zero,10109acc <___vfiprintf_internal_r+0x1138>
10109ab0:	da802217 	ldw	r10,136(sp)
10109ab4:	50800017 	ldw	r2,0(r10)
10109ab8:	52800104 	addi	r10,r10,4
10109abc:	da802215 	stw	r10,136(sp)
10109ac0:	da802317 	ldw	r10,140(sp)
10109ac4:	1280000d 	sth	r10,0(r2)
10109ac8:	003be706 	br	10108a68 <___vfiprintf_internal_r+0xd4>
10109acc:	da802217 	ldw	r10,136(sp)
10109ad0:	50800017 	ldw	r2,0(r10)
10109ad4:	52800104 	addi	r10,r10,4
10109ad8:	da802215 	stw	r10,136(sp)
10109adc:	da802317 	ldw	r10,140(sp)
10109ae0:	12800015 	stw	r10,0(r2)
10109ae4:	003be006 	br	10108a68 <___vfiprintf_internal_r+0xd4>
10109ae8:	a080100c 	andi	r2,r20,64
10109aec:	da802217 	ldw	r10,136(sp)
10109af0:	10003026 	beq	r2,zero,10109bb4 <___vfiprintf_internal_r+0x1220>
10109af4:	5480000b 	ldhu	r18,0(r10)
10109af8:	52800104 	addi	r10,r10,4
10109afc:	0027883a 	mov	r19,zero
10109b00:	da802215 	stw	r10,136(sp)
10109b04:	003d8006 	br	10109108 <___vfiprintf_internal_r+0x774>
10109b08:	80c00007 	ldb	r3,0(r16)
10109b0c:	003c0006 	br	10108b10 <___vfiprintf_internal_r+0x17c>
10109b10:	a080100c 	andi	r2,r20,64
10109b14:	d8001d85 	stb	zero,118(sp)
10109b18:	da802217 	ldw	r10,136(sp)
10109b1c:	1000201e 	bne	r2,zero,10109ba0 <___vfiprintf_internal_r+0x120c>
10109b20:	50800104 	addi	r2,r10,4
10109b24:	54800017 	ldw	r18,0(r10)
10109b28:	0027883a 	mov	r19,zero
10109b2c:	483def0e 	bge	r9,zero,101092ec <___vfiprintf_internal_r+0x958>
10109b30:	94c6b03a 	or	r3,r18,r19
10109b34:	d8802215 	stw	r2,136(sp)
10109b38:	183d4e1e 	bne	r3,zero,10109074 <___vfiprintf_internal_r+0x6e0>
10109b3c:	0039883a 	mov	fp,zero
10109b40:	0005883a 	mov	r2,zero
10109b44:	003e0606 	br	10109360 <___vfiprintf_internal_r+0x9cc>
10109b48:	d9402117 	ldw	r5,132(sp)
10109b4c:	d9002017 	ldw	r4,128(sp)
10109b50:	d9801a04 	addi	r6,sp,104
10109b54:	da402c15 	stw	r9,176(sp)
10109b58:	db802a15 	stw	r14,168(sp)
10109b5c:	01088800 	call	10108880 <__sprint_r.part.0>
10109b60:	da402c17 	ldw	r9,176(sp)
10109b64:	db802a17 	ldw	r14,168(sp)
10109b68:	103ede1e 	bne	r2,zero,101096e4 <___vfiprintf_internal_r+0xd50>
10109b6c:	d9401b17 	ldw	r5,108(sp)
10109b70:	d8801c17 	ldw	r2,112(sp)
10109b74:	d811883a 	mov	r8,sp
10109b78:	29000044 	addi	r4,r5,1
10109b7c:	003e7406 	br	10109550 <___vfiprintf_internal_r+0xbbc>
10109b80:	00bfffc4 	movi	r2,-1
10109b84:	003c5806 	br	10108ce8 <___vfiprintf_internal_r+0x354>
10109b88:	d811883a 	mov	r8,sp
10109b8c:	003ee806 	br	10109730 <___vfiprintf_internal_r+0xd9c>
10109b90:	000b883a 	mov	r5,zero
10109b94:	01000044 	movi	r4,1
10109b98:	d811883a 	mov	r8,sp
10109b9c:	003e7c06 	br	10109590 <___vfiprintf_internal_r+0xbfc>
10109ba0:	50800104 	addi	r2,r10,4
10109ba4:	5480000b 	ldhu	r18,0(r10)
10109ba8:	0027883a 	mov	r19,zero
10109bac:	483dcf0e 	bge	r9,zero,101092ec <___vfiprintf_internal_r+0x958>
10109bb0:	003fdf06 	br	10109b30 <___vfiprintf_internal_r+0x119c>
10109bb4:	54800017 	ldw	r18,0(r10)
10109bb8:	52800104 	addi	r10,r10,4
10109bbc:	0027883a 	mov	r19,zero
10109bc0:	da802215 	stw	r10,136(sp)
10109bc4:	003d5006 	br	10109108 <___vfiprintf_internal_r+0x774>
10109bc8:	50800104 	addi	r2,r10,4
10109bcc:	5480000b 	ldhu	r18,0(r10)
10109bd0:	0027883a 	mov	r19,zero
10109bd4:	483f7d0e 	bge	r9,zero,101099cc <___vfiprintf_internal_r+0x1038>
10109bd8:	003ddc06 	br	1010934c <___vfiprintf_internal_r+0x9b8>
10109bdc:	d8c02215 	stw	r3,136(sp)
10109be0:	0039883a 	mov	fp,zero
10109be4:	003ddb06 	br	10109354 <___vfiprintf_internal_r+0x9c0>
10109be8:	02840474 	movhi	r10,4113
10109bec:	52801804 	addi	r10,r10,96
10109bf0:	da802415 	stw	r10,144(sp)
10109bf4:	003e8306 	br	10109604 <___vfiprintf_internal_r+0xc70>
10109bf8:	d8801c17 	ldw	r2,112(sp)
10109bfc:	dd002117 	ldw	r20,132(sp)
10109c00:	103eb926 	beq	r2,zero,101096e8 <___vfiprintf_internal_r+0xd54>
10109c04:	d9002017 	ldw	r4,128(sp)
10109c08:	d9801a04 	addi	r6,sp,104
10109c0c:	a00b883a 	mov	r5,r20
10109c10:	01088800 	call	10108880 <__sprint_r.part.0>
10109c14:	003eb406 	br	101096e8 <___vfiprintf_internal_r+0xd54>
10109c18:	80c00043 	ldbu	r3,1(r16)
10109c1c:	a5000814 	ori	r20,r20,32
10109c20:	84000044 	addi	r16,r16,1
10109c24:	18c03fcc 	andi	r3,r3,255
10109c28:	18c0201c 	xori	r3,r3,128
10109c2c:	18ffe004 	addi	r3,r3,-128
10109c30:	003bb706 	br	10108b10 <___vfiprintf_internal_r+0x17c>
10109c34:	a809883a 	mov	r4,r21
10109c38:	d8c02a15 	stw	r3,168(sp)
10109c3c:	da002b15 	stw	r8,172(sp)
10109c40:	01028f80 	call	101028f8 <strlen>
10109c44:	d8c02a17 	ldw	r3,168(sp)
10109c48:	1027883a 	mov	r19,r2
10109c4c:	df001d83 	ldbu	fp,118(sp)
10109c50:	d8c02215 	stw	r3,136(sp)
10109c54:	0013883a 	mov	r9,zero
10109c58:	da002b17 	ldw	r8,172(sp)
10109c5c:	003c4d06 	br	10108d94 <___vfiprintf_internal_r+0x400>
10109c60:	d9402117 	ldw	r5,132(sp)
10109c64:	d9002017 	ldw	r4,128(sp)
10109c68:	d9801a04 	addi	r6,sp,104
10109c6c:	da402c15 	stw	r9,176(sp)
10109c70:	01088800 	call	10108880 <__sprint_r.part.0>
10109c74:	da402c17 	ldw	r9,176(sp)
10109c78:	103e9a1e 	bne	r2,zero,101096e4 <___vfiprintf_internal_r+0xd50>
10109c7c:	d9401b17 	ldw	r5,108(sp)
10109c80:	d8801c17 	ldw	r2,112(sp)
10109c84:	d811883a 	mov	r8,sp
10109c88:	29000044 	addi	r4,r5,1
10109c8c:	003e4206 	br	10109598 <___vfiprintf_internal_r+0xc04>
10109c90:	d9401b17 	ldw	r5,108(sp)
10109c94:	01040474 	movhi	r4,4113
10109c98:	21001c04 	addi	r4,r4,112
10109c9c:	d9002415 	stw	r4,144(sp)
10109ca0:	29400044 	addi	r5,r5,1
10109ca4:	003c6d06 	br	10108e5c <___vfiprintf_internal_r+0x4c8>
10109ca8:	0039883a 	mov	fp,zero
10109cac:	00800084 	movi	r2,2
10109cb0:	10803fcc 	andi	r2,r2,255
10109cb4:	01000044 	movi	r4,1
10109cb8:	11001e26 	beq	r2,r4,10109d34 <___vfiprintf_internal_r+0x13a0>
10109cbc:	01000084 	movi	r4,2
10109cc0:	11001e1e 	bne	r2,r4,10109d3c <___vfiprintf_internal_r+0x13a8>
10109cc4:	1829883a 	mov	r20,r3
10109cc8:	003eea06 	br	10109874 <___vfiprintf_internal_r+0xee0>
10109ccc:	a007883a 	mov	r3,r20
10109cd0:	00800044 	movi	r2,1
10109cd4:	003ff606 	br	10109cb0 <___vfiprintf_internal_r+0x131c>
10109cd8:	00800184 	movi	r2,6
10109cdc:	1240012e 	bgeu	r2,r9,10109ce4 <___vfiprintf_internal_r+0x1350>
10109ce0:	1013883a 	mov	r9,r2
10109ce4:	4827883a 	mov	r19,r9
10109ce8:	4825883a 	mov	r18,r9
10109cec:	48001516 	blt	r9,zero,10109d44 <___vfiprintf_internal_r+0x13b0>
10109cf0:	05440474 	movhi	r21,4113
10109cf4:	d8c02215 	stw	r3,136(sp)
10109cf8:	ad7fbd04 	addi	r21,r21,-268
10109cfc:	003d1406 	br	10109150 <___vfiprintf_internal_r+0x7bc>
10109d00:	02840474 	movhi	r10,4113
10109d04:	52801804 	addi	r10,r10,96
10109d08:	da802415 	stw	r10,144(sp)
10109d0c:	200d883a 	mov	r6,r4
10109d10:	003c9106 	br	10108f58 <___vfiprintf_internal_r+0x5c4>
10109d14:	5021883a 	mov	r16,r10
10109d18:	0013883a 	mov	r9,zero
10109d1c:	003b7d06 	br	10108b14 <___vfiprintf_internal_r+0x180>
10109d20:	4827883a 	mov	r19,r9
10109d24:	df001d83 	ldbu	fp,118(sp)
10109d28:	d8c02215 	stw	r3,136(sp)
10109d2c:	0013883a 	mov	r9,zero
10109d30:	003c1806 	br	10108d94 <___vfiprintf_internal_r+0x400>
10109d34:	1829883a 	mov	r20,r3
10109d38:	003d1806 	br	1010919c <___vfiprintf_internal_r+0x808>
10109d3c:	1829883a 	mov	r20,r3
10109d40:	003ccd06 	br	10109078 <___vfiprintf_internal_r+0x6e4>
10109d44:	0025883a 	mov	r18,zero
10109d48:	003fe906 	br	10109cf0 <___vfiprintf_internal_r+0x135c>
10109d4c:	d8802217 	ldw	r2,136(sp)
10109d50:	80c00043 	ldbu	r3,1(r16)
10109d54:	5021883a 	mov	r16,r10
10109d58:	12400017 	ldw	r9,0(r2)
10109d5c:	10800104 	addi	r2,r2,4
10109d60:	d8802215 	stw	r2,136(sp)
10109d64:	483faf0e 	bge	r9,zero,10109c24 <___vfiprintf_internal_r+0x1290>
10109d68:	18c03fcc 	andi	r3,r3,255
10109d6c:	18c0201c 	xori	r3,r3,128
10109d70:	027fffc4 	movi	r9,-1
10109d74:	18ffe004 	addi	r3,r3,-128
10109d78:	003b6506 	br	10108b10 <___vfiprintf_internal_r+0x17c>
10109d7c:	d9c01d85 	stb	r7,118(sp)
10109d80:	003ca006 	br	10109004 <___vfiprintf_internal_r+0x670>
10109d84:	d9c01d85 	stb	r7,118(sp)
10109d88:	003cad06 	br	10109040 <___vfiprintf_internal_r+0x6ac>
10109d8c:	d9c01d85 	stb	r7,118(sp)
10109d90:	003d7d06 	br	10109388 <___vfiprintf_internal_r+0x9f4>
10109d94:	d9c01d85 	stb	r7,118(sp)
10109d98:	003d5f06 	br	10109318 <___vfiprintf_internal_r+0x984>
10109d9c:	a080004c 	andi	r2,r20,1
10109da0:	0039883a 	mov	fp,zero
10109da4:	10000526 	beq	r2,zero,10109dbc <___vfiprintf_internal_r+0x1428>
10109da8:	00800c04 	movi	r2,48
10109dac:	d88019c5 	stb	r2,103(sp)
10109db0:	dcc02717 	ldw	r19,156(sp)
10109db4:	dd4019c4 	addi	r21,sp,103
10109db8:	003bf606 	br	10108d94 <___vfiprintf_internal_r+0x400>
10109dbc:	0027883a 	mov	r19,zero
10109dc0:	dd401a04 	addi	r21,sp,104
10109dc4:	003bf306 	br	10108d94 <___vfiprintf_internal_r+0x400>
10109dc8:	d9c01d85 	stb	r7,118(sp)
10109dcc:	003dc806 	br	101094f0 <___vfiprintf_internal_r+0xb5c>
10109dd0:	d9c01d85 	stb	r7,118(sp)
10109dd4:	003d3a06 	br	101092c0 <___vfiprintf_internal_r+0x92c>
10109dd8:	d9c01d85 	stb	r7,118(sp)
10109ddc:	003d2a06 	br	10109288 <___vfiprintf_internal_r+0x8f4>
10109de0:	d9c01d85 	stb	r7,118(sp)
10109de4:	003cde06 	br	10109160 <___vfiprintf_internal_r+0x7cc>
10109de8:	d9c01d85 	stb	r7,118(sp)
10109dec:	003cbc06 	br	101090e0 <___vfiprintf_internal_r+0x74c>

10109df0 <__vfiprintf_internal>:
10109df0:	00840474 	movhi	r2,4113
10109df4:	10871904 	addi	r2,r2,7268
10109df8:	300f883a 	mov	r7,r6
10109dfc:	280d883a 	mov	r6,r5
10109e00:	200b883a 	mov	r5,r4
10109e04:	11000017 	ldw	r4,0(r2)
10109e08:	01089941 	jmpi	10108994 <___vfiprintf_internal_r>

10109e0c <__sbprintf>:
10109e0c:	2880030b 	ldhu	r2,12(r5)
10109e10:	2ac01917 	ldw	r11,100(r5)
10109e14:	2a80038b 	ldhu	r10,14(r5)
10109e18:	2a400717 	ldw	r9,28(r5)
10109e1c:	2a000917 	ldw	r8,36(r5)
10109e20:	defee204 	addi	sp,sp,-1144
10109e24:	00c10004 	movi	r3,1024
10109e28:	dc011a15 	stw	r16,1128(sp)
10109e2c:	10bfff4c 	andi	r2,r2,65533
10109e30:	2821883a 	mov	r16,r5
10109e34:	d8cb883a 	add	r5,sp,r3
10109e38:	dc811c15 	stw	r18,1136(sp)
10109e3c:	dc411b15 	stw	r17,1132(sp)
10109e40:	dfc11d15 	stw	ra,1140(sp)
10109e44:	2025883a 	mov	r18,r4
10109e48:	d881030d 	sth	r2,1036(sp)
10109e4c:	dac11915 	stw	r11,1124(sp)
10109e50:	da81038d 	sth	r10,1038(sp)
10109e54:	da410715 	stw	r9,1052(sp)
10109e58:	da010915 	stw	r8,1060(sp)
10109e5c:	dec10015 	stw	sp,1024(sp)
10109e60:	dec10415 	stw	sp,1040(sp)
10109e64:	d8c10215 	stw	r3,1032(sp)
10109e68:	d8c10515 	stw	r3,1044(sp)
10109e6c:	d8010615 	stw	zero,1048(sp)
10109e70:	01089940 	call	10108994 <___vfiprintf_internal_r>
10109e74:	1023883a 	mov	r17,r2
10109e78:	10000416 	blt	r2,zero,10109e8c <__sbprintf+0x80>
10109e7c:	d9410004 	addi	r5,sp,1024
10109e80:	9009883a 	mov	r4,r18
10109e84:	01007cc0 	call	101007cc <_fflush_r>
10109e88:	10000d1e 	bne	r2,zero,10109ec0 <__sbprintf+0xb4>
10109e8c:	d881030b 	ldhu	r2,1036(sp)
10109e90:	1080100c 	andi	r2,r2,64
10109e94:	10000326 	beq	r2,zero,10109ea4 <__sbprintf+0x98>
10109e98:	8080030b 	ldhu	r2,12(r16)
10109e9c:	10801014 	ori	r2,r2,64
10109ea0:	8080030d 	sth	r2,12(r16)
10109ea4:	8805883a 	mov	r2,r17
10109ea8:	dfc11d17 	ldw	ra,1140(sp)
10109eac:	dc811c17 	ldw	r18,1136(sp)
10109eb0:	dc411b17 	ldw	r17,1132(sp)
10109eb4:	dc011a17 	ldw	r16,1128(sp)
10109eb8:	dec11e04 	addi	sp,sp,1144
10109ebc:	f800283a 	ret
10109ec0:	047fffc4 	movi	r17,-1
10109ec4:	003ff106 	br	10109e8c <__sbprintf+0x80>

10109ec8 <_calloc_r>:
10109ec8:	298b383a 	mul	r5,r5,r6
10109ecc:	defffe04 	addi	sp,sp,-8
10109ed0:	dfc00115 	stw	ra,4(sp)
10109ed4:	dc000015 	stw	r16,0(sp)
10109ed8:	0101aa40 	call	10101aa4 <_malloc_r>
10109edc:	10002926 	beq	r2,zero,10109f84 <_calloc_r+0xbc>
10109ee0:	11bfff17 	ldw	r6,-4(r2)
10109ee4:	1021883a 	mov	r16,r2
10109ee8:	00bfff04 	movi	r2,-4
10109eec:	308c703a 	and	r6,r6,r2
10109ef0:	00c00904 	movi	r3,36
10109ef4:	308d883a 	add	r6,r6,r2
10109ef8:	19801636 	bltu	r3,r6,10109f54 <_calloc_r+0x8c>
10109efc:	008004c4 	movi	r2,19
10109f00:	11800b2e 	bgeu	r2,r6,10109f30 <_calloc_r+0x68>
10109f04:	80000015 	stw	zero,0(r16)
10109f08:	80000115 	stw	zero,4(r16)
10109f0c:	008006c4 	movi	r2,27
10109f10:	11801a2e 	bgeu	r2,r6,10109f7c <_calloc_r+0xb4>
10109f14:	80000215 	stw	zero,8(r16)
10109f18:	80000315 	stw	zero,12(r16)
10109f1c:	30c0151e 	bne	r6,r3,10109f74 <_calloc_r+0xac>
10109f20:	80000415 	stw	zero,16(r16)
10109f24:	80800604 	addi	r2,r16,24
10109f28:	80000515 	stw	zero,20(r16)
10109f2c:	00000106 	br	10109f34 <_calloc_r+0x6c>
10109f30:	8005883a 	mov	r2,r16
10109f34:	10000015 	stw	zero,0(r2)
10109f38:	10000115 	stw	zero,4(r2)
10109f3c:	10000215 	stw	zero,8(r2)
10109f40:	8005883a 	mov	r2,r16
10109f44:	dfc00117 	ldw	ra,4(sp)
10109f48:	dc000017 	ldw	r16,0(sp)
10109f4c:	dec00204 	addi	sp,sp,8
10109f50:	f800283a 	ret
10109f54:	000b883a 	mov	r5,zero
10109f58:	8009883a 	mov	r4,r16
10109f5c:	01022b00 	call	101022b0 <memset>
10109f60:	8005883a 	mov	r2,r16
10109f64:	dfc00117 	ldw	ra,4(sp)
10109f68:	dc000017 	ldw	r16,0(sp)
10109f6c:	dec00204 	addi	sp,sp,8
10109f70:	f800283a 	ret
10109f74:	80800404 	addi	r2,r16,16
10109f78:	003fee06 	br	10109f34 <_calloc_r+0x6c>
10109f7c:	80800204 	addi	r2,r16,8
10109f80:	003fec06 	br	10109f34 <_calloc_r+0x6c>
10109f84:	0005883a 	mov	r2,zero
10109f88:	003fee06 	br	10109f44 <_calloc_r+0x7c>

10109f8c <__fputwc>:
10109f8c:	defff804 	addi	sp,sp,-32
10109f90:	dcc00415 	stw	r19,16(sp)
10109f94:	dc800315 	stw	r18,12(sp)
10109f98:	dc000115 	stw	r16,4(sp)
10109f9c:	dfc00715 	stw	ra,28(sp)
10109fa0:	dd400615 	stw	r21,24(sp)
10109fa4:	dd000515 	stw	r20,20(sp)
10109fa8:	dc400215 	stw	r17,8(sp)
10109fac:	2027883a 	mov	r19,r4
10109fb0:	2825883a 	mov	r18,r5
10109fb4:	3021883a 	mov	r16,r6
10109fb8:	0106d340 	call	10106d34 <__locale_mb_cur_max>
10109fbc:	00c00044 	movi	r3,1
10109fc0:	10c03e26 	beq	r2,r3,1010a0bc <__fputwc+0x130>
10109fc4:	81c01704 	addi	r7,r16,92
10109fc8:	900d883a 	mov	r6,r18
10109fcc:	d80b883a 	mov	r5,sp
10109fd0:	9809883a 	mov	r4,r19
10109fd4:	010a2ec0 	call	1010a2ec <_wcrtomb_r>
10109fd8:	1029883a 	mov	r20,r2
10109fdc:	00bfffc4 	movi	r2,-1
10109fe0:	a0802026 	beq	r20,r2,1010a064 <__fputwc+0xd8>
10109fe4:	d9400003 	ldbu	r5,0(sp)
10109fe8:	a0001c26 	beq	r20,zero,1010a05c <__fputwc+0xd0>
10109fec:	0023883a 	mov	r17,zero
10109ff0:	05400284 	movi	r21,10
10109ff4:	00000906 	br	1010a01c <__fputwc+0x90>
10109ff8:	80800017 	ldw	r2,0(r16)
10109ffc:	11400005 	stb	r5,0(r2)
1010a000:	80c00017 	ldw	r3,0(r16)
1010a004:	18c00044 	addi	r3,r3,1
1010a008:	80c00015 	stw	r3,0(r16)
1010a00c:	8c400044 	addi	r17,r17,1
1010a010:	dc45883a 	add	r2,sp,r17
1010a014:	8d00112e 	bgeu	r17,r20,1010a05c <__fputwc+0xd0>
1010a018:	11400003 	ldbu	r5,0(r2)
1010a01c:	80c00217 	ldw	r3,8(r16)
1010a020:	18ffffc4 	addi	r3,r3,-1
1010a024:	80c00215 	stw	r3,8(r16)
1010a028:	183ff30e 	bge	r3,zero,10109ff8 <__fputwc+0x6c>
1010a02c:	80800617 	ldw	r2,24(r16)
1010a030:	18801916 	blt	r3,r2,1010a098 <__fputwc+0x10c>
1010a034:	80800017 	ldw	r2,0(r16)
1010a038:	11400005 	stb	r5,0(r2)
1010a03c:	80800017 	ldw	r2,0(r16)
1010a040:	10c00003 	ldbu	r3,0(r2)
1010a044:	10800044 	addi	r2,r2,1
1010a048:	1d402326 	beq	r3,r21,1010a0d8 <__fputwc+0x14c>
1010a04c:	80800015 	stw	r2,0(r16)
1010a050:	8c400044 	addi	r17,r17,1
1010a054:	dc45883a 	add	r2,sp,r17
1010a058:	8d3fef36 	bltu	r17,r20,1010a018 <__fputwc+0x8c>
1010a05c:	9005883a 	mov	r2,r18
1010a060:	00000406 	br	1010a074 <__fputwc+0xe8>
1010a064:	80c0030b 	ldhu	r3,12(r16)
1010a068:	a005883a 	mov	r2,r20
1010a06c:	18c01014 	ori	r3,r3,64
1010a070:	80c0030d 	sth	r3,12(r16)
1010a074:	dfc00717 	ldw	ra,28(sp)
1010a078:	dd400617 	ldw	r21,24(sp)
1010a07c:	dd000517 	ldw	r20,20(sp)
1010a080:	dcc00417 	ldw	r19,16(sp)
1010a084:	dc800317 	ldw	r18,12(sp)
1010a088:	dc400217 	ldw	r17,8(sp)
1010a08c:	dc000117 	ldw	r16,4(sp)
1010a090:	dec00804 	addi	sp,sp,32
1010a094:	f800283a 	ret
1010a098:	800d883a 	mov	r6,r16
1010a09c:	29403fcc 	andi	r5,r5,255
1010a0a0:	9809883a 	mov	r4,r19
1010a0a4:	010a1940 	call	1010a194 <__swbuf_r>
1010a0a8:	10bfffe0 	cmpeqi	r2,r2,-1
1010a0ac:	10803fcc 	andi	r2,r2,255
1010a0b0:	103fd626 	beq	r2,zero,1010a00c <__fputwc+0x80>
1010a0b4:	00bfffc4 	movi	r2,-1
1010a0b8:	003fee06 	br	1010a074 <__fputwc+0xe8>
1010a0bc:	90ffffc4 	addi	r3,r18,-1
1010a0c0:	01003f84 	movi	r4,254
1010a0c4:	20ffbf36 	bltu	r4,r3,10109fc4 <__fputwc+0x38>
1010a0c8:	900b883a 	mov	r5,r18
1010a0cc:	dc800005 	stb	r18,0(sp)
1010a0d0:	1029883a 	mov	r20,r2
1010a0d4:	003fc506 	br	10109fec <__fputwc+0x60>
1010a0d8:	800d883a 	mov	r6,r16
1010a0dc:	a80b883a 	mov	r5,r21
1010a0e0:	9809883a 	mov	r4,r19
1010a0e4:	010a1940 	call	1010a194 <__swbuf_r>
1010a0e8:	10bfffe0 	cmpeqi	r2,r2,-1
1010a0ec:	003fef06 	br	1010a0ac <__fputwc+0x120>

1010a0f0 <_fputwc_r>:
1010a0f0:	3080030b 	ldhu	r2,12(r6)
1010a0f4:	10c8000c 	andi	r3,r2,8192
1010a0f8:	1800051e 	bne	r3,zero,1010a110 <_fputwc_r+0x20>
1010a0fc:	30c01917 	ldw	r3,100(r6)
1010a100:	10880014 	ori	r2,r2,8192
1010a104:	3080030d 	sth	r2,12(r6)
1010a108:	18880014 	ori	r2,r3,8192
1010a10c:	30801915 	stw	r2,100(r6)
1010a110:	0109f8c1 	jmpi	10109f8c <__fputwc>

1010a114 <fputwc>:
1010a114:	00840474 	movhi	r2,4113
1010a118:	defffc04 	addi	sp,sp,-16
1010a11c:	10871904 	addi	r2,r2,7268
1010a120:	dc000115 	stw	r16,4(sp)
1010a124:	14000017 	ldw	r16,0(r2)
1010a128:	dc400215 	stw	r17,8(sp)
1010a12c:	dfc00315 	stw	ra,12(sp)
1010a130:	2023883a 	mov	r17,r4
1010a134:	80000226 	beq	r16,zero,1010a140 <fputwc+0x2c>
1010a138:	80800e17 	ldw	r2,56(r16)
1010a13c:	10001026 	beq	r2,zero,1010a180 <fputwc+0x6c>
1010a140:	2880030b 	ldhu	r2,12(r5)
1010a144:	10c8000c 	andi	r3,r2,8192
1010a148:	1800051e 	bne	r3,zero,1010a160 <fputwc+0x4c>
1010a14c:	28c01917 	ldw	r3,100(r5)
1010a150:	10880014 	ori	r2,r2,8192
1010a154:	2880030d 	sth	r2,12(r5)
1010a158:	18880014 	ori	r2,r3,8192
1010a15c:	28801915 	stw	r2,100(r5)
1010a160:	280d883a 	mov	r6,r5
1010a164:	8009883a 	mov	r4,r16
1010a168:	880b883a 	mov	r5,r17
1010a16c:	dfc00317 	ldw	ra,12(sp)
1010a170:	dc400217 	ldw	r17,8(sp)
1010a174:	dc000117 	ldw	r16,4(sp)
1010a178:	dec00404 	addi	sp,sp,16
1010a17c:	0109f8c1 	jmpi	10109f8c <__fputwc>
1010a180:	8009883a 	mov	r4,r16
1010a184:	d9400015 	stw	r5,0(sp)
1010a188:	0100ba80 	call	10100ba8 <__sinit>
1010a18c:	d9400017 	ldw	r5,0(sp)
1010a190:	003feb06 	br	1010a140 <fputwc+0x2c>

1010a194 <__swbuf_r>:
1010a194:	defffb04 	addi	sp,sp,-20
1010a198:	dcc00315 	stw	r19,12(sp)
1010a19c:	dc800215 	stw	r18,8(sp)
1010a1a0:	dc000015 	stw	r16,0(sp)
1010a1a4:	dfc00415 	stw	ra,16(sp)
1010a1a8:	dc400115 	stw	r17,4(sp)
1010a1ac:	2025883a 	mov	r18,r4
1010a1b0:	2827883a 	mov	r19,r5
1010a1b4:	3021883a 	mov	r16,r6
1010a1b8:	20000226 	beq	r4,zero,1010a1c4 <__swbuf_r+0x30>
1010a1bc:	20800e17 	ldw	r2,56(r4)
1010a1c0:	10004226 	beq	r2,zero,1010a2cc <__swbuf_r+0x138>
1010a1c4:	80800617 	ldw	r2,24(r16)
1010a1c8:	8100030b 	ldhu	r4,12(r16)
1010a1cc:	80800215 	stw	r2,8(r16)
1010a1d0:	2080020c 	andi	r2,r4,8
1010a1d4:	10003626 	beq	r2,zero,1010a2b0 <__swbuf_r+0x11c>
1010a1d8:	80c00417 	ldw	r3,16(r16)
1010a1dc:	18003426 	beq	r3,zero,1010a2b0 <__swbuf_r+0x11c>
1010a1e0:	2088000c 	andi	r2,r4,8192
1010a1e4:	9c403fcc 	andi	r17,r19,255
1010a1e8:	10001a26 	beq	r2,zero,1010a254 <__swbuf_r+0xc0>
1010a1ec:	80800017 	ldw	r2,0(r16)
1010a1f0:	81000517 	ldw	r4,20(r16)
1010a1f4:	10c7c83a 	sub	r3,r2,r3
1010a1f8:	1900200e 	bge	r3,r4,1010a27c <__swbuf_r+0xe8>
1010a1fc:	18c00044 	addi	r3,r3,1
1010a200:	81000217 	ldw	r4,8(r16)
1010a204:	11400044 	addi	r5,r2,1
1010a208:	81400015 	stw	r5,0(r16)
1010a20c:	213fffc4 	addi	r4,r4,-1
1010a210:	81000215 	stw	r4,8(r16)
1010a214:	14c00005 	stb	r19,0(r2)
1010a218:	80800517 	ldw	r2,20(r16)
1010a21c:	10c01e26 	beq	r2,r3,1010a298 <__swbuf_r+0x104>
1010a220:	8080030b 	ldhu	r2,12(r16)
1010a224:	1080004c 	andi	r2,r2,1
1010a228:	10000226 	beq	r2,zero,1010a234 <__swbuf_r+0xa0>
1010a22c:	00800284 	movi	r2,10
1010a230:	88801926 	beq	r17,r2,1010a298 <__swbuf_r+0x104>
1010a234:	8805883a 	mov	r2,r17
1010a238:	dfc00417 	ldw	ra,16(sp)
1010a23c:	dcc00317 	ldw	r19,12(sp)
1010a240:	dc800217 	ldw	r18,8(sp)
1010a244:	dc400117 	ldw	r17,4(sp)
1010a248:	dc000017 	ldw	r16,0(sp)
1010a24c:	dec00504 	addi	sp,sp,20
1010a250:	f800283a 	ret
1010a254:	81401917 	ldw	r5,100(r16)
1010a258:	00b7ffc4 	movi	r2,-8193
1010a25c:	21080014 	ori	r4,r4,8192
1010a260:	2884703a 	and	r2,r5,r2
1010a264:	80801915 	stw	r2,100(r16)
1010a268:	80800017 	ldw	r2,0(r16)
1010a26c:	8100030d 	sth	r4,12(r16)
1010a270:	81000517 	ldw	r4,20(r16)
1010a274:	10c7c83a 	sub	r3,r2,r3
1010a278:	193fe016 	blt	r3,r4,1010a1fc <__swbuf_r+0x68>
1010a27c:	800b883a 	mov	r5,r16
1010a280:	9009883a 	mov	r4,r18
1010a284:	01007cc0 	call	101007cc <_fflush_r>
1010a288:	1000071e 	bne	r2,zero,1010a2a8 <__swbuf_r+0x114>
1010a28c:	80800017 	ldw	r2,0(r16)
1010a290:	00c00044 	movi	r3,1
1010a294:	003fda06 	br	1010a200 <__swbuf_r+0x6c>
1010a298:	800b883a 	mov	r5,r16
1010a29c:	9009883a 	mov	r4,r18
1010a2a0:	01007cc0 	call	101007cc <_fflush_r>
1010a2a4:	103fe326 	beq	r2,zero,1010a234 <__swbuf_r+0xa0>
1010a2a8:	00bfffc4 	movi	r2,-1
1010a2ac:	003fe206 	br	1010a238 <__swbuf_r+0xa4>
1010a2b0:	800b883a 	mov	r5,r16
1010a2b4:	9009883a 	mov	r4,r18
1010a2b8:	0104cc00 	call	10104cc0 <__swsetup_r>
1010a2bc:	103ffa1e 	bne	r2,zero,1010a2a8 <__swbuf_r+0x114>
1010a2c0:	8100030b 	ldhu	r4,12(r16)
1010a2c4:	80c00417 	ldw	r3,16(r16)
1010a2c8:	003fc506 	br	1010a1e0 <__swbuf_r+0x4c>
1010a2cc:	0100ba80 	call	10100ba8 <__sinit>
1010a2d0:	003fbc06 	br	1010a1c4 <__swbuf_r+0x30>

1010a2d4 <__swbuf>:
1010a2d4:	00840474 	movhi	r2,4113
1010a2d8:	10871904 	addi	r2,r2,7268
1010a2dc:	280d883a 	mov	r6,r5
1010a2e0:	200b883a 	mov	r5,r4
1010a2e4:	11000017 	ldw	r4,0(r2)
1010a2e8:	010a1941 	jmpi	1010a194 <__swbuf_r>

1010a2ec <_wcrtomb_r>:
1010a2ec:	defff604 	addi	sp,sp,-40
1010a2f0:	00840474 	movhi	r2,4113
1010a2f4:	dc800815 	stw	r18,32(sp)
1010a2f8:	dc400715 	stw	r17,28(sp)
1010a2fc:	dc000615 	stw	r16,24(sp)
1010a300:	10871d04 	addi	r2,r2,7284
1010a304:	dfc00915 	stw	ra,36(sp)
1010a308:	2021883a 	mov	r16,r4
1010a30c:	3823883a 	mov	r17,r7
1010a310:	14800017 	ldw	r18,0(r2)
1010a314:	28001426 	beq	r5,zero,1010a368 <_wcrtomb_r+0x7c>
1010a318:	d9400415 	stw	r5,16(sp)
1010a31c:	d9800515 	stw	r6,20(sp)
1010a320:	0106d280 	call	10106d28 <__locale_charset>
1010a324:	d9800517 	ldw	r6,20(sp)
1010a328:	d9400417 	ldw	r5,16(sp)
1010a32c:	100f883a 	mov	r7,r2
1010a330:	dc400015 	stw	r17,0(sp)
1010a334:	8009883a 	mov	r4,r16
1010a338:	903ee83a 	callr	r18
1010a33c:	00ffffc4 	movi	r3,-1
1010a340:	10c0031e 	bne	r2,r3,1010a350 <_wcrtomb_r+0x64>
1010a344:	88000015 	stw	zero,0(r17)
1010a348:	00c02284 	movi	r3,138
1010a34c:	80c00015 	stw	r3,0(r16)
1010a350:	dfc00917 	ldw	ra,36(sp)
1010a354:	dc800817 	ldw	r18,32(sp)
1010a358:	dc400717 	ldw	r17,28(sp)
1010a35c:	dc000617 	ldw	r16,24(sp)
1010a360:	dec00a04 	addi	sp,sp,40
1010a364:	f800283a 	ret
1010a368:	0106d280 	call	10106d28 <__locale_charset>
1010a36c:	100f883a 	mov	r7,r2
1010a370:	dc400015 	stw	r17,0(sp)
1010a374:	000d883a 	mov	r6,zero
1010a378:	d9400104 	addi	r5,sp,4
1010a37c:	8009883a 	mov	r4,r16
1010a380:	903ee83a 	callr	r18
1010a384:	003fed06 	br	1010a33c <_wcrtomb_r+0x50>

1010a388 <wcrtomb>:
1010a388:	defff604 	addi	sp,sp,-40
1010a38c:	00840474 	movhi	r2,4113
1010a390:	dc800615 	stw	r18,24(sp)
1010a394:	dc400515 	stw	r17,20(sp)
1010a398:	10871904 	addi	r2,r2,7268
1010a39c:	dfc00915 	stw	ra,36(sp)
1010a3a0:	dd000815 	stw	r20,32(sp)
1010a3a4:	dcc00715 	stw	r19,28(sp)
1010a3a8:	dc000415 	stw	r16,16(sp)
1010a3ac:	3025883a 	mov	r18,r6
1010a3b0:	14400017 	ldw	r17,0(r2)
1010a3b4:	20001926 	beq	r4,zero,1010a41c <wcrtomb+0x94>
1010a3b8:	00840474 	movhi	r2,4113
1010a3bc:	10871d04 	addi	r2,r2,7284
1010a3c0:	15000017 	ldw	r20,0(r2)
1010a3c4:	2021883a 	mov	r16,r4
1010a3c8:	2827883a 	mov	r19,r5
1010a3cc:	0106d280 	call	10106d28 <__locale_charset>
1010a3d0:	100f883a 	mov	r7,r2
1010a3d4:	dc800015 	stw	r18,0(sp)
1010a3d8:	980d883a 	mov	r6,r19
1010a3dc:	800b883a 	mov	r5,r16
1010a3e0:	8809883a 	mov	r4,r17
1010a3e4:	a03ee83a 	callr	r20
1010a3e8:	00ffffc4 	movi	r3,-1
1010a3ec:	10c0031e 	bne	r2,r3,1010a3fc <wcrtomb+0x74>
1010a3f0:	90000015 	stw	zero,0(r18)
1010a3f4:	00c02284 	movi	r3,138
1010a3f8:	88c00015 	stw	r3,0(r17)
1010a3fc:	dfc00917 	ldw	ra,36(sp)
1010a400:	dd000817 	ldw	r20,32(sp)
1010a404:	dcc00717 	ldw	r19,28(sp)
1010a408:	dc800617 	ldw	r18,24(sp)
1010a40c:	dc400517 	ldw	r17,20(sp)
1010a410:	dc000417 	ldw	r16,16(sp)
1010a414:	dec00a04 	addi	sp,sp,40
1010a418:	f800283a 	ret
1010a41c:	00840474 	movhi	r2,4113
1010a420:	10871d04 	addi	r2,r2,7284
1010a424:	14000017 	ldw	r16,0(r2)
1010a428:	0106d280 	call	10106d28 <__locale_charset>
1010a42c:	100f883a 	mov	r7,r2
1010a430:	dc800015 	stw	r18,0(sp)
1010a434:	000d883a 	mov	r6,zero
1010a438:	d9400104 	addi	r5,sp,4
1010a43c:	8809883a 	mov	r4,r17
1010a440:	803ee83a 	callr	r16
1010a444:	003fe806 	br	1010a3e8 <wcrtomb+0x60>

1010a448 <__ascii_wctomb>:
1010a448:	28000526 	beq	r5,zero,1010a460 <__ascii_wctomb+0x18>
1010a44c:	00803fc4 	movi	r2,255
1010a450:	11800536 	bltu	r2,r6,1010a468 <__ascii_wctomb+0x20>
1010a454:	29800005 	stb	r6,0(r5)
1010a458:	00800044 	movi	r2,1
1010a45c:	f800283a 	ret
1010a460:	0005883a 	mov	r2,zero
1010a464:	f800283a 	ret
1010a468:	00802284 	movi	r2,138
1010a46c:	20800015 	stw	r2,0(r4)
1010a470:	00bfffc4 	movi	r2,-1
1010a474:	f800283a 	ret

1010a478 <_wctomb_r>:
1010a478:	00840474 	movhi	r2,4113
1010a47c:	defff904 	addi	sp,sp,-28
1010a480:	10871d04 	addi	r2,r2,7284
1010a484:	dfc00615 	stw	ra,24(sp)
1010a488:	dc400515 	stw	r17,20(sp)
1010a48c:	dc000415 	stw	r16,16(sp)
1010a490:	3823883a 	mov	r17,r7
1010a494:	14000017 	ldw	r16,0(r2)
1010a498:	d9000115 	stw	r4,4(sp)
1010a49c:	d9400215 	stw	r5,8(sp)
1010a4a0:	d9800315 	stw	r6,12(sp)
1010a4a4:	0106d280 	call	10106d28 <__locale_charset>
1010a4a8:	d9800317 	ldw	r6,12(sp)
1010a4ac:	d9400217 	ldw	r5,8(sp)
1010a4b0:	d9000117 	ldw	r4,4(sp)
1010a4b4:	100f883a 	mov	r7,r2
1010a4b8:	dc400015 	stw	r17,0(sp)
1010a4bc:	803ee83a 	callr	r16
1010a4c0:	dfc00617 	ldw	ra,24(sp)
1010a4c4:	dc400517 	ldw	r17,20(sp)
1010a4c8:	dc000417 	ldw	r16,16(sp)
1010a4cc:	dec00704 	addi	sp,sp,28
1010a4d0:	f800283a 	ret

1010a4d4 <__udivdi3>:
1010a4d4:	defff504 	addi	sp,sp,-44
1010a4d8:	dcc00415 	stw	r19,16(sp)
1010a4dc:	dc000115 	stw	r16,4(sp)
1010a4e0:	dfc00a15 	stw	ra,40(sp)
1010a4e4:	df000915 	stw	fp,36(sp)
1010a4e8:	ddc00815 	stw	r23,32(sp)
1010a4ec:	dd800715 	stw	r22,28(sp)
1010a4f0:	dd400615 	stw	r21,24(sp)
1010a4f4:	dd000515 	stw	r20,20(sp)
1010a4f8:	dc800315 	stw	r18,12(sp)
1010a4fc:	dc400215 	stw	r17,8(sp)
1010a500:	2027883a 	mov	r19,r4
1010a504:	2821883a 	mov	r16,r5
1010a508:	3800411e 	bne	r7,zero,1010a610 <__udivdi3+0x13c>
1010a50c:	3023883a 	mov	r17,r6
1010a510:	2025883a 	mov	r18,r4
1010a514:	2980522e 	bgeu	r5,r6,1010a660 <__udivdi3+0x18c>
1010a518:	00bfffd4 	movui	r2,65535
1010a51c:	282d883a 	mov	r22,r5
1010a520:	1180a836 	bltu	r2,r6,1010a7c4 <__udivdi3+0x2f0>
1010a524:	00803fc4 	movi	r2,255
1010a528:	1185803a 	cmpltu	r2,r2,r6
1010a52c:	100490fa 	slli	r2,r2,3
1010a530:	3086d83a 	srl	r3,r6,r2
1010a534:	01040474 	movhi	r4,4113
1010a538:	21002004 	addi	r4,r4,128
1010a53c:	20c7883a 	add	r3,r4,r3
1010a540:	18c00003 	ldbu	r3,0(r3)
1010a544:	1885883a 	add	r2,r3,r2
1010a548:	00c00804 	movi	r3,32
1010a54c:	1887c83a 	sub	r3,r3,r2
1010a550:	18000526 	beq	r3,zero,1010a568 <__udivdi3+0x94>
1010a554:	80e0983a 	sll	r16,r16,r3
1010a558:	9884d83a 	srl	r2,r19,r2
1010a55c:	30e2983a 	sll	r17,r6,r3
1010a560:	98e4983a 	sll	r18,r19,r3
1010a564:	142cb03a 	or	r22,r2,r16
1010a568:	882ad43a 	srli	r21,r17,16
1010a56c:	b009883a 	mov	r4,r22
1010a570:	8d3fffcc 	andi	r20,r17,65535
1010a574:	a80b883a 	mov	r5,r21
1010a578:	010b0e00 	call	1010b0e0 <__umodsi3>
1010a57c:	b009883a 	mov	r4,r22
1010a580:	a80b883a 	mov	r5,r21
1010a584:	1027883a 	mov	r19,r2
1010a588:	010b07c0 	call	1010b07c <__udivsi3>
1010a58c:	102d883a 	mov	r22,r2
1010a590:	9826943a 	slli	r19,r19,16
1010a594:	9004d43a 	srli	r2,r18,16
1010a598:	a5a1383a 	mul	r16,r20,r22
1010a59c:	14c4b03a 	or	r2,r2,r19
1010a5a0:	1400052e 	bgeu	r2,r16,1010a5b8 <__udivdi3+0xe4>
1010a5a4:	1445883a 	add	r2,r2,r17
1010a5a8:	b0ffffc4 	addi	r3,r22,-1
1010a5ac:	14400136 	bltu	r2,r17,1010a5b4 <__udivdi3+0xe0>
1010a5b0:	14012336 	bltu	r2,r16,1010aa40 <__udivdi3+0x56c>
1010a5b4:	182d883a 	mov	r22,r3
1010a5b8:	1421c83a 	sub	r16,r2,r16
1010a5bc:	a80b883a 	mov	r5,r21
1010a5c0:	8009883a 	mov	r4,r16
1010a5c4:	010b0e00 	call	1010b0e0 <__umodsi3>
1010a5c8:	1027883a 	mov	r19,r2
1010a5cc:	a80b883a 	mov	r5,r21
1010a5d0:	8009883a 	mov	r4,r16
1010a5d4:	010b07c0 	call	1010b07c <__udivsi3>
1010a5d8:	9826943a 	slli	r19,r19,16
1010a5dc:	a0a9383a 	mul	r20,r20,r2
1010a5e0:	94bfffcc 	andi	r18,r18,65535
1010a5e4:	94e4b03a 	or	r18,r18,r19
1010a5e8:	9500052e 	bgeu	r18,r20,1010a600 <__udivdi3+0x12c>
1010a5ec:	8ca5883a 	add	r18,r17,r18
1010a5f0:	10ffffc4 	addi	r3,r2,-1
1010a5f4:	9440f136 	bltu	r18,r17,1010a9bc <__udivdi3+0x4e8>
1010a5f8:	9500f02e 	bgeu	r18,r20,1010a9bc <__udivdi3+0x4e8>
1010a5fc:	10bfff84 	addi	r2,r2,-2
1010a600:	b00c943a 	slli	r6,r22,16
1010a604:	0007883a 	mov	r3,zero
1010a608:	3084b03a 	or	r2,r6,r2
1010a60c:	00005906 	br	1010a774 <__udivdi3+0x2a0>
1010a610:	29c05636 	bltu	r5,r7,1010a76c <__udivdi3+0x298>
1010a614:	00bfffd4 	movui	r2,65535
1010a618:	11c0622e 	bgeu	r2,r7,1010a7a4 <__udivdi3+0x2d0>
1010a61c:	00804034 	movhi	r2,256
1010a620:	10bfffc4 	addi	r2,r2,-1
1010a624:	11c0ee36 	bltu	r2,r7,1010a9e0 <__udivdi3+0x50c>
1010a628:	00800404 	movi	r2,16
1010a62c:	3886d83a 	srl	r3,r7,r2
1010a630:	01040474 	movhi	r4,4113
1010a634:	21002004 	addi	r4,r4,128
1010a638:	20c7883a 	add	r3,r4,r3
1010a63c:	18c00003 	ldbu	r3,0(r3)
1010a640:	05400804 	movi	r21,32
1010a644:	1885883a 	add	r2,r3,r2
1010a648:	a8abc83a 	sub	r21,r21,r2
1010a64c:	a800621e 	bne	r21,zero,1010a7d8 <__udivdi3+0x304>
1010a650:	3c00e936 	bltu	r7,r16,1010a9f8 <__udivdi3+0x524>
1010a654:	9985403a 	cmpgeu	r2,r19,r6
1010a658:	0007883a 	mov	r3,zero
1010a65c:	00004506 	br	1010a774 <__udivdi3+0x2a0>
1010a660:	3000041e 	bne	r6,zero,1010a674 <__udivdi3+0x1a0>
1010a664:	000b883a 	mov	r5,zero
1010a668:	01000044 	movi	r4,1
1010a66c:	010b07c0 	call	1010b07c <__udivsi3>
1010a670:	1023883a 	mov	r17,r2
1010a674:	00bfffd4 	movui	r2,65535
1010a678:	14404e2e 	bgeu	r2,r17,1010a7b4 <__udivdi3+0x2e0>
1010a67c:	00804034 	movhi	r2,256
1010a680:	10bfffc4 	addi	r2,r2,-1
1010a684:	1440d836 	bltu	r2,r17,1010a9e8 <__udivdi3+0x514>
1010a688:	00800404 	movi	r2,16
1010a68c:	8886d83a 	srl	r3,r17,r2
1010a690:	01040474 	movhi	r4,4113
1010a694:	21002004 	addi	r4,r4,128
1010a698:	20c7883a 	add	r3,r4,r3
1010a69c:	18c00003 	ldbu	r3,0(r3)
1010a6a0:	1885883a 	add	r2,r3,r2
1010a6a4:	00c00804 	movi	r3,32
1010a6a8:	1887c83a 	sub	r3,r3,r2
1010a6ac:	18008f1e 	bne	r3,zero,1010a8ec <__udivdi3+0x418>
1010a6b0:	882ad43a 	srli	r21,r17,16
1010a6b4:	8461c83a 	sub	r16,r16,r17
1010a6b8:	8d3fffcc 	andi	r20,r17,65535
1010a6bc:	00c00044 	movi	r3,1
1010a6c0:	8009883a 	mov	r4,r16
1010a6c4:	a80b883a 	mov	r5,r21
1010a6c8:	d8c00015 	stw	r3,0(sp)
1010a6cc:	010b0e00 	call	1010b0e0 <__umodsi3>
1010a6d0:	8009883a 	mov	r4,r16
1010a6d4:	a80b883a 	mov	r5,r21
1010a6d8:	1027883a 	mov	r19,r2
1010a6dc:	010b07c0 	call	1010b07c <__udivsi3>
1010a6e0:	9826943a 	slli	r19,r19,16
1010a6e4:	9008d43a 	srli	r4,r18,16
1010a6e8:	1521383a 	mul	r16,r2,r20
1010a6ec:	102d883a 	mov	r22,r2
1010a6f0:	24c8b03a 	or	r4,r4,r19
1010a6f4:	d8c00017 	ldw	r3,0(sp)
1010a6f8:	2400052e 	bgeu	r4,r16,1010a710 <__udivdi3+0x23c>
1010a6fc:	2449883a 	add	r4,r4,r17
1010a700:	b0bfffc4 	addi	r2,r22,-1
1010a704:	24400136 	bltu	r4,r17,1010a70c <__udivdi3+0x238>
1010a708:	2400ca36 	bltu	r4,r16,1010aa34 <__udivdi3+0x560>
1010a70c:	102d883a 	mov	r22,r2
1010a710:	2421c83a 	sub	r16,r4,r16
1010a714:	a80b883a 	mov	r5,r21
1010a718:	8009883a 	mov	r4,r16
1010a71c:	d8c00015 	stw	r3,0(sp)
1010a720:	010b0e00 	call	1010b0e0 <__umodsi3>
1010a724:	1027883a 	mov	r19,r2
1010a728:	a80b883a 	mov	r5,r21
1010a72c:	8009883a 	mov	r4,r16
1010a730:	010b07c0 	call	1010b07c <__udivsi3>
1010a734:	9826943a 	slli	r19,r19,16
1010a738:	1529383a 	mul	r20,r2,r20
1010a73c:	94bfffcc 	andi	r18,r18,65535
1010a740:	94e4b03a 	or	r18,r18,r19
1010a744:	d8c00017 	ldw	r3,0(sp)
1010a748:	9500052e 	bgeu	r18,r20,1010a760 <__udivdi3+0x28c>
1010a74c:	8ca5883a 	add	r18,r17,r18
1010a750:	113fffc4 	addi	r4,r2,-1
1010a754:	94409736 	bltu	r18,r17,1010a9b4 <__udivdi3+0x4e0>
1010a758:	9500962e 	bgeu	r18,r20,1010a9b4 <__udivdi3+0x4e0>
1010a75c:	10bfff84 	addi	r2,r2,-2
1010a760:	b00c943a 	slli	r6,r22,16
1010a764:	3084b03a 	or	r2,r6,r2
1010a768:	00000206 	br	1010a774 <__udivdi3+0x2a0>
1010a76c:	0007883a 	mov	r3,zero
1010a770:	0005883a 	mov	r2,zero
1010a774:	dfc00a17 	ldw	ra,40(sp)
1010a778:	df000917 	ldw	fp,36(sp)
1010a77c:	ddc00817 	ldw	r23,32(sp)
1010a780:	dd800717 	ldw	r22,28(sp)
1010a784:	dd400617 	ldw	r21,24(sp)
1010a788:	dd000517 	ldw	r20,20(sp)
1010a78c:	dcc00417 	ldw	r19,16(sp)
1010a790:	dc800317 	ldw	r18,12(sp)
1010a794:	dc400217 	ldw	r17,8(sp)
1010a798:	dc000117 	ldw	r16,4(sp)
1010a79c:	dec00b04 	addi	sp,sp,44
1010a7a0:	f800283a 	ret
1010a7a4:	00803fc4 	movi	r2,255
1010a7a8:	11c5803a 	cmpltu	r2,r2,r7
1010a7ac:	100490fa 	slli	r2,r2,3
1010a7b0:	003f9e06 	br	1010a62c <__udivdi3+0x158>
1010a7b4:	00803fc4 	movi	r2,255
1010a7b8:	1445803a 	cmpltu	r2,r2,r17
1010a7bc:	100490fa 	slli	r2,r2,3
1010a7c0:	003fb206 	br	1010a68c <__udivdi3+0x1b8>
1010a7c4:	00804034 	movhi	r2,256
1010a7c8:	10bfffc4 	addi	r2,r2,-1
1010a7cc:	11808836 	bltu	r2,r6,1010a9f0 <__udivdi3+0x51c>
1010a7d0:	00800404 	movi	r2,16
1010a7d4:	003f5606 	br	1010a530 <__udivdi3+0x5c>
1010a7d8:	30aed83a 	srl	r23,r6,r2
1010a7dc:	3d4e983a 	sll	r7,r7,r21
1010a7e0:	80acd83a 	srl	r22,r16,r2
1010a7e4:	9884d83a 	srl	r2,r19,r2
1010a7e8:	3deeb03a 	or	r23,r7,r23
1010a7ec:	b824d43a 	srli	r18,r23,16
1010a7f0:	8560983a 	sll	r16,r16,r21
1010a7f4:	b009883a 	mov	r4,r22
1010a7f8:	900b883a 	mov	r5,r18
1010a7fc:	3568983a 	sll	r20,r6,r21
1010a800:	1420b03a 	or	r16,r2,r16
1010a804:	010b0e00 	call	1010b0e0 <__umodsi3>
1010a808:	b009883a 	mov	r4,r22
1010a80c:	900b883a 	mov	r5,r18
1010a810:	1023883a 	mov	r17,r2
1010a814:	010b07c0 	call	1010b07c <__udivsi3>
1010a818:	8808943a 	slli	r4,r17,16
1010a81c:	bf3fffcc 	andi	fp,r23,65535
1010a820:	8006d43a 	srli	r3,r16,16
1010a824:	e0a3383a 	mul	r17,fp,r2
1010a828:	100d883a 	mov	r6,r2
1010a82c:	1906b03a 	or	r3,r3,r4
1010a830:	1c40042e 	bgeu	r3,r17,1010a844 <__udivdi3+0x370>
1010a834:	1dc7883a 	add	r3,r3,r23
1010a838:	10bfffc4 	addi	r2,r2,-1
1010a83c:	1dc0752e 	bgeu	r3,r23,1010aa14 <__udivdi3+0x540>
1010a840:	100d883a 	mov	r6,r2
1010a844:	1c63c83a 	sub	r17,r3,r17
1010a848:	900b883a 	mov	r5,r18
1010a84c:	8809883a 	mov	r4,r17
1010a850:	d9800015 	stw	r6,0(sp)
1010a854:	010b0e00 	call	1010b0e0 <__umodsi3>
1010a858:	102d883a 	mov	r22,r2
1010a85c:	8809883a 	mov	r4,r17
1010a860:	900b883a 	mov	r5,r18
1010a864:	010b07c0 	call	1010b07c <__udivsi3>
1010a868:	b02c943a 	slli	r22,r22,16
1010a86c:	e089383a 	mul	r4,fp,r2
1010a870:	843fffcc 	andi	r16,r16,65535
1010a874:	85a0b03a 	or	r16,r16,r22
1010a878:	d9800017 	ldw	r6,0(sp)
1010a87c:	8100042e 	bgeu	r16,r4,1010a890 <__udivdi3+0x3bc>
1010a880:	85e1883a 	add	r16,r16,r23
1010a884:	10ffffc4 	addi	r3,r2,-1
1010a888:	85c05e2e 	bgeu	r16,r23,1010aa04 <__udivdi3+0x530>
1010a88c:	1805883a 	mov	r2,r3
1010a890:	300c943a 	slli	r6,r6,16
1010a894:	a17fffcc 	andi	r5,r20,65535
1010a898:	a028d43a 	srli	r20,r20,16
1010a89c:	3084b03a 	or	r2,r6,r2
1010a8a0:	10ffffcc 	andi	r3,r2,65535
1010a8a4:	100cd43a 	srli	r6,r2,16
1010a8a8:	194f383a 	mul	r7,r3,r5
1010a8ac:	1d07383a 	mul	r3,r3,r20
1010a8b0:	314b383a 	mul	r5,r6,r5
1010a8b4:	3810d43a 	srli	r8,r7,16
1010a8b8:	8121c83a 	sub	r16,r16,r4
1010a8bc:	1947883a 	add	r3,r3,r5
1010a8c0:	40c7883a 	add	r3,r8,r3
1010a8c4:	350d383a 	mul	r6,r6,r20
1010a8c8:	1940022e 	bgeu	r3,r5,1010a8d4 <__udivdi3+0x400>
1010a8cc:	01000074 	movhi	r4,1
1010a8d0:	310d883a 	add	r6,r6,r4
1010a8d4:	1828d43a 	srli	r20,r3,16
1010a8d8:	a18d883a 	add	r6,r20,r6
1010a8dc:	81803e36 	bltu	r16,r6,1010a9d8 <__udivdi3+0x504>
1010a8e0:	81803826 	beq	r16,r6,1010a9c4 <__udivdi3+0x4f0>
1010a8e4:	0007883a 	mov	r3,zero
1010a8e8:	003fa206 	br	1010a774 <__udivdi3+0x2a0>
1010a8ec:	88e2983a 	sll	r17,r17,r3
1010a8f0:	80a8d83a 	srl	r20,r16,r2
1010a8f4:	80e0983a 	sll	r16,r16,r3
1010a8f8:	882ad43a 	srli	r21,r17,16
1010a8fc:	9884d83a 	srl	r2,r19,r2
1010a900:	a009883a 	mov	r4,r20
1010a904:	a80b883a 	mov	r5,r21
1010a908:	142eb03a 	or	r23,r2,r16
1010a90c:	98e4983a 	sll	r18,r19,r3
1010a910:	010b0e00 	call	1010b0e0 <__umodsi3>
1010a914:	a009883a 	mov	r4,r20
1010a918:	a80b883a 	mov	r5,r21
1010a91c:	1021883a 	mov	r16,r2
1010a920:	010b07c0 	call	1010b07c <__udivsi3>
1010a924:	1039883a 	mov	fp,r2
1010a928:	8d3fffcc 	andi	r20,r17,65535
1010a92c:	8020943a 	slli	r16,r16,16
1010a930:	b804d43a 	srli	r2,r23,16
1010a934:	a72d383a 	mul	r22,r20,fp
1010a938:	1404b03a 	or	r2,r2,r16
1010a93c:	1580062e 	bgeu	r2,r22,1010a958 <__udivdi3+0x484>
1010a940:	1445883a 	add	r2,r2,r17
1010a944:	e0ffffc4 	addi	r3,fp,-1
1010a948:	14403836 	bltu	r2,r17,1010aa2c <__udivdi3+0x558>
1010a94c:	1580372e 	bgeu	r2,r22,1010aa2c <__udivdi3+0x558>
1010a950:	e73fff84 	addi	fp,fp,-2
1010a954:	1445883a 	add	r2,r2,r17
1010a958:	15adc83a 	sub	r22,r2,r22
1010a95c:	a80b883a 	mov	r5,r21
1010a960:	b009883a 	mov	r4,r22
1010a964:	010b0e00 	call	1010b0e0 <__umodsi3>
1010a968:	1027883a 	mov	r19,r2
1010a96c:	b009883a 	mov	r4,r22
1010a970:	a80b883a 	mov	r5,r21
1010a974:	010b07c0 	call	1010b07c <__udivsi3>
1010a978:	9826943a 	slli	r19,r19,16
1010a97c:	a0a1383a 	mul	r16,r20,r2
1010a980:	b93fffcc 	andi	r4,r23,65535
1010a984:	24c8b03a 	or	r4,r4,r19
1010a988:	2400062e 	bgeu	r4,r16,1010a9a4 <__udivdi3+0x4d0>
1010a98c:	2449883a 	add	r4,r4,r17
1010a990:	10ffffc4 	addi	r3,r2,-1
1010a994:	24402336 	bltu	r4,r17,1010aa24 <__udivdi3+0x550>
1010a998:	2400222e 	bgeu	r4,r16,1010aa24 <__udivdi3+0x550>
1010a99c:	10bfff84 	addi	r2,r2,-2
1010a9a0:	2449883a 	add	r4,r4,r17
1010a9a4:	e038943a 	slli	fp,fp,16
1010a9a8:	2421c83a 	sub	r16,r4,r16
1010a9ac:	e086b03a 	or	r3,fp,r2
1010a9b0:	003f4306 	br	1010a6c0 <__udivdi3+0x1ec>
1010a9b4:	2005883a 	mov	r2,r4
1010a9b8:	003f6906 	br	1010a760 <__udivdi3+0x28c>
1010a9bc:	1805883a 	mov	r2,r3
1010a9c0:	003f0f06 	br	1010a600 <__udivdi3+0x12c>
1010a9c4:	1806943a 	slli	r3,r3,16
1010a9c8:	9d66983a 	sll	r19,r19,r21
1010a9cc:	39ffffcc 	andi	r7,r7,65535
1010a9d0:	19c7883a 	add	r3,r3,r7
1010a9d4:	98ffc32e 	bgeu	r19,r3,1010a8e4 <__udivdi3+0x410>
1010a9d8:	10bfffc4 	addi	r2,r2,-1
1010a9dc:	003fc106 	br	1010a8e4 <__udivdi3+0x410>
1010a9e0:	00800604 	movi	r2,24
1010a9e4:	003f1106 	br	1010a62c <__udivdi3+0x158>
1010a9e8:	00800604 	movi	r2,24
1010a9ec:	003f2706 	br	1010a68c <__udivdi3+0x1b8>
1010a9f0:	00800604 	movi	r2,24
1010a9f4:	003ece06 	br	1010a530 <__udivdi3+0x5c>
1010a9f8:	0007883a 	mov	r3,zero
1010a9fc:	00800044 	movi	r2,1
1010aa00:	003f5c06 	br	1010a774 <__udivdi3+0x2a0>
1010aa04:	813fa12e 	bgeu	r16,r4,1010a88c <__udivdi3+0x3b8>
1010aa08:	10bfff84 	addi	r2,r2,-2
1010aa0c:	85e1883a 	add	r16,r16,r23
1010aa10:	003f9f06 	br	1010a890 <__udivdi3+0x3bc>
1010aa14:	1c7f8a2e 	bgeu	r3,r17,1010a840 <__udivdi3+0x36c>
1010aa18:	31bfff84 	addi	r6,r6,-2
1010aa1c:	1dc7883a 	add	r3,r3,r23
1010aa20:	003f8806 	br	1010a844 <__udivdi3+0x370>
1010aa24:	1805883a 	mov	r2,r3
1010aa28:	003fde06 	br	1010a9a4 <__udivdi3+0x4d0>
1010aa2c:	1839883a 	mov	fp,r3
1010aa30:	003fc906 	br	1010a958 <__udivdi3+0x484>
1010aa34:	b5bfff84 	addi	r22,r22,-2
1010aa38:	2449883a 	add	r4,r4,r17
1010aa3c:	003f3406 	br	1010a710 <__udivdi3+0x23c>
1010aa40:	b5bfff84 	addi	r22,r22,-2
1010aa44:	1445883a 	add	r2,r2,r17
1010aa48:	003edb06 	br	1010a5b8 <__udivdi3+0xe4>

1010aa4c <__umoddi3>:
1010aa4c:	defff404 	addi	sp,sp,-48
1010aa50:	df000a15 	stw	fp,40(sp)
1010aa54:	dc400315 	stw	r17,12(sp)
1010aa58:	dc000215 	stw	r16,8(sp)
1010aa5c:	dfc00b15 	stw	ra,44(sp)
1010aa60:	ddc00915 	stw	r23,36(sp)
1010aa64:	dd800815 	stw	r22,32(sp)
1010aa68:	dd400715 	stw	r21,28(sp)
1010aa6c:	dd000615 	stw	r20,24(sp)
1010aa70:	dcc00515 	stw	r19,20(sp)
1010aa74:	dc800415 	stw	r18,16(sp)
1010aa78:	2021883a 	mov	r16,r4
1010aa7c:	2823883a 	mov	r17,r5
1010aa80:	2839883a 	mov	fp,r5
1010aa84:	38003c1e 	bne	r7,zero,1010ab78 <__umoddi3+0x12c>
1010aa88:	3027883a 	mov	r19,r6
1010aa8c:	2029883a 	mov	r20,r4
1010aa90:	2980512e 	bgeu	r5,r6,1010abd8 <__umoddi3+0x18c>
1010aa94:	00bfffd4 	movui	r2,65535
1010aa98:	11809a36 	bltu	r2,r6,1010ad04 <__umoddi3+0x2b8>
1010aa9c:	01003fc4 	movi	r4,255
1010aaa0:	2189803a 	cmpltu	r4,r4,r6
1010aaa4:	200890fa 	slli	r4,r4,3
1010aaa8:	3104d83a 	srl	r2,r6,r4
1010aaac:	00c40474 	movhi	r3,4113
1010aab0:	18c02004 	addi	r3,r3,128
1010aab4:	1885883a 	add	r2,r3,r2
1010aab8:	10c00003 	ldbu	r3,0(r2)
1010aabc:	00800804 	movi	r2,32
1010aac0:	1909883a 	add	r4,r3,r4
1010aac4:	1125c83a 	sub	r18,r2,r4
1010aac8:	90000526 	beq	r18,zero,1010aae0 <__umoddi3+0x94>
1010aacc:	8ca2983a 	sll	r17,r17,r18
1010aad0:	8108d83a 	srl	r4,r16,r4
1010aad4:	34a6983a 	sll	r19,r6,r18
1010aad8:	84a8983a 	sll	r20,r16,r18
1010aadc:	2478b03a 	or	fp,r4,r17
1010aae0:	982ed43a 	srli	r23,r19,16
1010aae4:	e009883a 	mov	r4,fp
1010aae8:	9dbfffcc 	andi	r22,r19,65535
1010aaec:	b80b883a 	mov	r5,r23
1010aaf0:	010b0e00 	call	1010b0e0 <__umodsi3>
1010aaf4:	e009883a 	mov	r4,fp
1010aaf8:	b80b883a 	mov	r5,r23
1010aafc:	102b883a 	mov	r21,r2
1010ab00:	010b07c0 	call	1010b07c <__udivsi3>
1010ab04:	a806943a 	slli	r3,r21,16
1010ab08:	a008d43a 	srli	r4,r20,16
1010ab0c:	b085383a 	mul	r2,r22,r2
1010ab10:	20c8b03a 	or	r4,r4,r3
1010ab14:	2080032e 	bgeu	r4,r2,1010ab24 <__umoddi3+0xd8>
1010ab18:	24c9883a 	add	r4,r4,r19
1010ab1c:	24c00136 	bltu	r4,r19,1010ab24 <__umoddi3+0xd8>
1010ab20:	20811036 	bltu	r4,r2,1010af64 <__umoddi3+0x518>
1010ab24:	20abc83a 	sub	r21,r4,r2
1010ab28:	b80b883a 	mov	r5,r23
1010ab2c:	a809883a 	mov	r4,r21
1010ab30:	010b0e00 	call	1010b0e0 <__umodsi3>
1010ab34:	1023883a 	mov	r17,r2
1010ab38:	b80b883a 	mov	r5,r23
1010ab3c:	a809883a 	mov	r4,r21
1010ab40:	010b07c0 	call	1010b07c <__udivsi3>
1010ab44:	8822943a 	slli	r17,r17,16
1010ab48:	b085383a 	mul	r2,r22,r2
1010ab4c:	a0ffffcc 	andi	r3,r20,65535
1010ab50:	1c46b03a 	or	r3,r3,r17
1010ab54:	1880042e 	bgeu	r3,r2,1010ab68 <__umoddi3+0x11c>
1010ab58:	1cc7883a 	add	r3,r3,r19
1010ab5c:	1cc00236 	bltu	r3,r19,1010ab68 <__umoddi3+0x11c>
1010ab60:	1880012e 	bgeu	r3,r2,1010ab68 <__umoddi3+0x11c>
1010ab64:	1cc7883a 	add	r3,r3,r19
1010ab68:	1885c83a 	sub	r2,r3,r2
1010ab6c:	1484d83a 	srl	r2,r2,r18
1010ab70:	0007883a 	mov	r3,zero
1010ab74:	00004f06 	br	1010acb4 <__umoddi3+0x268>
1010ab78:	29c04c36 	bltu	r5,r7,1010acac <__umoddi3+0x260>
1010ab7c:	00bfffd4 	movui	r2,65535
1010ab80:	11c0582e 	bgeu	r2,r7,1010ace4 <__umoddi3+0x298>
1010ab84:	00804034 	movhi	r2,256
1010ab88:	10bfffc4 	addi	r2,r2,-1
1010ab8c:	11c0e736 	bltu	r2,r7,1010af2c <__umoddi3+0x4e0>
1010ab90:	01000404 	movi	r4,16
1010ab94:	3904d83a 	srl	r2,r7,r4
1010ab98:	00c40474 	movhi	r3,4113
1010ab9c:	18c02004 	addi	r3,r3,128
1010aba0:	1885883a 	add	r2,r3,r2
1010aba4:	14c00003 	ldbu	r19,0(r2)
1010aba8:	00c00804 	movi	r3,32
1010abac:	9927883a 	add	r19,r19,r4
1010abb0:	1ce9c83a 	sub	r20,r3,r19
1010abb4:	a000581e 	bne	r20,zero,1010ad18 <__umoddi3+0x2cc>
1010abb8:	3c400136 	bltu	r7,r17,1010abc0 <__umoddi3+0x174>
1010abbc:	8180eb36 	bltu	r16,r6,1010af6c <__umoddi3+0x520>
1010abc0:	8185c83a 	sub	r2,r16,r6
1010abc4:	89e3c83a 	sub	r17,r17,r7
1010abc8:	8089803a 	cmpltu	r4,r16,r2
1010abcc:	8939c83a 	sub	fp,r17,r4
1010abd0:	e007883a 	mov	r3,fp
1010abd4:	00003706 	br	1010acb4 <__umoddi3+0x268>
1010abd8:	3000041e 	bne	r6,zero,1010abec <__umoddi3+0x1a0>
1010abdc:	000b883a 	mov	r5,zero
1010abe0:	01000044 	movi	r4,1
1010abe4:	010b07c0 	call	1010b07c <__udivsi3>
1010abe8:	1027883a 	mov	r19,r2
1010abec:	00bfffd4 	movui	r2,65535
1010abf0:	14c0402e 	bgeu	r2,r19,1010acf4 <__umoddi3+0x2a8>
1010abf4:	00804034 	movhi	r2,256
1010abf8:	10bfffc4 	addi	r2,r2,-1
1010abfc:	14c0cd36 	bltu	r2,r19,1010af34 <__umoddi3+0x4e8>
1010ac00:	00800404 	movi	r2,16
1010ac04:	9886d83a 	srl	r3,r19,r2
1010ac08:	01040474 	movhi	r4,4113
1010ac0c:	21002004 	addi	r4,r4,128
1010ac10:	20c7883a 	add	r3,r4,r3
1010ac14:	18c00003 	ldbu	r3,0(r3)
1010ac18:	1887883a 	add	r3,r3,r2
1010ac1c:	00800804 	movi	r2,32
1010ac20:	10e5c83a 	sub	r18,r2,r3
1010ac24:	9000901e 	bne	r18,zero,1010ae68 <__umoddi3+0x41c>
1010ac28:	982cd43a 	srli	r22,r19,16
1010ac2c:	8ce3c83a 	sub	r17,r17,r19
1010ac30:	9d7fffcc 	andi	r21,r19,65535
1010ac34:	b00b883a 	mov	r5,r22
1010ac38:	8809883a 	mov	r4,r17
1010ac3c:	010b0e00 	call	1010b0e0 <__umodsi3>
1010ac40:	8809883a 	mov	r4,r17
1010ac44:	b00b883a 	mov	r5,r22
1010ac48:	1021883a 	mov	r16,r2
1010ac4c:	010b07c0 	call	1010b07c <__udivsi3>
1010ac50:	8006943a 	slli	r3,r16,16
1010ac54:	a008d43a 	srli	r4,r20,16
1010ac58:	1545383a 	mul	r2,r2,r21
1010ac5c:	20c8b03a 	or	r4,r4,r3
1010ac60:	2080042e 	bgeu	r4,r2,1010ac74 <__umoddi3+0x228>
1010ac64:	24c9883a 	add	r4,r4,r19
1010ac68:	24c00236 	bltu	r4,r19,1010ac74 <__umoddi3+0x228>
1010ac6c:	2080012e 	bgeu	r4,r2,1010ac74 <__umoddi3+0x228>
1010ac70:	24c9883a 	add	r4,r4,r19
1010ac74:	20a1c83a 	sub	r16,r4,r2
1010ac78:	b00b883a 	mov	r5,r22
1010ac7c:	8009883a 	mov	r4,r16
1010ac80:	010b0e00 	call	1010b0e0 <__umodsi3>
1010ac84:	1023883a 	mov	r17,r2
1010ac88:	b00b883a 	mov	r5,r22
1010ac8c:	8009883a 	mov	r4,r16
1010ac90:	010b07c0 	call	1010b07c <__udivsi3>
1010ac94:	8822943a 	slli	r17,r17,16
1010ac98:	1545383a 	mul	r2,r2,r21
1010ac9c:	a53fffcc 	andi	r20,r20,65535
1010aca0:	a446b03a 	or	r3,r20,r17
1010aca4:	18bfb02e 	bgeu	r3,r2,1010ab68 <__umoddi3+0x11c>
1010aca8:	003fab06 	br	1010ab58 <__umoddi3+0x10c>
1010acac:	2005883a 	mov	r2,r4
1010acb0:	2807883a 	mov	r3,r5
1010acb4:	dfc00b17 	ldw	ra,44(sp)
1010acb8:	df000a17 	ldw	fp,40(sp)
1010acbc:	ddc00917 	ldw	r23,36(sp)
1010acc0:	dd800817 	ldw	r22,32(sp)
1010acc4:	dd400717 	ldw	r21,28(sp)
1010acc8:	dd000617 	ldw	r20,24(sp)
1010accc:	dcc00517 	ldw	r19,20(sp)
1010acd0:	dc800417 	ldw	r18,16(sp)
1010acd4:	dc400317 	ldw	r17,12(sp)
1010acd8:	dc000217 	ldw	r16,8(sp)
1010acdc:	dec00c04 	addi	sp,sp,48
1010ace0:	f800283a 	ret
1010ace4:	04c03fc4 	movi	r19,255
1010ace8:	99c9803a 	cmpltu	r4,r19,r7
1010acec:	200890fa 	slli	r4,r4,3
1010acf0:	003fa806 	br	1010ab94 <__umoddi3+0x148>
1010acf4:	00803fc4 	movi	r2,255
1010acf8:	14c5803a 	cmpltu	r2,r2,r19
1010acfc:	100490fa 	slli	r2,r2,3
1010ad00:	003fc006 	br	1010ac04 <__umoddi3+0x1b8>
1010ad04:	00804034 	movhi	r2,256
1010ad08:	10bfffc4 	addi	r2,r2,-1
1010ad0c:	11808b36 	bltu	r2,r6,1010af3c <__umoddi3+0x4f0>
1010ad10:	01000404 	movi	r4,16
1010ad14:	003f6406 	br	1010aaa8 <__umoddi3+0x5c>
1010ad18:	34c4d83a 	srl	r2,r6,r19
1010ad1c:	3d0e983a 	sll	r7,r7,r20
1010ad20:	8cf8d83a 	srl	fp,r17,r19
1010ad24:	8d10983a 	sll	r8,r17,r20
1010ad28:	38aab03a 	or	r21,r7,r2
1010ad2c:	a82cd43a 	srli	r22,r21,16
1010ad30:	84e2d83a 	srl	r17,r16,r19
1010ad34:	e009883a 	mov	r4,fp
1010ad38:	b00b883a 	mov	r5,r22
1010ad3c:	8a22b03a 	or	r17,r17,r8
1010ad40:	3524983a 	sll	r18,r6,r20
1010ad44:	010b0e00 	call	1010b0e0 <__umodsi3>
1010ad48:	e009883a 	mov	r4,fp
1010ad4c:	b00b883a 	mov	r5,r22
1010ad50:	102f883a 	mov	r23,r2
1010ad54:	010b07c0 	call	1010b07c <__udivsi3>
1010ad58:	100d883a 	mov	r6,r2
1010ad5c:	b808943a 	slli	r4,r23,16
1010ad60:	aa3fffcc 	andi	r8,r21,65535
1010ad64:	8804d43a 	srli	r2,r17,16
1010ad68:	41af383a 	mul	r23,r8,r6
1010ad6c:	8520983a 	sll	r16,r16,r20
1010ad70:	1104b03a 	or	r2,r2,r4
1010ad74:	15c0042e 	bgeu	r2,r23,1010ad88 <__umoddi3+0x33c>
1010ad78:	1545883a 	add	r2,r2,r21
1010ad7c:	30ffffc4 	addi	r3,r6,-1
1010ad80:	1540742e 	bgeu	r2,r21,1010af54 <__umoddi3+0x508>
1010ad84:	180d883a 	mov	r6,r3
1010ad88:	15efc83a 	sub	r23,r2,r23
1010ad8c:	b00b883a 	mov	r5,r22
1010ad90:	b809883a 	mov	r4,r23
1010ad94:	d9800115 	stw	r6,4(sp)
1010ad98:	da000015 	stw	r8,0(sp)
1010ad9c:	010b0e00 	call	1010b0e0 <__umodsi3>
1010ada0:	b00b883a 	mov	r5,r22
1010ada4:	b809883a 	mov	r4,r23
1010ada8:	1039883a 	mov	fp,r2
1010adac:	010b07c0 	call	1010b07c <__udivsi3>
1010adb0:	da000017 	ldw	r8,0(sp)
1010adb4:	e038943a 	slli	fp,fp,16
1010adb8:	100b883a 	mov	r5,r2
1010adbc:	4089383a 	mul	r4,r8,r2
1010adc0:	8a3fffcc 	andi	r8,r17,65535
1010adc4:	4710b03a 	or	r8,r8,fp
1010adc8:	d9800117 	ldw	r6,4(sp)
1010adcc:	4100042e 	bgeu	r8,r4,1010ade0 <__umoddi3+0x394>
1010add0:	4551883a 	add	r8,r8,r21
1010add4:	10bfffc4 	addi	r2,r2,-1
1010add8:	45405a2e 	bgeu	r8,r21,1010af44 <__umoddi3+0x4f8>
1010addc:	100b883a 	mov	r5,r2
1010ade0:	300c943a 	slli	r6,r6,16
1010ade4:	91ffffcc 	andi	r7,r18,65535
1010ade8:	9004d43a 	srli	r2,r18,16
1010adec:	314cb03a 	or	r6,r6,r5
1010adf0:	317fffcc 	andi	r5,r6,65535
1010adf4:	300cd43a 	srli	r6,r6,16
1010adf8:	29d3383a 	mul	r9,r5,r7
1010adfc:	288b383a 	mul	r5,r5,r2
1010ae00:	31cf383a 	mul	r7,r6,r7
1010ae04:	4806d43a 	srli	r3,r9,16
1010ae08:	4111c83a 	sub	r8,r8,r4
1010ae0c:	29cb883a 	add	r5,r5,r7
1010ae10:	194b883a 	add	r5,r3,r5
1010ae14:	3085383a 	mul	r2,r6,r2
1010ae18:	29c0022e 	bgeu	r5,r7,1010ae24 <__umoddi3+0x3d8>
1010ae1c:	00c00074 	movhi	r3,1
1010ae20:	10c5883a 	add	r2,r2,r3
1010ae24:	2808d43a 	srli	r4,r5,16
1010ae28:	280a943a 	slli	r5,r5,16
1010ae2c:	4a7fffcc 	andi	r9,r9,65535
1010ae30:	2085883a 	add	r2,r4,r2
1010ae34:	2a4b883a 	add	r5,r5,r9
1010ae38:	40803636 	bltu	r8,r2,1010af14 <__umoddi3+0x4c8>
1010ae3c:	40804d26 	beq	r8,r2,1010af74 <__umoddi3+0x528>
1010ae40:	4089c83a 	sub	r4,r8,r2
1010ae44:	280f883a 	mov	r7,r5
1010ae48:	81cfc83a 	sub	r7,r16,r7
1010ae4c:	81c7803a 	cmpltu	r3,r16,r7
1010ae50:	20c7c83a 	sub	r3,r4,r3
1010ae54:	1cc4983a 	sll	r2,r3,r19
1010ae58:	3d0ed83a 	srl	r7,r7,r20
1010ae5c:	1d06d83a 	srl	r3,r3,r20
1010ae60:	11c4b03a 	or	r2,r2,r7
1010ae64:	003f9306 	br	1010acb4 <__umoddi3+0x268>
1010ae68:	9ca6983a 	sll	r19,r19,r18
1010ae6c:	88e8d83a 	srl	r20,r17,r3
1010ae70:	80c4d83a 	srl	r2,r16,r3
1010ae74:	982cd43a 	srli	r22,r19,16
1010ae78:	8ca2983a 	sll	r17,r17,r18
1010ae7c:	a009883a 	mov	r4,r20
1010ae80:	b00b883a 	mov	r5,r22
1010ae84:	1478b03a 	or	fp,r2,r17
1010ae88:	010b0e00 	call	1010b0e0 <__umodsi3>
1010ae8c:	a009883a 	mov	r4,r20
1010ae90:	b00b883a 	mov	r5,r22
1010ae94:	1023883a 	mov	r17,r2
1010ae98:	010b07c0 	call	1010b07c <__udivsi3>
1010ae9c:	9d7fffcc 	andi	r21,r19,65535
1010aea0:	880a943a 	slli	r5,r17,16
1010aea4:	e008d43a 	srli	r4,fp,16
1010aea8:	a885383a 	mul	r2,r21,r2
1010aeac:	84a8983a 	sll	r20,r16,r18
1010aeb0:	2148b03a 	or	r4,r4,r5
1010aeb4:	2080042e 	bgeu	r4,r2,1010aec8 <__umoddi3+0x47c>
1010aeb8:	24c9883a 	add	r4,r4,r19
1010aebc:	24c00236 	bltu	r4,r19,1010aec8 <__umoddi3+0x47c>
1010aec0:	2080012e 	bgeu	r4,r2,1010aec8 <__umoddi3+0x47c>
1010aec4:	24c9883a 	add	r4,r4,r19
1010aec8:	20a3c83a 	sub	r17,r4,r2
1010aecc:	b00b883a 	mov	r5,r22
1010aed0:	8809883a 	mov	r4,r17
1010aed4:	010b0e00 	call	1010b0e0 <__umodsi3>
1010aed8:	102f883a 	mov	r23,r2
1010aedc:	8809883a 	mov	r4,r17
1010aee0:	b00b883a 	mov	r5,r22
1010aee4:	010b07c0 	call	1010b07c <__udivsi3>
1010aee8:	b82e943a 	slli	r23,r23,16
1010aeec:	a885383a 	mul	r2,r21,r2
1010aef0:	e13fffcc 	andi	r4,fp,65535
1010aef4:	25c8b03a 	or	r4,r4,r23
1010aef8:	2080042e 	bgeu	r4,r2,1010af0c <__umoddi3+0x4c0>
1010aefc:	24c9883a 	add	r4,r4,r19
1010af00:	24c00236 	bltu	r4,r19,1010af0c <__umoddi3+0x4c0>
1010af04:	2080012e 	bgeu	r4,r2,1010af0c <__umoddi3+0x4c0>
1010af08:	24c9883a 	add	r4,r4,r19
1010af0c:	20a3c83a 	sub	r17,r4,r2
1010af10:	003f4806 	br	1010ac34 <__umoddi3+0x1e8>
1010af14:	2c8fc83a 	sub	r7,r5,r18
1010af18:	1545c83a 	sub	r2,r2,r21
1010af1c:	29cb803a 	cmpltu	r5,r5,r7
1010af20:	1145c83a 	sub	r2,r2,r5
1010af24:	4089c83a 	sub	r4,r8,r2
1010af28:	003fc706 	br	1010ae48 <__umoddi3+0x3fc>
1010af2c:	01000604 	movi	r4,24
1010af30:	003f1806 	br	1010ab94 <__umoddi3+0x148>
1010af34:	00800604 	movi	r2,24
1010af38:	003f3206 	br	1010ac04 <__umoddi3+0x1b8>
1010af3c:	01000604 	movi	r4,24
1010af40:	003ed906 	br	1010aaa8 <__umoddi3+0x5c>
1010af44:	413fa52e 	bgeu	r8,r4,1010addc <__umoddi3+0x390>
1010af48:	297fff84 	addi	r5,r5,-2
1010af4c:	4551883a 	add	r8,r8,r21
1010af50:	003fa306 	br	1010ade0 <__umoddi3+0x394>
1010af54:	15ff8b2e 	bgeu	r2,r23,1010ad84 <__umoddi3+0x338>
1010af58:	31bfff84 	addi	r6,r6,-2
1010af5c:	1545883a 	add	r2,r2,r21
1010af60:	003f8906 	br	1010ad88 <__umoddi3+0x33c>
1010af64:	24c9883a 	add	r4,r4,r19
1010af68:	003eee06 	br	1010ab24 <__umoddi3+0xd8>
1010af6c:	8005883a 	mov	r2,r16
1010af70:	003f1706 	br	1010abd0 <__umoddi3+0x184>
1010af74:	817fe736 	bltu	r16,r5,1010af14 <__umoddi3+0x4c8>
1010af78:	280f883a 	mov	r7,r5
1010af7c:	0009883a 	mov	r4,zero
1010af80:	003fb106 	br	1010ae48 <__umoddi3+0x3fc>

1010af84 <__divsi3>:
1010af84:	20001b16 	blt	r4,zero,1010aff4 <__divsi3+0x70>
1010af88:	000f883a 	mov	r7,zero
1010af8c:	28001616 	blt	r5,zero,1010afe8 <__divsi3+0x64>
1010af90:	200d883a 	mov	r6,r4
1010af94:	29001a2e 	bgeu	r5,r4,1010b000 <__divsi3+0x7c>
1010af98:	00800804 	movi	r2,32
1010af9c:	00c00044 	movi	r3,1
1010afa0:	00000106 	br	1010afa8 <__divsi3+0x24>
1010afa4:	10000d26 	beq	r2,zero,1010afdc <__divsi3+0x58>
1010afa8:	294b883a 	add	r5,r5,r5
1010afac:	10bfffc4 	addi	r2,r2,-1
1010afb0:	18c7883a 	add	r3,r3,r3
1010afb4:	293ffb36 	bltu	r5,r4,1010afa4 <__divsi3+0x20>
1010afb8:	0005883a 	mov	r2,zero
1010afbc:	18000726 	beq	r3,zero,1010afdc <__divsi3+0x58>
1010afc0:	0005883a 	mov	r2,zero
1010afc4:	31400236 	bltu	r6,r5,1010afd0 <__divsi3+0x4c>
1010afc8:	314dc83a 	sub	r6,r6,r5
1010afcc:	10c4b03a 	or	r2,r2,r3
1010afd0:	1806d07a 	srli	r3,r3,1
1010afd4:	280ad07a 	srli	r5,r5,1
1010afd8:	183ffa1e 	bne	r3,zero,1010afc4 <__divsi3+0x40>
1010afdc:	38000126 	beq	r7,zero,1010afe4 <__divsi3+0x60>
1010afe0:	0085c83a 	sub	r2,zero,r2
1010afe4:	f800283a 	ret
1010afe8:	014bc83a 	sub	r5,zero,r5
1010afec:	39c0005c 	xori	r7,r7,1
1010aff0:	003fe706 	br	1010af90 <__divsi3+0xc>
1010aff4:	0109c83a 	sub	r4,zero,r4
1010aff8:	01c00044 	movi	r7,1
1010affc:	003fe306 	br	1010af8c <__divsi3+0x8>
1010b000:	00c00044 	movi	r3,1
1010b004:	003fee06 	br	1010afc0 <__divsi3+0x3c>

1010b008 <__modsi3>:
1010b008:	20001716 	blt	r4,zero,1010b068 <__modsi3+0x60>
1010b00c:	000f883a 	mov	r7,zero
1010b010:	2005883a 	mov	r2,r4
1010b014:	28001216 	blt	r5,zero,1010b060 <__modsi3+0x58>
1010b018:	2900162e 	bgeu	r5,r4,1010b074 <__modsi3+0x6c>
1010b01c:	01800804 	movi	r6,32
1010b020:	00c00044 	movi	r3,1
1010b024:	00000106 	br	1010b02c <__modsi3+0x24>
1010b028:	30000a26 	beq	r6,zero,1010b054 <__modsi3+0x4c>
1010b02c:	294b883a 	add	r5,r5,r5
1010b030:	31bfffc4 	addi	r6,r6,-1
1010b034:	18c7883a 	add	r3,r3,r3
1010b038:	293ffb36 	bltu	r5,r4,1010b028 <__modsi3+0x20>
1010b03c:	18000526 	beq	r3,zero,1010b054 <__modsi3+0x4c>
1010b040:	1806d07a 	srli	r3,r3,1
1010b044:	11400136 	bltu	r2,r5,1010b04c <__modsi3+0x44>
1010b048:	1145c83a 	sub	r2,r2,r5
1010b04c:	280ad07a 	srli	r5,r5,1
1010b050:	183ffb1e 	bne	r3,zero,1010b040 <__modsi3+0x38>
1010b054:	38000126 	beq	r7,zero,1010b05c <__modsi3+0x54>
1010b058:	0085c83a 	sub	r2,zero,r2
1010b05c:	f800283a 	ret
1010b060:	014bc83a 	sub	r5,zero,r5
1010b064:	003fec06 	br	1010b018 <__modsi3+0x10>
1010b068:	0109c83a 	sub	r4,zero,r4
1010b06c:	01c00044 	movi	r7,1
1010b070:	003fe706 	br	1010b010 <__modsi3+0x8>
1010b074:	00c00044 	movi	r3,1
1010b078:	003ff106 	br	1010b040 <__modsi3+0x38>

1010b07c <__udivsi3>:
1010b07c:	200d883a 	mov	r6,r4
1010b080:	2900152e 	bgeu	r5,r4,1010b0d8 <__udivsi3+0x5c>
1010b084:	28001416 	blt	r5,zero,1010b0d8 <__udivsi3+0x5c>
1010b088:	00800804 	movi	r2,32
1010b08c:	00c00044 	movi	r3,1
1010b090:	00000206 	br	1010b09c <__udivsi3+0x20>
1010b094:	10000e26 	beq	r2,zero,1010b0d0 <__udivsi3+0x54>
1010b098:	28000516 	blt	r5,zero,1010b0b0 <__udivsi3+0x34>
1010b09c:	294b883a 	add	r5,r5,r5
1010b0a0:	10bfffc4 	addi	r2,r2,-1
1010b0a4:	18c7883a 	add	r3,r3,r3
1010b0a8:	293ffa36 	bltu	r5,r4,1010b094 <__udivsi3+0x18>
1010b0ac:	18000826 	beq	r3,zero,1010b0d0 <__udivsi3+0x54>
1010b0b0:	0005883a 	mov	r2,zero
1010b0b4:	31400236 	bltu	r6,r5,1010b0c0 <__udivsi3+0x44>
1010b0b8:	314dc83a 	sub	r6,r6,r5
1010b0bc:	10c4b03a 	or	r2,r2,r3
1010b0c0:	1806d07a 	srli	r3,r3,1
1010b0c4:	280ad07a 	srli	r5,r5,1
1010b0c8:	183ffa1e 	bne	r3,zero,1010b0b4 <__udivsi3+0x38>
1010b0cc:	f800283a 	ret
1010b0d0:	0005883a 	mov	r2,zero
1010b0d4:	f800283a 	ret
1010b0d8:	00c00044 	movi	r3,1
1010b0dc:	003ff406 	br	1010b0b0 <__udivsi3+0x34>

1010b0e0 <__umodsi3>:
1010b0e0:	2005883a 	mov	r2,r4
1010b0e4:	2900122e 	bgeu	r5,r4,1010b130 <__umodsi3+0x50>
1010b0e8:	28001116 	blt	r5,zero,1010b130 <__umodsi3+0x50>
1010b0ec:	01800804 	movi	r6,32
1010b0f0:	00c00044 	movi	r3,1
1010b0f4:	00000206 	br	1010b100 <__umodsi3+0x20>
1010b0f8:	30000c26 	beq	r6,zero,1010b12c <__umodsi3+0x4c>
1010b0fc:	28000516 	blt	r5,zero,1010b114 <__umodsi3+0x34>
1010b100:	294b883a 	add	r5,r5,r5
1010b104:	31bfffc4 	addi	r6,r6,-1
1010b108:	18c7883a 	add	r3,r3,r3
1010b10c:	293ffa36 	bltu	r5,r4,1010b0f8 <__umodsi3+0x18>
1010b110:	18000626 	beq	r3,zero,1010b12c <__umodsi3+0x4c>
1010b114:	1806d07a 	srli	r3,r3,1
1010b118:	11400136 	bltu	r2,r5,1010b120 <__umodsi3+0x40>
1010b11c:	1145c83a 	sub	r2,r2,r5
1010b120:	280ad07a 	srli	r5,r5,1
1010b124:	183ffb1e 	bne	r3,zero,1010b114 <__umodsi3+0x34>
1010b128:	f800283a 	ret
1010b12c:	f800283a 	ret
1010b130:	00c00044 	movi	r3,1
1010b134:	003ff706 	br	1010b114 <__umodsi3+0x34>

1010b138 <__adddf3>:
1010b138:	02c00434 	movhi	r11,16
1010b13c:	5affffc4 	addi	r11,r11,-1
1010b140:	2806d7fa 	srli	r3,r5,31
1010b144:	2ad4703a 	and	r10,r5,r11
1010b148:	3ad2703a 	and	r9,r7,r11
1010b14c:	3804d53a 	srli	r2,r7,20
1010b150:	3018d77a 	srli	r12,r6,29
1010b154:	280ad53a 	srli	r5,r5,20
1010b158:	501490fa 	slli	r10,r10,3
1010b15c:	2010d77a 	srli	r8,r4,29
1010b160:	481290fa 	slli	r9,r9,3
1010b164:	380ed7fa 	srli	r7,r7,31
1010b168:	defffb04 	addi	sp,sp,-20
1010b16c:	dc800215 	stw	r18,8(sp)
1010b170:	dc400115 	stw	r17,4(sp)
1010b174:	dc000015 	stw	r16,0(sp)
1010b178:	dfc00415 	stw	ra,16(sp)
1010b17c:	dcc00315 	stw	r19,12(sp)
1010b180:	1c803fcc 	andi	r18,r3,255
1010b184:	2c01ffcc 	andi	r16,r5,2047
1010b188:	5210b03a 	or	r8,r10,r8
1010b18c:	202290fa 	slli	r17,r4,3
1010b190:	1081ffcc 	andi	r2,r2,2047
1010b194:	4b12b03a 	or	r9,r9,r12
1010b198:	300c90fa 	slli	r6,r6,3
1010b19c:	91c07526 	beq	r18,r7,1010b374 <__adddf3+0x23c>
1010b1a0:	8087c83a 	sub	r3,r16,r2
1010b1a4:	00c0ab0e 	bge	zero,r3,1010b454 <__adddf3+0x31c>
1010b1a8:	10002a1e 	bne	r2,zero,1010b254 <__adddf3+0x11c>
1010b1ac:	4984b03a 	or	r2,r9,r6
1010b1b0:	1000961e 	bne	r2,zero,1010b40c <__adddf3+0x2d4>
1010b1b4:	888001cc 	andi	r2,r17,7
1010b1b8:	10000726 	beq	r2,zero,1010b1d8 <__adddf3+0xa0>
1010b1bc:	888003cc 	andi	r2,r17,15
1010b1c0:	00c00104 	movi	r3,4
1010b1c4:	10c00426 	beq	r2,r3,1010b1d8 <__adddf3+0xa0>
1010b1c8:	88c7883a 	add	r3,r17,r3
1010b1cc:	1c63803a 	cmpltu	r17,r3,r17
1010b1d0:	4451883a 	add	r8,r8,r17
1010b1d4:	1823883a 	mov	r17,r3
1010b1d8:	4080202c 	andhi	r2,r8,128
1010b1dc:	10005926 	beq	r2,zero,1010b344 <__adddf3+0x20c>
1010b1e0:	84000044 	addi	r16,r16,1
1010b1e4:	0081ffc4 	movi	r2,2047
1010b1e8:	8080ba26 	beq	r16,r2,1010b4d4 <__adddf3+0x39c>
1010b1ec:	00bfe034 	movhi	r2,65408
1010b1f0:	10bfffc4 	addi	r2,r2,-1
1010b1f4:	4090703a 	and	r8,r8,r2
1010b1f8:	4004977a 	slli	r2,r8,29
1010b1fc:	4010927a 	slli	r8,r8,9
1010b200:	8822d0fa 	srli	r17,r17,3
1010b204:	8401ffcc 	andi	r16,r16,2047
1010b208:	4010d33a 	srli	r8,r8,12
1010b20c:	9007883a 	mov	r3,r18
1010b210:	1444b03a 	or	r2,r2,r17
1010b214:	8401ffcc 	andi	r16,r16,2047
1010b218:	8020953a 	slli	r16,r16,20
1010b21c:	18c03fcc 	andi	r3,r3,255
1010b220:	01000434 	movhi	r4,16
1010b224:	213fffc4 	addi	r4,r4,-1
1010b228:	180697fa 	slli	r3,r3,31
1010b22c:	4110703a 	and	r8,r8,r4
1010b230:	4410b03a 	or	r8,r8,r16
1010b234:	40c6b03a 	or	r3,r8,r3
1010b238:	dfc00417 	ldw	ra,16(sp)
1010b23c:	dcc00317 	ldw	r19,12(sp)
1010b240:	dc800217 	ldw	r18,8(sp)
1010b244:	dc400117 	ldw	r17,4(sp)
1010b248:	dc000017 	ldw	r16,0(sp)
1010b24c:	dec00504 	addi	sp,sp,20
1010b250:	f800283a 	ret
1010b254:	0081ffc4 	movi	r2,2047
1010b258:	80bfd626 	beq	r16,r2,1010b1b4 <__adddf3+0x7c>
1010b25c:	4a402034 	orhi	r9,r9,128
1010b260:	00800e04 	movi	r2,56
1010b264:	10c09f16 	blt	r2,r3,1010b4e4 <__adddf3+0x3ac>
1010b268:	008007c4 	movi	r2,31
1010b26c:	10c0c216 	blt	r2,r3,1010b578 <__adddf3+0x440>
1010b270:	00800804 	movi	r2,32
1010b274:	10c5c83a 	sub	r2,r2,r3
1010b278:	488a983a 	sll	r5,r9,r2
1010b27c:	30c8d83a 	srl	r4,r6,r3
1010b280:	3084983a 	sll	r2,r6,r2
1010b284:	48c6d83a 	srl	r3,r9,r3
1010b288:	290cb03a 	or	r6,r5,r4
1010b28c:	1004c03a 	cmpne	r2,r2,zero
1010b290:	308cb03a 	or	r6,r6,r2
1010b294:	898dc83a 	sub	r6,r17,r6
1010b298:	89a3803a 	cmpltu	r17,r17,r6
1010b29c:	40d1c83a 	sub	r8,r8,r3
1010b2a0:	4451c83a 	sub	r8,r8,r17
1010b2a4:	3023883a 	mov	r17,r6
1010b2a8:	4080202c 	andhi	r2,r8,128
1010b2ac:	10002326 	beq	r2,zero,1010b33c <__adddf3+0x204>
1010b2b0:	04c02034 	movhi	r19,128
1010b2b4:	9cffffc4 	addi	r19,r19,-1
1010b2b8:	44e6703a 	and	r19,r8,r19
1010b2bc:	98007626 	beq	r19,zero,1010b498 <__adddf3+0x360>
1010b2c0:	9809883a 	mov	r4,r19
1010b2c4:	010d73c0 	call	1010d73c <__clzsi2>
1010b2c8:	10fffe04 	addi	r3,r2,-8
1010b2cc:	010007c4 	movi	r4,31
1010b2d0:	20c07716 	blt	r4,r3,1010b4b0 <__adddf3+0x378>
1010b2d4:	00800804 	movi	r2,32
1010b2d8:	10c5c83a 	sub	r2,r2,r3
1010b2dc:	8884d83a 	srl	r2,r17,r2
1010b2e0:	98d0983a 	sll	r8,r19,r3
1010b2e4:	88e2983a 	sll	r17,r17,r3
1010b2e8:	1204b03a 	or	r2,r2,r8
1010b2ec:	1c007416 	blt	r3,r16,1010b4c0 <__adddf3+0x388>
1010b2f0:	1c21c83a 	sub	r16,r3,r16
1010b2f4:	82000044 	addi	r8,r16,1
1010b2f8:	00c007c4 	movi	r3,31
1010b2fc:	1a009116 	blt	r3,r8,1010b544 <__adddf3+0x40c>
1010b300:	00c00804 	movi	r3,32
1010b304:	1a07c83a 	sub	r3,r3,r8
1010b308:	8a08d83a 	srl	r4,r17,r8
1010b30c:	88e2983a 	sll	r17,r17,r3
1010b310:	10c6983a 	sll	r3,r2,r3
1010b314:	1210d83a 	srl	r8,r2,r8
1010b318:	8804c03a 	cmpne	r2,r17,zero
1010b31c:	1906b03a 	or	r3,r3,r4
1010b320:	18a2b03a 	or	r17,r3,r2
1010b324:	0021883a 	mov	r16,zero
1010b328:	003fa206 	br	1010b1b4 <__adddf3+0x7c>
1010b32c:	1890b03a 	or	r8,r3,r2
1010b330:	40017d26 	beq	r8,zero,1010b928 <__adddf3+0x7f0>
1010b334:	1011883a 	mov	r8,r2
1010b338:	1823883a 	mov	r17,r3
1010b33c:	888001cc 	andi	r2,r17,7
1010b340:	103f9e1e 	bne	r2,zero,1010b1bc <__adddf3+0x84>
1010b344:	4004977a 	slli	r2,r8,29
1010b348:	8822d0fa 	srli	r17,r17,3
1010b34c:	4010d0fa 	srli	r8,r8,3
1010b350:	9007883a 	mov	r3,r18
1010b354:	1444b03a 	or	r2,r2,r17
1010b358:	0101ffc4 	movi	r4,2047
1010b35c:	81002426 	beq	r16,r4,1010b3f0 <__adddf3+0x2b8>
1010b360:	8120703a 	and	r16,r16,r4
1010b364:	01000434 	movhi	r4,16
1010b368:	213fffc4 	addi	r4,r4,-1
1010b36c:	4110703a 	and	r8,r8,r4
1010b370:	003fa806 	br	1010b214 <__adddf3+0xdc>
1010b374:	8089c83a 	sub	r4,r16,r2
1010b378:	01005e0e 	bge	zero,r4,1010b4f4 <__adddf3+0x3bc>
1010b37c:	10002b26 	beq	r2,zero,1010b42c <__adddf3+0x2f4>
1010b380:	0081ffc4 	movi	r2,2047
1010b384:	80bf8b26 	beq	r16,r2,1010b1b4 <__adddf3+0x7c>
1010b388:	4a402034 	orhi	r9,r9,128
1010b38c:	00800e04 	movi	r2,56
1010b390:	1100a40e 	bge	r2,r4,1010b624 <__adddf3+0x4ec>
1010b394:	498cb03a 	or	r6,r9,r6
1010b398:	300ac03a 	cmpne	r5,r6,zero
1010b39c:	0013883a 	mov	r9,zero
1010b3a0:	2c4b883a 	add	r5,r5,r17
1010b3a4:	2c63803a 	cmpltu	r17,r5,r17
1010b3a8:	4a11883a 	add	r8,r9,r8
1010b3ac:	8a11883a 	add	r8,r17,r8
1010b3b0:	2823883a 	mov	r17,r5
1010b3b4:	4080202c 	andhi	r2,r8,128
1010b3b8:	103fe026 	beq	r2,zero,1010b33c <__adddf3+0x204>
1010b3bc:	84000044 	addi	r16,r16,1
1010b3c0:	0081ffc4 	movi	r2,2047
1010b3c4:	8080d226 	beq	r16,r2,1010b710 <__adddf3+0x5d8>
1010b3c8:	00bfe034 	movhi	r2,65408
1010b3cc:	10bfffc4 	addi	r2,r2,-1
1010b3d0:	4090703a 	and	r8,r8,r2
1010b3d4:	880ad07a 	srli	r5,r17,1
1010b3d8:	400897fa 	slli	r4,r8,31
1010b3dc:	88c0004c 	andi	r3,r17,1
1010b3e0:	28e2b03a 	or	r17,r5,r3
1010b3e4:	4010d07a 	srli	r8,r8,1
1010b3e8:	2462b03a 	or	r17,r4,r17
1010b3ec:	003f7106 	br	1010b1b4 <__adddf3+0x7c>
1010b3f0:	4088b03a 	or	r4,r8,r2
1010b3f4:	20014526 	beq	r4,zero,1010b90c <__adddf3+0x7d4>
1010b3f8:	01000434 	movhi	r4,16
1010b3fc:	42000234 	orhi	r8,r8,8
1010b400:	213fffc4 	addi	r4,r4,-1
1010b404:	4110703a 	and	r8,r8,r4
1010b408:	003f8206 	br	1010b214 <__adddf3+0xdc>
1010b40c:	18ffffc4 	addi	r3,r3,-1
1010b410:	1800491e 	bne	r3,zero,1010b538 <__adddf3+0x400>
1010b414:	898bc83a 	sub	r5,r17,r6
1010b418:	8963803a 	cmpltu	r17,r17,r5
1010b41c:	4251c83a 	sub	r8,r8,r9
1010b420:	4451c83a 	sub	r8,r8,r17
1010b424:	2823883a 	mov	r17,r5
1010b428:	003f9f06 	br	1010b2a8 <__adddf3+0x170>
1010b42c:	4984b03a 	or	r2,r9,r6
1010b430:	103f6026 	beq	r2,zero,1010b1b4 <__adddf3+0x7c>
1010b434:	213fffc4 	addi	r4,r4,-1
1010b438:	2000931e 	bne	r4,zero,1010b688 <__adddf3+0x550>
1010b43c:	898d883a 	add	r6,r17,r6
1010b440:	3463803a 	cmpltu	r17,r6,r17
1010b444:	4251883a 	add	r8,r8,r9
1010b448:	8a11883a 	add	r8,r17,r8
1010b44c:	3023883a 	mov	r17,r6
1010b450:	003fd806 	br	1010b3b4 <__adddf3+0x27c>
1010b454:	1800541e 	bne	r3,zero,1010b5a8 <__adddf3+0x470>
1010b458:	80800044 	addi	r2,r16,1
1010b45c:	1081ffcc 	andi	r2,r2,2047
1010b460:	00c00044 	movi	r3,1
1010b464:	1880a00e 	bge	r3,r2,1010b6e8 <__adddf3+0x5b0>
1010b468:	8989c83a 	sub	r4,r17,r6
1010b46c:	8905803a 	cmpltu	r2,r17,r4
1010b470:	4267c83a 	sub	r19,r8,r9
1010b474:	98a7c83a 	sub	r19,r19,r2
1010b478:	9880202c 	andhi	r2,r19,128
1010b47c:	10006326 	beq	r2,zero,1010b60c <__adddf3+0x4d4>
1010b480:	3463c83a 	sub	r17,r6,r17
1010b484:	4a07c83a 	sub	r3,r9,r8
1010b488:	344d803a 	cmpltu	r6,r6,r17
1010b48c:	19a7c83a 	sub	r19,r3,r6
1010b490:	3825883a 	mov	r18,r7
1010b494:	983f8a1e 	bne	r19,zero,1010b2c0 <__adddf3+0x188>
1010b498:	8809883a 	mov	r4,r17
1010b49c:	010d73c0 	call	1010d73c <__clzsi2>
1010b4a0:	10800804 	addi	r2,r2,32
1010b4a4:	10fffe04 	addi	r3,r2,-8
1010b4a8:	010007c4 	movi	r4,31
1010b4ac:	20ff890e 	bge	r4,r3,1010b2d4 <__adddf3+0x19c>
1010b4b0:	10bff604 	addi	r2,r2,-40
1010b4b4:	8884983a 	sll	r2,r17,r2
1010b4b8:	0023883a 	mov	r17,zero
1010b4bc:	1c3f8c0e 	bge	r3,r16,1010b2f0 <__adddf3+0x1b8>
1010b4c0:	023fe034 	movhi	r8,65408
1010b4c4:	423fffc4 	addi	r8,r8,-1
1010b4c8:	80e1c83a 	sub	r16,r16,r3
1010b4cc:	1210703a 	and	r8,r2,r8
1010b4d0:	003f3806 	br	1010b1b4 <__adddf3+0x7c>
1010b4d4:	9007883a 	mov	r3,r18
1010b4d8:	0011883a 	mov	r8,zero
1010b4dc:	0005883a 	mov	r2,zero
1010b4e0:	003f4c06 	br	1010b214 <__adddf3+0xdc>
1010b4e4:	498cb03a 	or	r6,r9,r6
1010b4e8:	300cc03a 	cmpne	r6,r6,zero
1010b4ec:	0007883a 	mov	r3,zero
1010b4f0:	003f6806 	br	1010b294 <__adddf3+0x15c>
1010b4f4:	20009c1e 	bne	r4,zero,1010b768 <__adddf3+0x630>
1010b4f8:	80800044 	addi	r2,r16,1
1010b4fc:	1141ffcc 	andi	r5,r2,2047
1010b500:	01000044 	movi	r4,1
1010b504:	2140670e 	bge	r4,r5,1010b6a4 <__adddf3+0x56c>
1010b508:	0101ffc4 	movi	r4,2047
1010b50c:	11007f26 	beq	r2,r4,1010b70c <__adddf3+0x5d4>
1010b510:	898d883a 	add	r6,r17,r6
1010b514:	4247883a 	add	r3,r8,r9
1010b518:	3451803a 	cmpltu	r8,r6,r17
1010b51c:	40d1883a 	add	r8,r8,r3
1010b520:	402297fa 	slli	r17,r8,31
1010b524:	300cd07a 	srli	r6,r6,1
1010b528:	4010d07a 	srli	r8,r8,1
1010b52c:	1021883a 	mov	r16,r2
1010b530:	89a2b03a 	or	r17,r17,r6
1010b534:	003f1f06 	br	1010b1b4 <__adddf3+0x7c>
1010b538:	0081ffc4 	movi	r2,2047
1010b53c:	80bf481e 	bne	r16,r2,1010b260 <__adddf3+0x128>
1010b540:	003f1c06 	br	1010b1b4 <__adddf3+0x7c>
1010b544:	843ff844 	addi	r16,r16,-31
1010b548:	01000804 	movi	r4,32
1010b54c:	1406d83a 	srl	r3,r2,r16
1010b550:	41005026 	beq	r8,r4,1010b694 <__adddf3+0x55c>
1010b554:	01001004 	movi	r4,64
1010b558:	2211c83a 	sub	r8,r4,r8
1010b55c:	1204983a 	sll	r2,r2,r8
1010b560:	88a2b03a 	or	r17,r17,r2
1010b564:	8822c03a 	cmpne	r17,r17,zero
1010b568:	1c62b03a 	or	r17,r3,r17
1010b56c:	0011883a 	mov	r8,zero
1010b570:	0021883a 	mov	r16,zero
1010b574:	003f7106 	br	1010b33c <__adddf3+0x204>
1010b578:	193ff804 	addi	r4,r3,-32
1010b57c:	00800804 	movi	r2,32
1010b580:	4908d83a 	srl	r4,r9,r4
1010b584:	18804526 	beq	r3,r2,1010b69c <__adddf3+0x564>
1010b588:	00801004 	movi	r2,64
1010b58c:	10c5c83a 	sub	r2,r2,r3
1010b590:	4886983a 	sll	r3,r9,r2
1010b594:	198cb03a 	or	r6,r3,r6
1010b598:	300cc03a 	cmpne	r6,r6,zero
1010b59c:	218cb03a 	or	r6,r4,r6
1010b5a0:	0007883a 	mov	r3,zero
1010b5a4:	003f3b06 	br	1010b294 <__adddf3+0x15c>
1010b5a8:	80002a26 	beq	r16,zero,1010b654 <__adddf3+0x51c>
1010b5ac:	0101ffc4 	movi	r4,2047
1010b5b0:	11006826 	beq	r2,r4,1010b754 <__adddf3+0x61c>
1010b5b4:	00c7c83a 	sub	r3,zero,r3
1010b5b8:	42002034 	orhi	r8,r8,128
1010b5bc:	01000e04 	movi	r4,56
1010b5c0:	20c07c16 	blt	r4,r3,1010b7b4 <__adddf3+0x67c>
1010b5c4:	010007c4 	movi	r4,31
1010b5c8:	20c0da16 	blt	r4,r3,1010b934 <__adddf3+0x7fc>
1010b5cc:	01000804 	movi	r4,32
1010b5d0:	20c9c83a 	sub	r4,r4,r3
1010b5d4:	4114983a 	sll	r10,r8,r4
1010b5d8:	88cad83a 	srl	r5,r17,r3
1010b5dc:	8908983a 	sll	r4,r17,r4
1010b5e0:	40c6d83a 	srl	r3,r8,r3
1010b5e4:	5162b03a 	or	r17,r10,r5
1010b5e8:	2008c03a 	cmpne	r4,r4,zero
1010b5ec:	8922b03a 	or	r17,r17,r4
1010b5f0:	3463c83a 	sub	r17,r6,r17
1010b5f4:	48c7c83a 	sub	r3,r9,r3
1010b5f8:	344d803a 	cmpltu	r6,r6,r17
1010b5fc:	1991c83a 	sub	r8,r3,r6
1010b600:	1021883a 	mov	r16,r2
1010b604:	3825883a 	mov	r18,r7
1010b608:	003f2706 	br	1010b2a8 <__adddf3+0x170>
1010b60c:	24d0b03a 	or	r8,r4,r19
1010b610:	40001b1e 	bne	r8,zero,1010b680 <__adddf3+0x548>
1010b614:	0005883a 	mov	r2,zero
1010b618:	0007883a 	mov	r3,zero
1010b61c:	0021883a 	mov	r16,zero
1010b620:	003f4d06 	br	1010b358 <__adddf3+0x220>
1010b624:	008007c4 	movi	r2,31
1010b628:	11003c16 	blt	r2,r4,1010b71c <__adddf3+0x5e4>
1010b62c:	00800804 	movi	r2,32
1010b630:	1105c83a 	sub	r2,r2,r4
1010b634:	488e983a 	sll	r7,r9,r2
1010b638:	310ad83a 	srl	r5,r6,r4
1010b63c:	3084983a 	sll	r2,r6,r2
1010b640:	4912d83a 	srl	r9,r9,r4
1010b644:	394ab03a 	or	r5,r7,r5
1010b648:	1004c03a 	cmpne	r2,r2,zero
1010b64c:	288ab03a 	or	r5,r5,r2
1010b650:	003f5306 	br	1010b3a0 <__adddf3+0x268>
1010b654:	4448b03a 	or	r4,r8,r17
1010b658:	20003e26 	beq	r4,zero,1010b754 <__adddf3+0x61c>
1010b65c:	00c6303a 	nor	r3,zero,r3
1010b660:	18003a1e 	bne	r3,zero,1010b74c <__adddf3+0x614>
1010b664:	3463c83a 	sub	r17,r6,r17
1010b668:	4a07c83a 	sub	r3,r9,r8
1010b66c:	344d803a 	cmpltu	r6,r6,r17
1010b670:	1991c83a 	sub	r8,r3,r6
1010b674:	1021883a 	mov	r16,r2
1010b678:	3825883a 	mov	r18,r7
1010b67c:	003f0a06 	br	1010b2a8 <__adddf3+0x170>
1010b680:	2023883a 	mov	r17,r4
1010b684:	003f0d06 	br	1010b2bc <__adddf3+0x184>
1010b688:	0081ffc4 	movi	r2,2047
1010b68c:	80bf3f1e 	bne	r16,r2,1010b38c <__adddf3+0x254>
1010b690:	003ec806 	br	1010b1b4 <__adddf3+0x7c>
1010b694:	0005883a 	mov	r2,zero
1010b698:	003fb106 	br	1010b560 <__adddf3+0x428>
1010b69c:	0007883a 	mov	r3,zero
1010b6a0:	003fbc06 	br	1010b594 <__adddf3+0x45c>
1010b6a4:	4444b03a 	or	r2,r8,r17
1010b6a8:	8000871e 	bne	r16,zero,1010b8c8 <__adddf3+0x790>
1010b6ac:	1000ba26 	beq	r2,zero,1010b998 <__adddf3+0x860>
1010b6b0:	4984b03a 	or	r2,r9,r6
1010b6b4:	103ebf26 	beq	r2,zero,1010b1b4 <__adddf3+0x7c>
1010b6b8:	8985883a 	add	r2,r17,r6
1010b6bc:	4247883a 	add	r3,r8,r9
1010b6c0:	1451803a 	cmpltu	r8,r2,r17
1010b6c4:	40d1883a 	add	r8,r8,r3
1010b6c8:	40c0202c 	andhi	r3,r8,128
1010b6cc:	1023883a 	mov	r17,r2
1010b6d0:	183f1a26 	beq	r3,zero,1010b33c <__adddf3+0x204>
1010b6d4:	00bfe034 	movhi	r2,65408
1010b6d8:	10bfffc4 	addi	r2,r2,-1
1010b6dc:	2021883a 	mov	r16,r4
1010b6e0:	4090703a 	and	r8,r8,r2
1010b6e4:	003eb306 	br	1010b1b4 <__adddf3+0x7c>
1010b6e8:	4444b03a 	or	r2,r8,r17
1010b6ec:	8000291e 	bne	r16,zero,1010b794 <__adddf3+0x65c>
1010b6f0:	10004b1e 	bne	r2,zero,1010b820 <__adddf3+0x6e8>
1010b6f4:	4990b03a 	or	r8,r9,r6
1010b6f8:	40008b26 	beq	r8,zero,1010b928 <__adddf3+0x7f0>
1010b6fc:	4811883a 	mov	r8,r9
1010b700:	3023883a 	mov	r17,r6
1010b704:	3825883a 	mov	r18,r7
1010b708:	003eaa06 	br	1010b1b4 <__adddf3+0x7c>
1010b70c:	1021883a 	mov	r16,r2
1010b710:	0011883a 	mov	r8,zero
1010b714:	0005883a 	mov	r2,zero
1010b718:	003f0f06 	br	1010b358 <__adddf3+0x220>
1010b71c:	217ff804 	addi	r5,r4,-32
1010b720:	00800804 	movi	r2,32
1010b724:	494ad83a 	srl	r5,r9,r5
1010b728:	20807d26 	beq	r4,r2,1010b920 <__adddf3+0x7e8>
1010b72c:	00801004 	movi	r2,64
1010b730:	1109c83a 	sub	r4,r2,r4
1010b734:	4912983a 	sll	r9,r9,r4
1010b738:	498cb03a 	or	r6,r9,r6
1010b73c:	300cc03a 	cmpne	r6,r6,zero
1010b740:	298ab03a 	or	r5,r5,r6
1010b744:	0013883a 	mov	r9,zero
1010b748:	003f1506 	br	1010b3a0 <__adddf3+0x268>
1010b74c:	0101ffc4 	movi	r4,2047
1010b750:	113f9a1e 	bne	r2,r4,1010b5bc <__adddf3+0x484>
1010b754:	4811883a 	mov	r8,r9
1010b758:	3023883a 	mov	r17,r6
1010b75c:	1021883a 	mov	r16,r2
1010b760:	3825883a 	mov	r18,r7
1010b764:	003e9306 	br	1010b1b4 <__adddf3+0x7c>
1010b768:	8000161e 	bne	r16,zero,1010b7c4 <__adddf3+0x68c>
1010b76c:	444ab03a 	or	r5,r8,r17
1010b770:	28005126 	beq	r5,zero,1010b8b8 <__adddf3+0x780>
1010b774:	0108303a 	nor	r4,zero,r4
1010b778:	20004d1e 	bne	r4,zero,1010b8b0 <__adddf3+0x778>
1010b77c:	89a3883a 	add	r17,r17,r6
1010b780:	4253883a 	add	r9,r8,r9
1010b784:	898d803a 	cmpltu	r6,r17,r6
1010b788:	3251883a 	add	r8,r6,r9
1010b78c:	1021883a 	mov	r16,r2
1010b790:	003f0806 	br	1010b3b4 <__adddf3+0x27c>
1010b794:	1000301e 	bne	r2,zero,1010b858 <__adddf3+0x720>
1010b798:	4984b03a 	or	r2,r9,r6
1010b79c:	10007126 	beq	r2,zero,1010b964 <__adddf3+0x82c>
1010b7a0:	4811883a 	mov	r8,r9
1010b7a4:	3023883a 	mov	r17,r6
1010b7a8:	3825883a 	mov	r18,r7
1010b7ac:	0401ffc4 	movi	r16,2047
1010b7b0:	003e8006 	br	1010b1b4 <__adddf3+0x7c>
1010b7b4:	4462b03a 	or	r17,r8,r17
1010b7b8:	8822c03a 	cmpne	r17,r17,zero
1010b7bc:	0007883a 	mov	r3,zero
1010b7c0:	003f8b06 	br	1010b5f0 <__adddf3+0x4b8>
1010b7c4:	0141ffc4 	movi	r5,2047
1010b7c8:	11403b26 	beq	r2,r5,1010b8b8 <__adddf3+0x780>
1010b7cc:	0109c83a 	sub	r4,zero,r4
1010b7d0:	42002034 	orhi	r8,r8,128
1010b7d4:	01400e04 	movi	r5,56
1010b7d8:	29006716 	blt	r5,r4,1010b978 <__adddf3+0x840>
1010b7dc:	014007c4 	movi	r5,31
1010b7e0:	29007016 	blt	r5,r4,1010b9a4 <__adddf3+0x86c>
1010b7e4:	01400804 	movi	r5,32
1010b7e8:	290bc83a 	sub	r5,r5,r4
1010b7ec:	4154983a 	sll	r10,r8,r5
1010b7f0:	890ed83a 	srl	r7,r17,r4
1010b7f4:	894a983a 	sll	r5,r17,r5
1010b7f8:	4108d83a 	srl	r4,r8,r4
1010b7fc:	51e2b03a 	or	r17,r10,r7
1010b800:	280ac03a 	cmpne	r5,r5,zero
1010b804:	8962b03a 	or	r17,r17,r5
1010b808:	89a3883a 	add	r17,r17,r6
1010b80c:	2253883a 	add	r9,r4,r9
1010b810:	898d803a 	cmpltu	r6,r17,r6
1010b814:	3251883a 	add	r8,r6,r9
1010b818:	1021883a 	mov	r16,r2
1010b81c:	003ee506 	br	1010b3b4 <__adddf3+0x27c>
1010b820:	4984b03a 	or	r2,r9,r6
1010b824:	103e6326 	beq	r2,zero,1010b1b4 <__adddf3+0x7c>
1010b828:	8987c83a 	sub	r3,r17,r6
1010b82c:	88c9803a 	cmpltu	r4,r17,r3
1010b830:	4245c83a 	sub	r2,r8,r9
1010b834:	1105c83a 	sub	r2,r2,r4
1010b838:	1100202c 	andhi	r4,r2,128
1010b83c:	203ebb26 	beq	r4,zero,1010b32c <__adddf3+0x1f4>
1010b840:	3463c83a 	sub	r17,r6,r17
1010b844:	4a07c83a 	sub	r3,r9,r8
1010b848:	344d803a 	cmpltu	r6,r6,r17
1010b84c:	1991c83a 	sub	r8,r3,r6
1010b850:	3825883a 	mov	r18,r7
1010b854:	003e5706 	br	1010b1b4 <__adddf3+0x7c>
1010b858:	4984b03a 	or	r2,r9,r6
1010b85c:	10002e26 	beq	r2,zero,1010b918 <__adddf3+0x7e0>
1010b860:	4004d0fa 	srli	r2,r8,3
1010b864:	8822d0fa 	srli	r17,r17,3
1010b868:	4010977a 	slli	r8,r8,29
1010b86c:	10c0022c 	andhi	r3,r2,8
1010b870:	4462b03a 	or	r17,r8,r17
1010b874:	18000826 	beq	r3,zero,1010b898 <__adddf3+0x760>
1010b878:	4808d0fa 	srli	r4,r9,3
1010b87c:	20c0022c 	andhi	r3,r4,8
1010b880:	1800051e 	bne	r3,zero,1010b898 <__adddf3+0x760>
1010b884:	300cd0fa 	srli	r6,r6,3
1010b888:	4806977a 	slli	r3,r9,29
1010b88c:	2005883a 	mov	r2,r4
1010b890:	3825883a 	mov	r18,r7
1010b894:	19a2b03a 	or	r17,r3,r6
1010b898:	8810d77a 	srli	r8,r17,29
1010b89c:	100490fa 	slli	r2,r2,3
1010b8a0:	882290fa 	slli	r17,r17,3
1010b8a4:	0401ffc4 	movi	r16,2047
1010b8a8:	4090b03a 	or	r8,r8,r2
1010b8ac:	003e4106 	br	1010b1b4 <__adddf3+0x7c>
1010b8b0:	0141ffc4 	movi	r5,2047
1010b8b4:	117fc71e 	bne	r2,r5,1010b7d4 <__adddf3+0x69c>
1010b8b8:	4811883a 	mov	r8,r9
1010b8bc:	3023883a 	mov	r17,r6
1010b8c0:	1021883a 	mov	r16,r2
1010b8c4:	003e3b06 	br	1010b1b4 <__adddf3+0x7c>
1010b8c8:	10002f26 	beq	r2,zero,1010b988 <__adddf3+0x850>
1010b8cc:	4984b03a 	or	r2,r9,r6
1010b8d0:	10001126 	beq	r2,zero,1010b918 <__adddf3+0x7e0>
1010b8d4:	4004d0fa 	srli	r2,r8,3
1010b8d8:	8822d0fa 	srli	r17,r17,3
1010b8dc:	4010977a 	slli	r8,r8,29
1010b8e0:	10c0022c 	andhi	r3,r2,8
1010b8e4:	4462b03a 	or	r17,r8,r17
1010b8e8:	183feb26 	beq	r3,zero,1010b898 <__adddf3+0x760>
1010b8ec:	4808d0fa 	srli	r4,r9,3
1010b8f0:	20c0022c 	andhi	r3,r4,8
1010b8f4:	183fe81e 	bne	r3,zero,1010b898 <__adddf3+0x760>
1010b8f8:	300cd0fa 	srli	r6,r6,3
1010b8fc:	4806977a 	slli	r3,r9,29
1010b900:	2005883a 	mov	r2,r4
1010b904:	19a2b03a 	or	r17,r3,r6
1010b908:	003fe306 	br	1010b898 <__adddf3+0x760>
1010b90c:	0011883a 	mov	r8,zero
1010b910:	0005883a 	mov	r2,zero
1010b914:	003e3f06 	br	1010b214 <__adddf3+0xdc>
1010b918:	0401ffc4 	movi	r16,2047
1010b91c:	003e2506 	br	1010b1b4 <__adddf3+0x7c>
1010b920:	0013883a 	mov	r9,zero
1010b924:	003f8406 	br	1010b738 <__adddf3+0x600>
1010b928:	0005883a 	mov	r2,zero
1010b92c:	0007883a 	mov	r3,zero
1010b930:	003e8906 	br	1010b358 <__adddf3+0x220>
1010b934:	197ff804 	addi	r5,r3,-32
1010b938:	01000804 	movi	r4,32
1010b93c:	414ad83a 	srl	r5,r8,r5
1010b940:	19002426 	beq	r3,r4,1010b9d4 <__adddf3+0x89c>
1010b944:	01001004 	movi	r4,64
1010b948:	20c7c83a 	sub	r3,r4,r3
1010b94c:	40c6983a 	sll	r3,r8,r3
1010b950:	1c46b03a 	or	r3,r3,r17
1010b954:	1806c03a 	cmpne	r3,r3,zero
1010b958:	28e2b03a 	or	r17,r5,r3
1010b95c:	0007883a 	mov	r3,zero
1010b960:	003f2306 	br	1010b5f0 <__adddf3+0x4b8>
1010b964:	0007883a 	mov	r3,zero
1010b968:	5811883a 	mov	r8,r11
1010b96c:	00bfffc4 	movi	r2,-1
1010b970:	0401ffc4 	movi	r16,2047
1010b974:	003e7806 	br	1010b358 <__adddf3+0x220>
1010b978:	4462b03a 	or	r17,r8,r17
1010b97c:	8822c03a 	cmpne	r17,r17,zero
1010b980:	0009883a 	mov	r4,zero
1010b984:	003fa006 	br	1010b808 <__adddf3+0x6d0>
1010b988:	4811883a 	mov	r8,r9
1010b98c:	3023883a 	mov	r17,r6
1010b990:	0401ffc4 	movi	r16,2047
1010b994:	003e0706 	br	1010b1b4 <__adddf3+0x7c>
1010b998:	4811883a 	mov	r8,r9
1010b99c:	3023883a 	mov	r17,r6
1010b9a0:	003e0406 	br	1010b1b4 <__adddf3+0x7c>
1010b9a4:	21fff804 	addi	r7,r4,-32
1010b9a8:	01400804 	movi	r5,32
1010b9ac:	41ced83a 	srl	r7,r8,r7
1010b9b0:	21400a26 	beq	r4,r5,1010b9dc <__adddf3+0x8a4>
1010b9b4:	01401004 	movi	r5,64
1010b9b8:	2909c83a 	sub	r4,r5,r4
1010b9bc:	4108983a 	sll	r4,r8,r4
1010b9c0:	2448b03a 	or	r4,r4,r17
1010b9c4:	2008c03a 	cmpne	r4,r4,zero
1010b9c8:	3922b03a 	or	r17,r7,r4
1010b9cc:	0009883a 	mov	r4,zero
1010b9d0:	003f8d06 	br	1010b808 <__adddf3+0x6d0>
1010b9d4:	0007883a 	mov	r3,zero
1010b9d8:	003fdd06 	br	1010b950 <__adddf3+0x818>
1010b9dc:	0009883a 	mov	r4,zero
1010b9e0:	003ff706 	br	1010b9c0 <__adddf3+0x888>

1010b9e4 <__divdf3>:
1010b9e4:	defff204 	addi	sp,sp,-56
1010b9e8:	dd400915 	stw	r21,36(sp)
1010b9ec:	282ad53a 	srli	r21,r5,20
1010b9f0:	dd000815 	stw	r20,32(sp)
1010b9f4:	2828d7fa 	srli	r20,r5,31
1010b9f8:	dc000415 	stw	r16,16(sp)
1010b9fc:	04000434 	movhi	r16,16
1010ba00:	df000c15 	stw	fp,48(sp)
1010ba04:	843fffc4 	addi	r16,r16,-1
1010ba08:	dfc00d15 	stw	ra,52(sp)
1010ba0c:	ddc00b15 	stw	r23,44(sp)
1010ba10:	dd800a15 	stw	r22,40(sp)
1010ba14:	dcc00715 	stw	r19,28(sp)
1010ba18:	dc800615 	stw	r18,24(sp)
1010ba1c:	dc400515 	stw	r17,20(sp)
1010ba20:	ad41ffcc 	andi	r21,r21,2047
1010ba24:	2c20703a 	and	r16,r5,r16
1010ba28:	a7003fcc 	andi	fp,r20,255
1010ba2c:	a8006126 	beq	r21,zero,1010bbb4 <__divdf3+0x1d0>
1010ba30:	0081ffc4 	movi	r2,2047
1010ba34:	2025883a 	mov	r18,r4
1010ba38:	a8803726 	beq	r21,r2,1010bb18 <__divdf3+0x134>
1010ba3c:	80800434 	orhi	r2,r16,16
1010ba40:	100490fa 	slli	r2,r2,3
1010ba44:	2020d77a 	srli	r16,r4,29
1010ba48:	202490fa 	slli	r18,r4,3
1010ba4c:	ad7f0044 	addi	r21,r21,-1023
1010ba50:	80a0b03a 	or	r16,r16,r2
1010ba54:	0027883a 	mov	r19,zero
1010ba58:	0013883a 	mov	r9,zero
1010ba5c:	3804d53a 	srli	r2,r7,20
1010ba60:	382cd7fa 	srli	r22,r7,31
1010ba64:	04400434 	movhi	r17,16
1010ba68:	8c7fffc4 	addi	r17,r17,-1
1010ba6c:	1081ffcc 	andi	r2,r2,2047
1010ba70:	3011883a 	mov	r8,r6
1010ba74:	3c62703a 	and	r17,r7,r17
1010ba78:	b5c03fcc 	andi	r23,r22,255
1010ba7c:	10006c26 	beq	r2,zero,1010bc30 <__divdf3+0x24c>
1010ba80:	00c1ffc4 	movi	r3,2047
1010ba84:	10c06426 	beq	r2,r3,1010bc18 <__divdf3+0x234>
1010ba88:	88c00434 	orhi	r3,r17,16
1010ba8c:	180690fa 	slli	r3,r3,3
1010ba90:	3022d77a 	srli	r17,r6,29
1010ba94:	301090fa 	slli	r8,r6,3
1010ba98:	10bf0044 	addi	r2,r2,-1023
1010ba9c:	88e2b03a 	or	r17,r17,r3
1010baa0:	000f883a 	mov	r7,zero
1010baa4:	a58cf03a 	xor	r6,r20,r22
1010baa8:	3cc8b03a 	or	r4,r7,r19
1010baac:	a8abc83a 	sub	r21,r21,r2
1010bab0:	008003c4 	movi	r2,15
1010bab4:	3007883a 	mov	r3,r6
1010bab8:	34c03fcc 	andi	r19,r6,255
1010babc:	11009036 	bltu	r2,r4,1010bd00 <__divdf3+0x31c>
1010bac0:	200890ba 	slli	r4,r4,2
1010bac4:	00840474 	movhi	r2,4113
1010bac8:	10aeb604 	addi	r2,r2,-17704
1010bacc:	2089883a 	add	r4,r4,r2
1010bad0:	20800017 	ldw	r2,0(r4)
1010bad4:	1000683a 	jmp	r2
1010bad8:	1010bd00 	call	11010bd0 <__alt_data_end+0xef0bd0>
1010badc:	1010bb50 	cmplti	zero,r2,17133
1010bae0:	1010bcf0 	cmpltui	zero,r2,17139
1010bae4:	1010bb44 	addi	zero,r2,17133
1010bae8:	1010bcf0 	cmpltui	zero,r2,17139
1010baec:	1010bcc4 	addi	zero,r2,17139
1010baf0:	1010bcf0 	cmpltui	zero,r2,17139
1010baf4:	1010bb44 	addi	zero,r2,17133
1010baf8:	1010bb50 	cmplti	zero,r2,17133
1010bafc:	1010bb50 	cmplti	zero,r2,17133
1010bb00:	1010bcc4 	addi	zero,r2,17139
1010bb04:	1010bb44 	addi	zero,r2,17133
1010bb08:	1010bb34 	orhi	zero,r2,17132
1010bb0c:	1010bb34 	orhi	zero,r2,17132
1010bb10:	1010bb34 	orhi	zero,r2,17132
1010bb14:	1010bfe4 	muli	zero,r2,17151
1010bb18:	2404b03a 	or	r2,r4,r16
1010bb1c:	1000661e 	bne	r2,zero,1010bcb8 <__divdf3+0x2d4>
1010bb20:	04c00204 	movi	r19,8
1010bb24:	0021883a 	mov	r16,zero
1010bb28:	0025883a 	mov	r18,zero
1010bb2c:	02400084 	movi	r9,2
1010bb30:	003fca06 	br	1010ba5c <__divdf3+0x78>
1010bb34:	8023883a 	mov	r17,r16
1010bb38:	9011883a 	mov	r8,r18
1010bb3c:	e02f883a 	mov	r23,fp
1010bb40:	480f883a 	mov	r7,r9
1010bb44:	00800084 	movi	r2,2
1010bb48:	3881311e 	bne	r7,r2,1010c010 <__divdf3+0x62c>
1010bb4c:	b827883a 	mov	r19,r23
1010bb50:	98c0004c 	andi	r3,r19,1
1010bb54:	0081ffc4 	movi	r2,2047
1010bb58:	000b883a 	mov	r5,zero
1010bb5c:	0025883a 	mov	r18,zero
1010bb60:	1004953a 	slli	r2,r2,20
1010bb64:	18c03fcc 	andi	r3,r3,255
1010bb68:	04400434 	movhi	r17,16
1010bb6c:	8c7fffc4 	addi	r17,r17,-1
1010bb70:	180697fa 	slli	r3,r3,31
1010bb74:	2c4a703a 	and	r5,r5,r17
1010bb78:	288ab03a 	or	r5,r5,r2
1010bb7c:	28c6b03a 	or	r3,r5,r3
1010bb80:	9005883a 	mov	r2,r18
1010bb84:	dfc00d17 	ldw	ra,52(sp)
1010bb88:	df000c17 	ldw	fp,48(sp)
1010bb8c:	ddc00b17 	ldw	r23,44(sp)
1010bb90:	dd800a17 	ldw	r22,40(sp)
1010bb94:	dd400917 	ldw	r21,36(sp)
1010bb98:	dd000817 	ldw	r20,32(sp)
1010bb9c:	dcc00717 	ldw	r19,28(sp)
1010bba0:	dc800617 	ldw	r18,24(sp)
1010bba4:	dc400517 	ldw	r17,20(sp)
1010bba8:	dc000417 	ldw	r16,16(sp)
1010bbac:	dec00e04 	addi	sp,sp,56
1010bbb0:	f800283a 	ret
1010bbb4:	2404b03a 	or	r2,r4,r16
1010bbb8:	2027883a 	mov	r19,r4
1010bbbc:	10003926 	beq	r2,zero,1010bca4 <__divdf3+0x2c0>
1010bbc0:	80012e26 	beq	r16,zero,1010c07c <__divdf3+0x698>
1010bbc4:	8009883a 	mov	r4,r16
1010bbc8:	d9800315 	stw	r6,12(sp)
1010bbcc:	d9c00215 	stw	r7,8(sp)
1010bbd0:	010d73c0 	call	1010d73c <__clzsi2>
1010bbd4:	d9800317 	ldw	r6,12(sp)
1010bbd8:	d9c00217 	ldw	r7,8(sp)
1010bbdc:	113ffd44 	addi	r4,r2,-11
1010bbe0:	00c00704 	movi	r3,28
1010bbe4:	19012116 	blt	r3,r4,1010c06c <__divdf3+0x688>
1010bbe8:	00c00744 	movi	r3,29
1010bbec:	147ffe04 	addi	r17,r2,-8
1010bbf0:	1907c83a 	sub	r3,r3,r4
1010bbf4:	8460983a 	sll	r16,r16,r17
1010bbf8:	98c6d83a 	srl	r3,r19,r3
1010bbfc:	9c64983a 	sll	r18,r19,r17
1010bc00:	1c20b03a 	or	r16,r3,r16
1010bc04:	1080fcc4 	addi	r2,r2,1011
1010bc08:	00abc83a 	sub	r21,zero,r2
1010bc0c:	0027883a 	mov	r19,zero
1010bc10:	0013883a 	mov	r9,zero
1010bc14:	003f9106 	br	1010ba5c <__divdf3+0x78>
1010bc18:	3446b03a 	or	r3,r6,r17
1010bc1c:	18001f1e 	bne	r3,zero,1010bc9c <__divdf3+0x2b8>
1010bc20:	0023883a 	mov	r17,zero
1010bc24:	0011883a 	mov	r8,zero
1010bc28:	01c00084 	movi	r7,2
1010bc2c:	003f9d06 	br	1010baa4 <__divdf3+0xc0>
1010bc30:	3446b03a 	or	r3,r6,r17
1010bc34:	18001526 	beq	r3,zero,1010bc8c <__divdf3+0x2a8>
1010bc38:	88011b26 	beq	r17,zero,1010c0a8 <__divdf3+0x6c4>
1010bc3c:	8809883a 	mov	r4,r17
1010bc40:	d9800315 	stw	r6,12(sp)
1010bc44:	da400115 	stw	r9,4(sp)
1010bc48:	010d73c0 	call	1010d73c <__clzsi2>
1010bc4c:	d9800317 	ldw	r6,12(sp)
1010bc50:	da400117 	ldw	r9,4(sp)
1010bc54:	113ffd44 	addi	r4,r2,-11
1010bc58:	00c00704 	movi	r3,28
1010bc5c:	19010e16 	blt	r3,r4,1010c098 <__divdf3+0x6b4>
1010bc60:	00c00744 	movi	r3,29
1010bc64:	123ffe04 	addi	r8,r2,-8
1010bc68:	1907c83a 	sub	r3,r3,r4
1010bc6c:	8a22983a 	sll	r17,r17,r8
1010bc70:	30c6d83a 	srl	r3,r6,r3
1010bc74:	3210983a 	sll	r8,r6,r8
1010bc78:	1c62b03a 	or	r17,r3,r17
1010bc7c:	1080fcc4 	addi	r2,r2,1011
1010bc80:	0085c83a 	sub	r2,zero,r2
1010bc84:	000f883a 	mov	r7,zero
1010bc88:	003f8606 	br	1010baa4 <__divdf3+0xc0>
1010bc8c:	0023883a 	mov	r17,zero
1010bc90:	0011883a 	mov	r8,zero
1010bc94:	01c00044 	movi	r7,1
1010bc98:	003f8206 	br	1010baa4 <__divdf3+0xc0>
1010bc9c:	01c000c4 	movi	r7,3
1010bca0:	003f8006 	br	1010baa4 <__divdf3+0xc0>
1010bca4:	04c00104 	movi	r19,4
1010bca8:	0021883a 	mov	r16,zero
1010bcac:	0025883a 	mov	r18,zero
1010bcb0:	02400044 	movi	r9,1
1010bcb4:	003f6906 	br	1010ba5c <__divdf3+0x78>
1010bcb8:	04c00304 	movi	r19,12
1010bcbc:	024000c4 	movi	r9,3
1010bcc0:	003f6606 	br	1010ba5c <__divdf3+0x78>
1010bcc4:	01400434 	movhi	r5,16
1010bcc8:	0007883a 	mov	r3,zero
1010bccc:	297fffc4 	addi	r5,r5,-1
1010bcd0:	04bfffc4 	movi	r18,-1
1010bcd4:	0081ffc4 	movi	r2,2047
1010bcd8:	003fa106 	br	1010bb60 <__divdf3+0x17c>
1010bcdc:	00c00044 	movi	r3,1
1010bce0:	1887c83a 	sub	r3,r3,r2
1010bce4:	01000e04 	movi	r4,56
1010bce8:	20c1210e 	bge	r4,r3,1010c170 <__divdf3+0x78c>
1010bcec:	98c0004c 	andi	r3,r19,1
1010bcf0:	0005883a 	mov	r2,zero
1010bcf4:	000b883a 	mov	r5,zero
1010bcf8:	0025883a 	mov	r18,zero
1010bcfc:	003f9806 	br	1010bb60 <__divdf3+0x17c>
1010bd00:	8c00fd36 	bltu	r17,r16,1010c0f8 <__divdf3+0x714>
1010bd04:	8440fb26 	beq	r16,r17,1010c0f4 <__divdf3+0x710>
1010bd08:	8007883a 	mov	r3,r16
1010bd0c:	ad7fffc4 	addi	r21,r21,-1
1010bd10:	0021883a 	mov	r16,zero
1010bd14:	4004d63a 	srli	r2,r8,24
1010bd18:	8822923a 	slli	r17,r17,8
1010bd1c:	1809883a 	mov	r4,r3
1010bd20:	402c923a 	slli	r22,r8,8
1010bd24:	88b8b03a 	or	fp,r17,r2
1010bd28:	e028d43a 	srli	r20,fp,16
1010bd2c:	d8c00015 	stw	r3,0(sp)
1010bd30:	e5ffffcc 	andi	r23,fp,65535
1010bd34:	a00b883a 	mov	r5,r20
1010bd38:	010b07c0 	call	1010b07c <__udivsi3>
1010bd3c:	d8c00017 	ldw	r3,0(sp)
1010bd40:	a00b883a 	mov	r5,r20
1010bd44:	d8800315 	stw	r2,12(sp)
1010bd48:	1809883a 	mov	r4,r3
1010bd4c:	010b0e00 	call	1010b0e0 <__umodsi3>
1010bd50:	d9800317 	ldw	r6,12(sp)
1010bd54:	1006943a 	slli	r3,r2,16
1010bd58:	9004d43a 	srli	r2,r18,16
1010bd5c:	b9a3383a 	mul	r17,r23,r6
1010bd60:	10c4b03a 	or	r2,r2,r3
1010bd64:	1440062e 	bgeu	r2,r17,1010bd80 <__divdf3+0x39c>
1010bd68:	1705883a 	add	r2,r2,fp
1010bd6c:	30ffffc4 	addi	r3,r6,-1
1010bd70:	1700ee36 	bltu	r2,fp,1010c12c <__divdf3+0x748>
1010bd74:	1440ed2e 	bgeu	r2,r17,1010c12c <__divdf3+0x748>
1010bd78:	31bfff84 	addi	r6,r6,-2
1010bd7c:	1705883a 	add	r2,r2,fp
1010bd80:	1463c83a 	sub	r17,r2,r17
1010bd84:	a00b883a 	mov	r5,r20
1010bd88:	8809883a 	mov	r4,r17
1010bd8c:	d9800315 	stw	r6,12(sp)
1010bd90:	010b07c0 	call	1010b07c <__udivsi3>
1010bd94:	a00b883a 	mov	r5,r20
1010bd98:	8809883a 	mov	r4,r17
1010bd9c:	d8800215 	stw	r2,8(sp)
1010bda0:	010b0e00 	call	1010b0e0 <__umodsi3>
1010bda4:	d9c00217 	ldw	r7,8(sp)
1010bda8:	1004943a 	slli	r2,r2,16
1010bdac:	94bfffcc 	andi	r18,r18,65535
1010bdb0:	b9d1383a 	mul	r8,r23,r7
1010bdb4:	90a4b03a 	or	r18,r18,r2
1010bdb8:	d9800317 	ldw	r6,12(sp)
1010bdbc:	9200062e 	bgeu	r18,r8,1010bdd8 <__divdf3+0x3f4>
1010bdc0:	9725883a 	add	r18,r18,fp
1010bdc4:	38bfffc4 	addi	r2,r7,-1
1010bdc8:	9700d636 	bltu	r18,fp,1010c124 <__divdf3+0x740>
1010bdcc:	9200d52e 	bgeu	r18,r8,1010c124 <__divdf3+0x740>
1010bdd0:	39ffff84 	addi	r7,r7,-2
1010bdd4:	9725883a 	add	r18,r18,fp
1010bdd8:	3004943a 	slli	r2,r6,16
1010bddc:	b012d43a 	srli	r9,r22,16
1010bde0:	b1bfffcc 	andi	r6,r22,65535
1010bde4:	11e2b03a 	or	r17,r2,r7
1010bde8:	8806d43a 	srli	r3,r17,16
1010bdec:	893fffcc 	andi	r4,r17,65535
1010bdf0:	218b383a 	mul	r5,r4,r6
1010bdf4:	30c5383a 	mul	r2,r6,r3
1010bdf8:	2249383a 	mul	r4,r4,r9
1010bdfc:	280ed43a 	srli	r7,r5,16
1010be00:	9225c83a 	sub	r18,r18,r8
1010be04:	2089883a 	add	r4,r4,r2
1010be08:	3909883a 	add	r4,r7,r4
1010be0c:	1a47383a 	mul	r3,r3,r9
1010be10:	2080022e 	bgeu	r4,r2,1010be1c <__divdf3+0x438>
1010be14:	00800074 	movhi	r2,1
1010be18:	1887883a 	add	r3,r3,r2
1010be1c:	2004d43a 	srli	r2,r4,16
1010be20:	2008943a 	slli	r4,r4,16
1010be24:	297fffcc 	andi	r5,r5,65535
1010be28:	10c7883a 	add	r3,r2,r3
1010be2c:	2149883a 	add	r4,r4,r5
1010be30:	90c0a536 	bltu	r18,r3,1010c0c8 <__divdf3+0x6e4>
1010be34:	90c0bf26 	beq	r18,r3,1010c134 <__divdf3+0x750>
1010be38:	90c7c83a 	sub	r3,r18,r3
1010be3c:	810fc83a 	sub	r7,r16,r4
1010be40:	81e5803a 	cmpltu	r18,r16,r7
1010be44:	1ca5c83a 	sub	r18,r3,r18
1010be48:	e480c126 	beq	fp,r18,1010c150 <__divdf3+0x76c>
1010be4c:	a00b883a 	mov	r5,r20
1010be50:	9009883a 	mov	r4,r18
1010be54:	d9800315 	stw	r6,12(sp)
1010be58:	d9c00215 	stw	r7,8(sp)
1010be5c:	da400115 	stw	r9,4(sp)
1010be60:	010b07c0 	call	1010b07c <__udivsi3>
1010be64:	a00b883a 	mov	r5,r20
1010be68:	9009883a 	mov	r4,r18
1010be6c:	d8800015 	stw	r2,0(sp)
1010be70:	010b0e00 	call	1010b0e0 <__umodsi3>
1010be74:	d9c00217 	ldw	r7,8(sp)
1010be78:	da000017 	ldw	r8,0(sp)
1010be7c:	1006943a 	slli	r3,r2,16
1010be80:	3804d43a 	srli	r2,r7,16
1010be84:	ba21383a 	mul	r16,r23,r8
1010be88:	d9800317 	ldw	r6,12(sp)
1010be8c:	10c4b03a 	or	r2,r2,r3
1010be90:	da400117 	ldw	r9,4(sp)
1010be94:	1400062e 	bgeu	r2,r16,1010beb0 <__divdf3+0x4cc>
1010be98:	1705883a 	add	r2,r2,fp
1010be9c:	40ffffc4 	addi	r3,r8,-1
1010bea0:	1700ad36 	bltu	r2,fp,1010c158 <__divdf3+0x774>
1010bea4:	1400ac2e 	bgeu	r2,r16,1010c158 <__divdf3+0x774>
1010bea8:	423fff84 	addi	r8,r8,-2
1010beac:	1705883a 	add	r2,r2,fp
1010beb0:	1421c83a 	sub	r16,r2,r16
1010beb4:	a00b883a 	mov	r5,r20
1010beb8:	8009883a 	mov	r4,r16
1010bebc:	d9800315 	stw	r6,12(sp)
1010bec0:	d9c00215 	stw	r7,8(sp)
1010bec4:	da000015 	stw	r8,0(sp)
1010bec8:	da400115 	stw	r9,4(sp)
1010becc:	010b07c0 	call	1010b07c <__udivsi3>
1010bed0:	8009883a 	mov	r4,r16
1010bed4:	a00b883a 	mov	r5,r20
1010bed8:	1025883a 	mov	r18,r2
1010bedc:	010b0e00 	call	1010b0e0 <__umodsi3>
1010bee0:	d9c00217 	ldw	r7,8(sp)
1010bee4:	1004943a 	slli	r2,r2,16
1010bee8:	bcaf383a 	mul	r23,r23,r18
1010beec:	393fffcc 	andi	r4,r7,65535
1010bef0:	2088b03a 	or	r4,r4,r2
1010bef4:	d9800317 	ldw	r6,12(sp)
1010bef8:	da000017 	ldw	r8,0(sp)
1010befc:	da400117 	ldw	r9,4(sp)
1010bf00:	25c0062e 	bgeu	r4,r23,1010bf1c <__divdf3+0x538>
1010bf04:	2709883a 	add	r4,r4,fp
1010bf08:	90bfffc4 	addi	r2,r18,-1
1010bf0c:	27009436 	bltu	r4,fp,1010c160 <__divdf3+0x77c>
1010bf10:	25c0932e 	bgeu	r4,r23,1010c160 <__divdf3+0x77c>
1010bf14:	94bfff84 	addi	r18,r18,-2
1010bf18:	2709883a 	add	r4,r4,fp
1010bf1c:	4004943a 	slli	r2,r8,16
1010bf20:	25efc83a 	sub	r23,r4,r23
1010bf24:	1490b03a 	or	r8,r2,r18
1010bf28:	4008d43a 	srli	r4,r8,16
1010bf2c:	40ffffcc 	andi	r3,r8,65535
1010bf30:	30c5383a 	mul	r2,r6,r3
1010bf34:	1a47383a 	mul	r3,r3,r9
1010bf38:	310d383a 	mul	r6,r6,r4
1010bf3c:	100ad43a 	srli	r5,r2,16
1010bf40:	4913383a 	mul	r9,r9,r4
1010bf44:	1987883a 	add	r3,r3,r6
1010bf48:	28c7883a 	add	r3,r5,r3
1010bf4c:	1980022e 	bgeu	r3,r6,1010bf58 <__divdf3+0x574>
1010bf50:	01000074 	movhi	r4,1
1010bf54:	4913883a 	add	r9,r9,r4
1010bf58:	1808d43a 	srli	r4,r3,16
1010bf5c:	1806943a 	slli	r3,r3,16
1010bf60:	10bfffcc 	andi	r2,r2,65535
1010bf64:	2253883a 	add	r9,r4,r9
1010bf68:	1887883a 	add	r3,r3,r2
1010bf6c:	ba403836 	bltu	r23,r9,1010c050 <__divdf3+0x66c>
1010bf70:	ba403626 	beq	r23,r9,1010c04c <__divdf3+0x668>
1010bf74:	42000054 	ori	r8,r8,1
1010bf78:	a880ffc4 	addi	r2,r21,1023
1010bf7c:	00bf570e 	bge	zero,r2,1010bcdc <__divdf3+0x2f8>
1010bf80:	40c001cc 	andi	r3,r8,7
1010bf84:	18000726 	beq	r3,zero,1010bfa4 <__divdf3+0x5c0>
1010bf88:	40c003cc 	andi	r3,r8,15
1010bf8c:	01000104 	movi	r4,4
1010bf90:	19000426 	beq	r3,r4,1010bfa4 <__divdf3+0x5c0>
1010bf94:	4107883a 	add	r3,r8,r4
1010bf98:	1a11803a 	cmpltu	r8,r3,r8
1010bf9c:	8a23883a 	add	r17,r17,r8
1010bfa0:	1811883a 	mov	r8,r3
1010bfa4:	88c0402c 	andhi	r3,r17,256
1010bfa8:	18000426 	beq	r3,zero,1010bfbc <__divdf3+0x5d8>
1010bfac:	00ffc034 	movhi	r3,65280
1010bfb0:	18ffffc4 	addi	r3,r3,-1
1010bfb4:	a8810004 	addi	r2,r21,1024
1010bfb8:	88e2703a 	and	r17,r17,r3
1010bfbc:	00c1ff84 	movi	r3,2046
1010bfc0:	18bee316 	blt	r3,r2,1010bb50 <__divdf3+0x16c>
1010bfc4:	8824977a 	slli	r18,r17,29
1010bfc8:	4010d0fa 	srli	r8,r8,3
1010bfcc:	8822927a 	slli	r17,r17,9
1010bfd0:	1081ffcc 	andi	r2,r2,2047
1010bfd4:	9224b03a 	or	r18,r18,r8
1010bfd8:	880ad33a 	srli	r5,r17,12
1010bfdc:	98c0004c 	andi	r3,r19,1
1010bfe0:	003edf06 	br	1010bb60 <__divdf3+0x17c>
1010bfe4:	8080022c 	andhi	r2,r16,8
1010bfe8:	10001226 	beq	r2,zero,1010c034 <__divdf3+0x650>
1010bfec:	8880022c 	andhi	r2,r17,8
1010bff0:	1000101e 	bne	r2,zero,1010c034 <__divdf3+0x650>
1010bff4:	00800434 	movhi	r2,16
1010bff8:	89400234 	orhi	r5,r17,8
1010bffc:	10bfffc4 	addi	r2,r2,-1
1010c000:	b007883a 	mov	r3,r22
1010c004:	288a703a 	and	r5,r5,r2
1010c008:	4025883a 	mov	r18,r8
1010c00c:	003f3106 	br	1010bcd4 <__divdf3+0x2f0>
1010c010:	008000c4 	movi	r2,3
1010c014:	3880a626 	beq	r7,r2,1010c2b0 <__divdf3+0x8cc>
1010c018:	00800044 	movi	r2,1
1010c01c:	3880521e 	bne	r7,r2,1010c168 <__divdf3+0x784>
1010c020:	b807883a 	mov	r3,r23
1010c024:	0005883a 	mov	r2,zero
1010c028:	000b883a 	mov	r5,zero
1010c02c:	0025883a 	mov	r18,zero
1010c030:	003ecb06 	br	1010bb60 <__divdf3+0x17c>
1010c034:	00800434 	movhi	r2,16
1010c038:	81400234 	orhi	r5,r16,8
1010c03c:	10bfffc4 	addi	r2,r2,-1
1010c040:	a007883a 	mov	r3,r20
1010c044:	288a703a 	and	r5,r5,r2
1010c048:	003f2206 	br	1010bcd4 <__divdf3+0x2f0>
1010c04c:	183fca26 	beq	r3,zero,1010bf78 <__divdf3+0x594>
1010c050:	e5ef883a 	add	r23,fp,r23
1010c054:	40bfffc4 	addi	r2,r8,-1
1010c058:	bf00392e 	bgeu	r23,fp,1010c140 <__divdf3+0x75c>
1010c05c:	1011883a 	mov	r8,r2
1010c060:	ba7fc41e 	bne	r23,r9,1010bf74 <__divdf3+0x590>
1010c064:	b0ffc31e 	bne	r22,r3,1010bf74 <__divdf3+0x590>
1010c068:	003fc306 	br	1010bf78 <__divdf3+0x594>
1010c06c:	143ff604 	addi	r16,r2,-40
1010c070:	9c20983a 	sll	r16,r19,r16
1010c074:	0025883a 	mov	r18,zero
1010c078:	003ee206 	br	1010bc04 <__divdf3+0x220>
1010c07c:	d9800315 	stw	r6,12(sp)
1010c080:	d9c00215 	stw	r7,8(sp)
1010c084:	010d73c0 	call	1010d73c <__clzsi2>
1010c088:	10800804 	addi	r2,r2,32
1010c08c:	d9c00217 	ldw	r7,8(sp)
1010c090:	d9800317 	ldw	r6,12(sp)
1010c094:	003ed106 	br	1010bbdc <__divdf3+0x1f8>
1010c098:	147ff604 	addi	r17,r2,-40
1010c09c:	3462983a 	sll	r17,r6,r17
1010c0a0:	0011883a 	mov	r8,zero
1010c0a4:	003ef506 	br	1010bc7c <__divdf3+0x298>
1010c0a8:	3009883a 	mov	r4,r6
1010c0ac:	d9800315 	stw	r6,12(sp)
1010c0b0:	da400115 	stw	r9,4(sp)
1010c0b4:	010d73c0 	call	1010d73c <__clzsi2>
1010c0b8:	10800804 	addi	r2,r2,32
1010c0bc:	da400117 	ldw	r9,4(sp)
1010c0c0:	d9800317 	ldw	r6,12(sp)
1010c0c4:	003ee306 	br	1010bc54 <__divdf3+0x270>
1010c0c8:	85a1883a 	add	r16,r16,r22
1010c0cc:	8585803a 	cmpltu	r2,r16,r22
1010c0d0:	1705883a 	add	r2,r2,fp
1010c0d4:	14a5883a 	add	r18,r2,r18
1010c0d8:	88bfffc4 	addi	r2,r17,-1
1010c0dc:	e4800c2e 	bgeu	fp,r18,1010c110 <__divdf3+0x72c>
1010c0e0:	90c03e36 	bltu	r18,r3,1010c1dc <__divdf3+0x7f8>
1010c0e4:	1c806926 	beq	r3,r18,1010c28c <__divdf3+0x8a8>
1010c0e8:	90c7c83a 	sub	r3,r18,r3
1010c0ec:	1023883a 	mov	r17,r2
1010c0f0:	003f5206 	br	1010be3c <__divdf3+0x458>
1010c0f4:	923f0436 	bltu	r18,r8,1010bd08 <__divdf3+0x324>
1010c0f8:	800897fa 	slli	r4,r16,31
1010c0fc:	9004d07a 	srli	r2,r18,1
1010c100:	8006d07a 	srli	r3,r16,1
1010c104:	902097fa 	slli	r16,r18,31
1010c108:	20a4b03a 	or	r18,r4,r2
1010c10c:	003f0106 	br	1010bd14 <__divdf3+0x330>
1010c110:	e4bff51e 	bne	fp,r18,1010c0e8 <__divdf3+0x704>
1010c114:	85bff22e 	bgeu	r16,r22,1010c0e0 <__divdf3+0x6fc>
1010c118:	e0c7c83a 	sub	r3,fp,r3
1010c11c:	1023883a 	mov	r17,r2
1010c120:	003f4606 	br	1010be3c <__divdf3+0x458>
1010c124:	100f883a 	mov	r7,r2
1010c128:	003f2b06 	br	1010bdd8 <__divdf3+0x3f4>
1010c12c:	180d883a 	mov	r6,r3
1010c130:	003f1306 	br	1010bd80 <__divdf3+0x39c>
1010c134:	813fe436 	bltu	r16,r4,1010c0c8 <__divdf3+0x6e4>
1010c138:	0007883a 	mov	r3,zero
1010c13c:	003f3f06 	br	1010be3c <__divdf3+0x458>
1010c140:	ba402c36 	bltu	r23,r9,1010c1f4 <__divdf3+0x810>
1010c144:	4dc05426 	beq	r9,r23,1010c298 <__divdf3+0x8b4>
1010c148:	1011883a 	mov	r8,r2
1010c14c:	003f8906 	br	1010bf74 <__divdf3+0x590>
1010c150:	023fffc4 	movi	r8,-1
1010c154:	003f8806 	br	1010bf78 <__divdf3+0x594>
1010c158:	1811883a 	mov	r8,r3
1010c15c:	003f5406 	br	1010beb0 <__divdf3+0x4cc>
1010c160:	1025883a 	mov	r18,r2
1010c164:	003f6d06 	br	1010bf1c <__divdf3+0x538>
1010c168:	b827883a 	mov	r19,r23
1010c16c:	003f8206 	br	1010bf78 <__divdf3+0x594>
1010c170:	010007c4 	movi	r4,31
1010c174:	20c02616 	blt	r4,r3,1010c210 <__divdf3+0x82c>
1010c178:	00800804 	movi	r2,32
1010c17c:	10c5c83a 	sub	r2,r2,r3
1010c180:	888a983a 	sll	r5,r17,r2
1010c184:	40c8d83a 	srl	r4,r8,r3
1010c188:	4084983a 	sll	r2,r8,r2
1010c18c:	88e2d83a 	srl	r17,r17,r3
1010c190:	2906b03a 	or	r3,r5,r4
1010c194:	1004c03a 	cmpne	r2,r2,zero
1010c198:	1886b03a 	or	r3,r3,r2
1010c19c:	188001cc 	andi	r2,r3,7
1010c1a0:	10000726 	beq	r2,zero,1010c1c0 <__divdf3+0x7dc>
1010c1a4:	188003cc 	andi	r2,r3,15
1010c1a8:	01000104 	movi	r4,4
1010c1ac:	11000426 	beq	r2,r4,1010c1c0 <__divdf3+0x7dc>
1010c1b0:	1805883a 	mov	r2,r3
1010c1b4:	10c00104 	addi	r3,r2,4
1010c1b8:	1885803a 	cmpltu	r2,r3,r2
1010c1bc:	88a3883a 	add	r17,r17,r2
1010c1c0:	8880202c 	andhi	r2,r17,128
1010c1c4:	10002726 	beq	r2,zero,1010c264 <__divdf3+0x880>
1010c1c8:	98c0004c 	andi	r3,r19,1
1010c1cc:	00800044 	movi	r2,1
1010c1d0:	000b883a 	mov	r5,zero
1010c1d4:	0025883a 	mov	r18,zero
1010c1d8:	003e6106 	br	1010bb60 <__divdf3+0x17c>
1010c1dc:	85a1883a 	add	r16,r16,r22
1010c1e0:	8585803a 	cmpltu	r2,r16,r22
1010c1e4:	1705883a 	add	r2,r2,fp
1010c1e8:	14a5883a 	add	r18,r2,r18
1010c1ec:	8c7fff84 	addi	r17,r17,-2
1010c1f0:	003f1106 	br	1010be38 <__divdf3+0x454>
1010c1f4:	b589883a 	add	r4,r22,r22
1010c1f8:	25ad803a 	cmpltu	r22,r4,r22
1010c1fc:	b739883a 	add	fp,r22,fp
1010c200:	40bfff84 	addi	r2,r8,-2
1010c204:	bf2f883a 	add	r23,r23,fp
1010c208:	202d883a 	mov	r22,r4
1010c20c:	003f9306 	br	1010c05c <__divdf3+0x678>
1010c210:	013ff844 	movi	r4,-31
1010c214:	2085c83a 	sub	r2,r4,r2
1010c218:	8888d83a 	srl	r4,r17,r2
1010c21c:	00800804 	movi	r2,32
1010c220:	18802126 	beq	r3,r2,1010c2a8 <__divdf3+0x8c4>
1010c224:	00801004 	movi	r2,64
1010c228:	10c5c83a 	sub	r2,r2,r3
1010c22c:	8884983a 	sll	r2,r17,r2
1010c230:	1204b03a 	or	r2,r2,r8
1010c234:	1004c03a 	cmpne	r2,r2,zero
1010c238:	2084b03a 	or	r2,r4,r2
1010c23c:	144001cc 	andi	r17,r2,7
1010c240:	88000d1e 	bne	r17,zero,1010c278 <__divdf3+0x894>
1010c244:	000b883a 	mov	r5,zero
1010c248:	1024d0fa 	srli	r18,r2,3
1010c24c:	98c0004c 	andi	r3,r19,1
1010c250:	0005883a 	mov	r2,zero
1010c254:	9464b03a 	or	r18,r18,r17
1010c258:	003e4106 	br	1010bb60 <__divdf3+0x17c>
1010c25c:	1007883a 	mov	r3,r2
1010c260:	0023883a 	mov	r17,zero
1010c264:	880a927a 	slli	r5,r17,9
1010c268:	1805883a 	mov	r2,r3
1010c26c:	8822977a 	slli	r17,r17,29
1010c270:	280ad33a 	srli	r5,r5,12
1010c274:	003ff406 	br	1010c248 <__divdf3+0x864>
1010c278:	10c003cc 	andi	r3,r2,15
1010c27c:	01000104 	movi	r4,4
1010c280:	193ff626 	beq	r3,r4,1010c25c <__divdf3+0x878>
1010c284:	0023883a 	mov	r17,zero
1010c288:	003fca06 	br	1010c1b4 <__divdf3+0x7d0>
1010c28c:	813fd336 	bltu	r16,r4,1010c1dc <__divdf3+0x7f8>
1010c290:	1023883a 	mov	r17,r2
1010c294:	003fa806 	br	1010c138 <__divdf3+0x754>
1010c298:	b0ffd636 	bltu	r22,r3,1010c1f4 <__divdf3+0x810>
1010c29c:	1011883a 	mov	r8,r2
1010c2a0:	b0ff341e 	bne	r22,r3,1010bf74 <__divdf3+0x590>
1010c2a4:	003f3406 	br	1010bf78 <__divdf3+0x594>
1010c2a8:	0005883a 	mov	r2,zero
1010c2ac:	003fe006 	br	1010c230 <__divdf3+0x84c>
1010c2b0:	00800434 	movhi	r2,16
1010c2b4:	89400234 	orhi	r5,r17,8
1010c2b8:	10bfffc4 	addi	r2,r2,-1
1010c2bc:	b807883a 	mov	r3,r23
1010c2c0:	288a703a 	and	r5,r5,r2
1010c2c4:	4025883a 	mov	r18,r8
1010c2c8:	003e8206 	br	1010bcd4 <__divdf3+0x2f0>

1010c2cc <__eqdf2>:
1010c2cc:	2804d53a 	srli	r2,r5,20
1010c2d0:	3806d53a 	srli	r3,r7,20
1010c2d4:	02000434 	movhi	r8,16
1010c2d8:	423fffc4 	addi	r8,r8,-1
1010c2dc:	1081ffcc 	andi	r2,r2,2047
1010c2e0:	0281ffc4 	movi	r10,2047
1010c2e4:	2a12703a 	and	r9,r5,r8
1010c2e8:	18c1ffcc 	andi	r3,r3,2047
1010c2ec:	3a10703a 	and	r8,r7,r8
1010c2f0:	280ad7fa 	srli	r5,r5,31
1010c2f4:	380ed7fa 	srli	r7,r7,31
1010c2f8:	12801026 	beq	r2,r10,1010c33c <__eqdf2+0x70>
1010c2fc:	0281ffc4 	movi	r10,2047
1010c300:	1a800a26 	beq	r3,r10,1010c32c <__eqdf2+0x60>
1010c304:	10c00226 	beq	r2,r3,1010c310 <__eqdf2+0x44>
1010c308:	00800044 	movi	r2,1
1010c30c:	f800283a 	ret
1010c310:	4a3ffd1e 	bne	r9,r8,1010c308 <__eqdf2+0x3c>
1010c314:	21bffc1e 	bne	r4,r6,1010c308 <__eqdf2+0x3c>
1010c318:	29c00c26 	beq	r5,r7,1010c34c <__eqdf2+0x80>
1010c31c:	103ffa1e 	bne	r2,zero,1010c308 <__eqdf2+0x3c>
1010c320:	2244b03a 	or	r2,r4,r9
1010c324:	1004c03a 	cmpne	r2,r2,zero
1010c328:	f800283a 	ret
1010c32c:	3214b03a 	or	r10,r6,r8
1010c330:	503ff426 	beq	r10,zero,1010c304 <__eqdf2+0x38>
1010c334:	00800044 	movi	r2,1
1010c338:	f800283a 	ret
1010c33c:	2254b03a 	or	r10,r4,r9
1010c340:	503fee26 	beq	r10,zero,1010c2fc <__eqdf2+0x30>
1010c344:	00800044 	movi	r2,1
1010c348:	f800283a 	ret
1010c34c:	0005883a 	mov	r2,zero
1010c350:	f800283a 	ret

1010c354 <__gedf2>:
1010c354:	2804d53a 	srli	r2,r5,20
1010c358:	3806d53a 	srli	r3,r7,20
1010c35c:	02000434 	movhi	r8,16
1010c360:	423fffc4 	addi	r8,r8,-1
1010c364:	1081ffcc 	andi	r2,r2,2047
1010c368:	0241ffc4 	movi	r9,2047
1010c36c:	2a14703a 	and	r10,r5,r8
1010c370:	18c1ffcc 	andi	r3,r3,2047
1010c374:	3a10703a 	and	r8,r7,r8
1010c378:	280ad7fa 	srli	r5,r5,31
1010c37c:	380ed7fa 	srli	r7,r7,31
1010c380:	12401d26 	beq	r2,r9,1010c3f8 <__gedf2+0xa4>
1010c384:	0241ffc4 	movi	r9,2047
1010c388:	1a401226 	beq	r3,r9,1010c3d4 <__gedf2+0x80>
1010c38c:	1000081e 	bne	r2,zero,1010c3b0 <__gedf2+0x5c>
1010c390:	2296b03a 	or	r11,r4,r10
1010c394:	5813003a 	cmpeq	r9,r11,zero
1010c398:	1800091e 	bne	r3,zero,1010c3c0 <__gedf2+0x6c>
1010c39c:	3218b03a 	or	r12,r6,r8
1010c3a0:	6000071e 	bne	r12,zero,1010c3c0 <__gedf2+0x6c>
1010c3a4:	0005883a 	mov	r2,zero
1010c3a8:	5800101e 	bne	r11,zero,1010c3ec <__gedf2+0x98>
1010c3ac:	f800283a 	ret
1010c3b0:	18000c1e 	bne	r3,zero,1010c3e4 <__gedf2+0x90>
1010c3b4:	3212b03a 	or	r9,r6,r8
1010c3b8:	48000c26 	beq	r9,zero,1010c3ec <__gedf2+0x98>
1010c3bc:	0013883a 	mov	r9,zero
1010c3c0:	39c03fcc 	andi	r7,r7,255
1010c3c4:	48000826 	beq	r9,zero,1010c3e8 <__gedf2+0x94>
1010c3c8:	38000926 	beq	r7,zero,1010c3f0 <__gedf2+0x9c>
1010c3cc:	00800044 	movi	r2,1
1010c3d0:	f800283a 	ret
1010c3d4:	3212b03a 	or	r9,r6,r8
1010c3d8:	483fec26 	beq	r9,zero,1010c38c <__gedf2+0x38>
1010c3dc:	00bfff84 	movi	r2,-2
1010c3e0:	f800283a 	ret
1010c3e4:	39c03fcc 	andi	r7,r7,255
1010c3e8:	29c00626 	beq	r5,r7,1010c404 <__gedf2+0xb0>
1010c3ec:	283ff726 	beq	r5,zero,1010c3cc <__gedf2+0x78>
1010c3f0:	00bfffc4 	movi	r2,-1
1010c3f4:	f800283a 	ret
1010c3f8:	2292b03a 	or	r9,r4,r10
1010c3fc:	483fe126 	beq	r9,zero,1010c384 <__gedf2+0x30>
1010c400:	003ff606 	br	1010c3dc <__gedf2+0x88>
1010c404:	18bff916 	blt	r3,r2,1010c3ec <__gedf2+0x98>
1010c408:	10c00316 	blt	r2,r3,1010c418 <__gedf2+0xc4>
1010c40c:	42bff736 	bltu	r8,r10,1010c3ec <__gedf2+0x98>
1010c410:	52000326 	beq	r10,r8,1010c420 <__gedf2+0xcc>
1010c414:	5200042e 	bgeu	r10,r8,1010c428 <__gedf2+0xd4>
1010c418:	283fec1e 	bne	r5,zero,1010c3cc <__gedf2+0x78>
1010c41c:	003ff406 	br	1010c3f0 <__gedf2+0x9c>
1010c420:	313ff236 	bltu	r6,r4,1010c3ec <__gedf2+0x98>
1010c424:	21bffc36 	bltu	r4,r6,1010c418 <__gedf2+0xc4>
1010c428:	0005883a 	mov	r2,zero
1010c42c:	f800283a 	ret

1010c430 <__ledf2>:
1010c430:	2804d53a 	srli	r2,r5,20
1010c434:	3810d53a 	srli	r8,r7,20
1010c438:	00c00434 	movhi	r3,16
1010c43c:	18ffffc4 	addi	r3,r3,-1
1010c440:	1081ffcc 	andi	r2,r2,2047
1010c444:	0241ffc4 	movi	r9,2047
1010c448:	28d4703a 	and	r10,r5,r3
1010c44c:	4201ffcc 	andi	r8,r8,2047
1010c450:	38c6703a 	and	r3,r7,r3
1010c454:	280ad7fa 	srli	r5,r5,31
1010c458:	380ed7fa 	srli	r7,r7,31
1010c45c:	12401f26 	beq	r2,r9,1010c4dc <__ledf2+0xac>
1010c460:	0241ffc4 	movi	r9,2047
1010c464:	42401426 	beq	r8,r9,1010c4b8 <__ledf2+0x88>
1010c468:	1000091e 	bne	r2,zero,1010c490 <__ledf2+0x60>
1010c46c:	2296b03a 	or	r11,r4,r10
1010c470:	5813003a 	cmpeq	r9,r11,zero
1010c474:	29403fcc 	andi	r5,r5,255
1010c478:	40000a1e 	bne	r8,zero,1010c4a4 <__ledf2+0x74>
1010c47c:	30d8b03a 	or	r12,r6,r3
1010c480:	6000081e 	bne	r12,zero,1010c4a4 <__ledf2+0x74>
1010c484:	0005883a 	mov	r2,zero
1010c488:	5800111e 	bne	r11,zero,1010c4d0 <__ledf2+0xa0>
1010c48c:	f800283a 	ret
1010c490:	29403fcc 	andi	r5,r5,255
1010c494:	40000c1e 	bne	r8,zero,1010c4c8 <__ledf2+0x98>
1010c498:	30d2b03a 	or	r9,r6,r3
1010c49c:	48000c26 	beq	r9,zero,1010c4d0 <__ledf2+0xa0>
1010c4a0:	0013883a 	mov	r9,zero
1010c4a4:	39c03fcc 	andi	r7,r7,255
1010c4a8:	48000826 	beq	r9,zero,1010c4cc <__ledf2+0x9c>
1010c4ac:	38001126 	beq	r7,zero,1010c4f4 <__ledf2+0xc4>
1010c4b0:	00800044 	movi	r2,1
1010c4b4:	f800283a 	ret
1010c4b8:	30d2b03a 	or	r9,r6,r3
1010c4bc:	483fea26 	beq	r9,zero,1010c468 <__ledf2+0x38>
1010c4c0:	00800084 	movi	r2,2
1010c4c4:	f800283a 	ret
1010c4c8:	39c03fcc 	andi	r7,r7,255
1010c4cc:	39400726 	beq	r7,r5,1010c4ec <__ledf2+0xbc>
1010c4d0:	2800081e 	bne	r5,zero,1010c4f4 <__ledf2+0xc4>
1010c4d4:	00800044 	movi	r2,1
1010c4d8:	f800283a 	ret
1010c4dc:	2292b03a 	or	r9,r4,r10
1010c4e0:	483fdf26 	beq	r9,zero,1010c460 <__ledf2+0x30>
1010c4e4:	00800084 	movi	r2,2
1010c4e8:	f800283a 	ret
1010c4ec:	4080030e 	bge	r8,r2,1010c4fc <__ledf2+0xcc>
1010c4f0:	383fef26 	beq	r7,zero,1010c4b0 <__ledf2+0x80>
1010c4f4:	00bfffc4 	movi	r2,-1
1010c4f8:	f800283a 	ret
1010c4fc:	123feb16 	blt	r2,r8,1010c4ac <__ledf2+0x7c>
1010c500:	1abff336 	bltu	r3,r10,1010c4d0 <__ledf2+0xa0>
1010c504:	50c00326 	beq	r10,r3,1010c514 <__ledf2+0xe4>
1010c508:	50c0042e 	bgeu	r10,r3,1010c51c <__ledf2+0xec>
1010c50c:	283fe81e 	bne	r5,zero,1010c4b0 <__ledf2+0x80>
1010c510:	003ff806 	br	1010c4f4 <__ledf2+0xc4>
1010c514:	313fee36 	bltu	r6,r4,1010c4d0 <__ledf2+0xa0>
1010c518:	21bffc36 	bltu	r4,r6,1010c50c <__ledf2+0xdc>
1010c51c:	0005883a 	mov	r2,zero
1010c520:	f800283a 	ret

1010c524 <__muldf3>:
1010c524:	defff304 	addi	sp,sp,-52
1010c528:	2804d53a 	srli	r2,r5,20
1010c52c:	dd800915 	stw	r22,36(sp)
1010c530:	282cd7fa 	srli	r22,r5,31
1010c534:	dc000315 	stw	r16,12(sp)
1010c538:	04000434 	movhi	r16,16
1010c53c:	dd400815 	stw	r21,32(sp)
1010c540:	dc800515 	stw	r18,20(sp)
1010c544:	843fffc4 	addi	r16,r16,-1
1010c548:	dfc00c15 	stw	ra,48(sp)
1010c54c:	df000b15 	stw	fp,44(sp)
1010c550:	ddc00a15 	stw	r23,40(sp)
1010c554:	dd000715 	stw	r20,28(sp)
1010c558:	dcc00615 	stw	r19,24(sp)
1010c55c:	dc400415 	stw	r17,16(sp)
1010c560:	1481ffcc 	andi	r18,r2,2047
1010c564:	2c20703a 	and	r16,r5,r16
1010c568:	b02b883a 	mov	r21,r22
1010c56c:	b2403fcc 	andi	r9,r22,255
1010c570:	90006026 	beq	r18,zero,1010c6f4 <__muldf3+0x1d0>
1010c574:	0081ffc4 	movi	r2,2047
1010c578:	2029883a 	mov	r20,r4
1010c57c:	90803626 	beq	r18,r2,1010c658 <__muldf3+0x134>
1010c580:	80800434 	orhi	r2,r16,16
1010c584:	100490fa 	slli	r2,r2,3
1010c588:	2020d77a 	srli	r16,r4,29
1010c58c:	202890fa 	slli	r20,r4,3
1010c590:	94bf0044 	addi	r18,r18,-1023
1010c594:	80a0b03a 	or	r16,r16,r2
1010c598:	0027883a 	mov	r19,zero
1010c59c:	0039883a 	mov	fp,zero
1010c5a0:	3804d53a 	srli	r2,r7,20
1010c5a4:	382ed7fa 	srli	r23,r7,31
1010c5a8:	04400434 	movhi	r17,16
1010c5ac:	8c7fffc4 	addi	r17,r17,-1
1010c5b0:	1081ffcc 	andi	r2,r2,2047
1010c5b4:	3011883a 	mov	r8,r6
1010c5b8:	3c62703a 	and	r17,r7,r17
1010c5bc:	ba803fcc 	andi	r10,r23,255
1010c5c0:	10006d26 	beq	r2,zero,1010c778 <__muldf3+0x254>
1010c5c4:	00c1ffc4 	movi	r3,2047
1010c5c8:	10c06526 	beq	r2,r3,1010c760 <__muldf3+0x23c>
1010c5cc:	88c00434 	orhi	r3,r17,16
1010c5d0:	180690fa 	slli	r3,r3,3
1010c5d4:	3022d77a 	srli	r17,r6,29
1010c5d8:	301090fa 	slli	r8,r6,3
1010c5dc:	10bf0044 	addi	r2,r2,-1023
1010c5e0:	88e2b03a 	or	r17,r17,r3
1010c5e4:	000b883a 	mov	r5,zero
1010c5e8:	9085883a 	add	r2,r18,r2
1010c5ec:	2cc8b03a 	or	r4,r5,r19
1010c5f0:	00c003c4 	movi	r3,15
1010c5f4:	bdacf03a 	xor	r22,r23,r22
1010c5f8:	12c00044 	addi	r11,r2,1
1010c5fc:	19009936 	bltu	r3,r4,1010c864 <__muldf3+0x340>
1010c600:	200890ba 	slli	r4,r4,2
1010c604:	00c40474 	movhi	r3,4113
1010c608:	18f18604 	addi	r3,r3,-14824
1010c60c:	20c9883a 	add	r4,r4,r3
1010c610:	20c00017 	ldw	r3,0(r4)
1010c614:	1800683a 	jmp	r3
1010c618:	1010c864 	muli	zero,r2,17185
1010c61c:	1010c678 	rdprs	zero,r2,17177
1010c620:	1010c678 	rdprs	zero,r2,17177
1010c624:	1010c674 	orhi	zero,r2,17177
1010c628:	1010c840 	call	11010c84 <__alt_data_end+0xef0c84>
1010c62c:	1010c840 	call	11010c84 <__alt_data_end+0xef0c84>
1010c630:	1010c828 	cmpgeui	zero,r2,17184
1010c634:	1010c674 	orhi	zero,r2,17177
1010c638:	1010c840 	call	11010c84 <__alt_data_end+0xef0c84>
1010c63c:	1010c828 	cmpgeui	zero,r2,17184
1010c640:	1010c840 	call	11010c84 <__alt_data_end+0xef0c84>
1010c644:	1010c674 	orhi	zero,r2,17177
1010c648:	1010c850 	cmplti	zero,r2,17185
1010c64c:	1010c850 	cmplti	zero,r2,17185
1010c650:	1010c850 	cmplti	zero,r2,17185
1010c654:	1010ca6c 	andhi	zero,r2,17193
1010c658:	2404b03a 	or	r2,r4,r16
1010c65c:	10006f1e 	bne	r2,zero,1010c81c <__muldf3+0x2f8>
1010c660:	04c00204 	movi	r19,8
1010c664:	0021883a 	mov	r16,zero
1010c668:	0029883a 	mov	r20,zero
1010c66c:	07000084 	movi	fp,2
1010c670:	003fcb06 	br	1010c5a0 <__muldf3+0x7c>
1010c674:	502d883a 	mov	r22,r10
1010c678:	00800084 	movi	r2,2
1010c67c:	28805726 	beq	r5,r2,1010c7dc <__muldf3+0x2b8>
1010c680:	008000c4 	movi	r2,3
1010c684:	28816626 	beq	r5,r2,1010cc20 <__muldf3+0x6fc>
1010c688:	00800044 	movi	r2,1
1010c68c:	2881411e 	bne	r5,r2,1010cb94 <__muldf3+0x670>
1010c690:	b02b883a 	mov	r21,r22
1010c694:	0005883a 	mov	r2,zero
1010c698:	000b883a 	mov	r5,zero
1010c69c:	0029883a 	mov	r20,zero
1010c6a0:	1004953a 	slli	r2,r2,20
1010c6a4:	a8c03fcc 	andi	r3,r21,255
1010c6a8:	04400434 	movhi	r17,16
1010c6ac:	8c7fffc4 	addi	r17,r17,-1
1010c6b0:	180697fa 	slli	r3,r3,31
1010c6b4:	2c4a703a 	and	r5,r5,r17
1010c6b8:	288ab03a 	or	r5,r5,r2
1010c6bc:	28c6b03a 	or	r3,r5,r3
1010c6c0:	a005883a 	mov	r2,r20
1010c6c4:	dfc00c17 	ldw	ra,48(sp)
1010c6c8:	df000b17 	ldw	fp,44(sp)
1010c6cc:	ddc00a17 	ldw	r23,40(sp)
1010c6d0:	dd800917 	ldw	r22,36(sp)
1010c6d4:	dd400817 	ldw	r21,32(sp)
1010c6d8:	dd000717 	ldw	r20,28(sp)
1010c6dc:	dcc00617 	ldw	r19,24(sp)
1010c6e0:	dc800517 	ldw	r18,20(sp)
1010c6e4:	dc400417 	ldw	r17,16(sp)
1010c6e8:	dc000317 	ldw	r16,12(sp)
1010c6ec:	dec00d04 	addi	sp,sp,52
1010c6f0:	f800283a 	ret
1010c6f4:	2404b03a 	or	r2,r4,r16
1010c6f8:	2027883a 	mov	r19,r4
1010c6fc:	10004226 	beq	r2,zero,1010c808 <__muldf3+0x2e4>
1010c700:	8000fc26 	beq	r16,zero,1010caf4 <__muldf3+0x5d0>
1010c704:	8009883a 	mov	r4,r16
1010c708:	d9800215 	stw	r6,8(sp)
1010c70c:	d9c00015 	stw	r7,0(sp)
1010c710:	da400115 	stw	r9,4(sp)
1010c714:	010d73c0 	call	1010d73c <__clzsi2>
1010c718:	d9800217 	ldw	r6,8(sp)
1010c71c:	d9c00017 	ldw	r7,0(sp)
1010c720:	da400117 	ldw	r9,4(sp)
1010c724:	113ffd44 	addi	r4,r2,-11
1010c728:	00c00704 	movi	r3,28
1010c72c:	1900ed16 	blt	r3,r4,1010cae4 <__muldf3+0x5c0>
1010c730:	00c00744 	movi	r3,29
1010c734:	147ffe04 	addi	r17,r2,-8
1010c738:	1907c83a 	sub	r3,r3,r4
1010c73c:	8460983a 	sll	r16,r16,r17
1010c740:	98c6d83a 	srl	r3,r19,r3
1010c744:	9c68983a 	sll	r20,r19,r17
1010c748:	1c20b03a 	or	r16,r3,r16
1010c74c:	1080fcc4 	addi	r2,r2,1011
1010c750:	00a5c83a 	sub	r18,zero,r2
1010c754:	0027883a 	mov	r19,zero
1010c758:	0039883a 	mov	fp,zero
1010c75c:	003f9006 	br	1010c5a0 <__muldf3+0x7c>
1010c760:	3446b03a 	or	r3,r6,r17
1010c764:	1800261e 	bne	r3,zero,1010c800 <__muldf3+0x2dc>
1010c768:	0023883a 	mov	r17,zero
1010c76c:	0011883a 	mov	r8,zero
1010c770:	01400084 	movi	r5,2
1010c774:	003f9c06 	br	1010c5e8 <__muldf3+0xc4>
1010c778:	3446b03a 	or	r3,r6,r17
1010c77c:	18001c26 	beq	r3,zero,1010c7f0 <__muldf3+0x2cc>
1010c780:	8800ce26 	beq	r17,zero,1010cabc <__muldf3+0x598>
1010c784:	8809883a 	mov	r4,r17
1010c788:	d9800215 	stw	r6,8(sp)
1010c78c:	da400115 	stw	r9,4(sp)
1010c790:	da800015 	stw	r10,0(sp)
1010c794:	010d73c0 	call	1010d73c <__clzsi2>
1010c798:	d9800217 	ldw	r6,8(sp)
1010c79c:	da400117 	ldw	r9,4(sp)
1010c7a0:	da800017 	ldw	r10,0(sp)
1010c7a4:	113ffd44 	addi	r4,r2,-11
1010c7a8:	00c00704 	movi	r3,28
1010c7ac:	1900bf16 	blt	r3,r4,1010caac <__muldf3+0x588>
1010c7b0:	00c00744 	movi	r3,29
1010c7b4:	123ffe04 	addi	r8,r2,-8
1010c7b8:	1907c83a 	sub	r3,r3,r4
1010c7bc:	8a22983a 	sll	r17,r17,r8
1010c7c0:	30c6d83a 	srl	r3,r6,r3
1010c7c4:	3210983a 	sll	r8,r6,r8
1010c7c8:	1c62b03a 	or	r17,r3,r17
1010c7cc:	1080fcc4 	addi	r2,r2,1011
1010c7d0:	0085c83a 	sub	r2,zero,r2
1010c7d4:	000b883a 	mov	r5,zero
1010c7d8:	003f8306 	br	1010c5e8 <__muldf3+0xc4>
1010c7dc:	b02b883a 	mov	r21,r22
1010c7e0:	0081ffc4 	movi	r2,2047
1010c7e4:	000b883a 	mov	r5,zero
1010c7e8:	0029883a 	mov	r20,zero
1010c7ec:	003fac06 	br	1010c6a0 <__muldf3+0x17c>
1010c7f0:	0023883a 	mov	r17,zero
1010c7f4:	0011883a 	mov	r8,zero
1010c7f8:	01400044 	movi	r5,1
1010c7fc:	003f7a06 	br	1010c5e8 <__muldf3+0xc4>
1010c800:	014000c4 	movi	r5,3
1010c804:	003f7806 	br	1010c5e8 <__muldf3+0xc4>
1010c808:	04c00104 	movi	r19,4
1010c80c:	0021883a 	mov	r16,zero
1010c810:	0029883a 	mov	r20,zero
1010c814:	07000044 	movi	fp,1
1010c818:	003f6106 	br	1010c5a0 <__muldf3+0x7c>
1010c81c:	04c00304 	movi	r19,12
1010c820:	070000c4 	movi	fp,3
1010c824:	003f5e06 	br	1010c5a0 <__muldf3+0x7c>
1010c828:	01400434 	movhi	r5,16
1010c82c:	002b883a 	mov	r21,zero
1010c830:	297fffc4 	addi	r5,r5,-1
1010c834:	053fffc4 	movi	r20,-1
1010c838:	0081ffc4 	movi	r2,2047
1010c83c:	003f9806 	br	1010c6a0 <__muldf3+0x17c>
1010c840:	8023883a 	mov	r17,r16
1010c844:	a011883a 	mov	r8,r20
1010c848:	e00b883a 	mov	r5,fp
1010c84c:	003f8a06 	br	1010c678 <__muldf3+0x154>
1010c850:	8023883a 	mov	r17,r16
1010c854:	a011883a 	mov	r8,r20
1010c858:	482d883a 	mov	r22,r9
1010c85c:	e00b883a 	mov	r5,fp
1010c860:	003f8506 	br	1010c678 <__muldf3+0x154>
1010c864:	a00ad43a 	srli	r5,r20,16
1010c868:	401ad43a 	srli	r13,r8,16
1010c86c:	a53fffcc 	andi	r20,r20,65535
1010c870:	423fffcc 	andi	r8,r8,65535
1010c874:	4519383a 	mul	r12,r8,r20
1010c878:	4147383a 	mul	r3,r8,r5
1010c87c:	6d09383a 	mul	r4,r13,r20
1010c880:	600cd43a 	srli	r6,r12,16
1010c884:	2b5d383a 	mul	r14,r5,r13
1010c888:	20c9883a 	add	r4,r4,r3
1010c88c:	310d883a 	add	r6,r6,r4
1010c890:	30c0022e 	bgeu	r6,r3,1010c89c <__muldf3+0x378>
1010c894:	00c00074 	movhi	r3,1
1010c898:	70dd883a 	add	r14,r14,r3
1010c89c:	8826d43a 	srli	r19,r17,16
1010c8a0:	8bffffcc 	andi	r15,r17,65535
1010c8a4:	7d23383a 	mul	r17,r15,r20
1010c8a8:	7949383a 	mul	r4,r15,r5
1010c8ac:	9d29383a 	mul	r20,r19,r20
1010c8b0:	8814d43a 	srli	r10,r17,16
1010c8b4:	3012943a 	slli	r9,r6,16
1010c8b8:	a129883a 	add	r20,r20,r4
1010c8bc:	633fffcc 	andi	r12,r12,65535
1010c8c0:	5515883a 	add	r10,r10,r20
1010c8c4:	3006d43a 	srli	r3,r6,16
1010c8c8:	4b13883a 	add	r9,r9,r12
1010c8cc:	2ccb383a 	mul	r5,r5,r19
1010c8d0:	5100022e 	bgeu	r10,r4,1010c8dc <__muldf3+0x3b8>
1010c8d4:	01000074 	movhi	r4,1
1010c8d8:	290b883a 	add	r5,r5,r4
1010c8dc:	802ad43a 	srli	r21,r16,16
1010c8e0:	843fffcc 	andi	r16,r16,65535
1010c8e4:	440d383a 	mul	r6,r8,r16
1010c8e8:	4565383a 	mul	r18,r8,r21
1010c8ec:	8349383a 	mul	r4,r16,r13
1010c8f0:	500e943a 	slli	r7,r10,16
1010c8f4:	3010d43a 	srli	r8,r6,16
1010c8f8:	5028d43a 	srli	r20,r10,16
1010c8fc:	2489883a 	add	r4,r4,r18
1010c900:	8abfffcc 	andi	r10,r17,65535
1010c904:	3a95883a 	add	r10,r7,r10
1010c908:	4119883a 	add	r12,r8,r4
1010c90c:	a169883a 	add	r20,r20,r5
1010c910:	1a87883a 	add	r3,r3,r10
1010c914:	6d5b383a 	mul	r13,r13,r21
1010c918:	6480022e 	bgeu	r12,r18,1010c924 <__muldf3+0x400>
1010c91c:	01000074 	movhi	r4,1
1010c920:	691b883a 	add	r13,r13,r4
1010c924:	7c25383a 	mul	r18,r15,r16
1010c928:	7d4b383a 	mul	r5,r15,r21
1010c92c:	84cf383a 	mul	r7,r16,r19
1010c930:	901ed43a 	srli	r15,r18,16
1010c934:	6008d43a 	srli	r4,r12,16
1010c938:	6010943a 	slli	r8,r12,16
1010c93c:	394f883a 	add	r7,r7,r5
1010c940:	333fffcc 	andi	r12,r6,65535
1010c944:	79df883a 	add	r15,r15,r7
1010c948:	235b883a 	add	r13,r4,r13
1010c94c:	9d63383a 	mul	r17,r19,r21
1010c950:	4309883a 	add	r4,r8,r12
1010c954:	7940022e 	bgeu	r15,r5,1010c960 <__muldf3+0x43c>
1010c958:	01400074 	movhi	r5,1
1010c95c:	8963883a 	add	r17,r17,r5
1010c960:	780a943a 	slli	r5,r15,16
1010c964:	91bfffcc 	andi	r6,r18,65535
1010c968:	70c7883a 	add	r3,r14,r3
1010c96c:	298d883a 	add	r6,r5,r6
1010c970:	1a8f803a 	cmpltu	r7,r3,r10
1010c974:	350b883a 	add	r5,r6,r20
1010c978:	20c7883a 	add	r3,r4,r3
1010c97c:	3955883a 	add	r10,r7,r5
1010c980:	1909803a 	cmpltu	r4,r3,r4
1010c984:	6a91883a 	add	r8,r13,r10
1010c988:	780cd43a 	srli	r6,r15,16
1010c98c:	2219883a 	add	r12,r4,r8
1010c990:	2d0b803a 	cmpltu	r5,r5,r20
1010c994:	51cf803a 	cmpltu	r7,r10,r7
1010c998:	29ceb03a 	or	r7,r5,r7
1010c99c:	4351803a 	cmpltu	r8,r8,r13
1010c9a0:	610b803a 	cmpltu	r5,r12,r4
1010c9a4:	4148b03a 	or	r4,r8,r5
1010c9a8:	398f883a 	add	r7,r7,r6
1010c9ac:	3909883a 	add	r4,r7,r4
1010c9b0:	1810927a 	slli	r8,r3,9
1010c9b4:	2449883a 	add	r4,r4,r17
1010c9b8:	2008927a 	slli	r4,r4,9
1010c9bc:	6022d5fa 	srli	r17,r12,23
1010c9c0:	1806d5fa 	srli	r3,r3,23
1010c9c4:	4252b03a 	or	r9,r8,r9
1010c9c8:	600a927a 	slli	r5,r12,9
1010c9cc:	4810c03a 	cmpne	r8,r9,zero
1010c9d0:	2462b03a 	or	r17,r4,r17
1010c9d4:	40c6b03a 	or	r3,r8,r3
1010c9d8:	8900402c 	andhi	r4,r17,256
1010c9dc:	1950b03a 	or	r8,r3,r5
1010c9e0:	20000726 	beq	r4,zero,1010ca00 <__muldf3+0x4dc>
1010c9e4:	4006d07a 	srli	r3,r8,1
1010c9e8:	880497fa 	slli	r2,r17,31
1010c9ec:	4200004c 	andi	r8,r8,1
1010c9f0:	8822d07a 	srli	r17,r17,1
1010c9f4:	1a10b03a 	or	r8,r3,r8
1010c9f8:	1210b03a 	or	r8,r2,r8
1010c9fc:	5805883a 	mov	r2,r11
1010ca00:	1140ffc4 	addi	r5,r2,1023
1010ca04:	0140440e 	bge	zero,r5,1010cb18 <__muldf3+0x5f4>
1010ca08:	40c001cc 	andi	r3,r8,7
1010ca0c:	18000726 	beq	r3,zero,1010ca2c <__muldf3+0x508>
1010ca10:	40c003cc 	andi	r3,r8,15
1010ca14:	01000104 	movi	r4,4
1010ca18:	19000426 	beq	r3,r4,1010ca2c <__muldf3+0x508>
1010ca1c:	4107883a 	add	r3,r8,r4
1010ca20:	1a11803a 	cmpltu	r8,r3,r8
1010ca24:	8a23883a 	add	r17,r17,r8
1010ca28:	1811883a 	mov	r8,r3
1010ca2c:	88c0402c 	andhi	r3,r17,256
1010ca30:	18000426 	beq	r3,zero,1010ca44 <__muldf3+0x520>
1010ca34:	11410004 	addi	r5,r2,1024
1010ca38:	00bfc034 	movhi	r2,65280
1010ca3c:	10bfffc4 	addi	r2,r2,-1
1010ca40:	88a2703a 	and	r17,r17,r2
1010ca44:	0081ff84 	movi	r2,2046
1010ca48:	117f6416 	blt	r2,r5,1010c7dc <__muldf3+0x2b8>
1010ca4c:	8828977a 	slli	r20,r17,29
1010ca50:	4010d0fa 	srli	r8,r8,3
1010ca54:	8822927a 	slli	r17,r17,9
1010ca58:	2881ffcc 	andi	r2,r5,2047
1010ca5c:	a228b03a 	or	r20,r20,r8
1010ca60:	880ad33a 	srli	r5,r17,12
1010ca64:	b02b883a 	mov	r21,r22
1010ca68:	003f0d06 	br	1010c6a0 <__muldf3+0x17c>
1010ca6c:	8080022c 	andhi	r2,r16,8
1010ca70:	10000926 	beq	r2,zero,1010ca98 <__muldf3+0x574>
1010ca74:	8880022c 	andhi	r2,r17,8
1010ca78:	1000071e 	bne	r2,zero,1010ca98 <__muldf3+0x574>
1010ca7c:	00800434 	movhi	r2,16
1010ca80:	89400234 	orhi	r5,r17,8
1010ca84:	10bfffc4 	addi	r2,r2,-1
1010ca88:	b82b883a 	mov	r21,r23
1010ca8c:	288a703a 	and	r5,r5,r2
1010ca90:	4029883a 	mov	r20,r8
1010ca94:	003f6806 	br	1010c838 <__muldf3+0x314>
1010ca98:	00800434 	movhi	r2,16
1010ca9c:	81400234 	orhi	r5,r16,8
1010caa0:	10bfffc4 	addi	r2,r2,-1
1010caa4:	288a703a 	and	r5,r5,r2
1010caa8:	003f6306 	br	1010c838 <__muldf3+0x314>
1010caac:	147ff604 	addi	r17,r2,-40
1010cab0:	3462983a 	sll	r17,r6,r17
1010cab4:	0011883a 	mov	r8,zero
1010cab8:	003f4406 	br	1010c7cc <__muldf3+0x2a8>
1010cabc:	3009883a 	mov	r4,r6
1010cac0:	d9800215 	stw	r6,8(sp)
1010cac4:	da400115 	stw	r9,4(sp)
1010cac8:	da800015 	stw	r10,0(sp)
1010cacc:	010d73c0 	call	1010d73c <__clzsi2>
1010cad0:	10800804 	addi	r2,r2,32
1010cad4:	da800017 	ldw	r10,0(sp)
1010cad8:	da400117 	ldw	r9,4(sp)
1010cadc:	d9800217 	ldw	r6,8(sp)
1010cae0:	003f3006 	br	1010c7a4 <__muldf3+0x280>
1010cae4:	143ff604 	addi	r16,r2,-40
1010cae8:	9c20983a 	sll	r16,r19,r16
1010caec:	0029883a 	mov	r20,zero
1010caf0:	003f1606 	br	1010c74c <__muldf3+0x228>
1010caf4:	d9800215 	stw	r6,8(sp)
1010caf8:	d9c00015 	stw	r7,0(sp)
1010cafc:	da400115 	stw	r9,4(sp)
1010cb00:	010d73c0 	call	1010d73c <__clzsi2>
1010cb04:	10800804 	addi	r2,r2,32
1010cb08:	da400117 	ldw	r9,4(sp)
1010cb0c:	d9c00017 	ldw	r7,0(sp)
1010cb10:	d9800217 	ldw	r6,8(sp)
1010cb14:	003f0306 	br	1010c724 <__muldf3+0x200>
1010cb18:	00c00044 	movi	r3,1
1010cb1c:	1947c83a 	sub	r3,r3,r5
1010cb20:	00800e04 	movi	r2,56
1010cb24:	10feda16 	blt	r2,r3,1010c690 <__muldf3+0x16c>
1010cb28:	008007c4 	movi	r2,31
1010cb2c:	10c01b16 	blt	r2,r3,1010cb9c <__muldf3+0x678>
1010cb30:	00800804 	movi	r2,32
1010cb34:	10c5c83a 	sub	r2,r2,r3
1010cb38:	888a983a 	sll	r5,r17,r2
1010cb3c:	40c8d83a 	srl	r4,r8,r3
1010cb40:	4084983a 	sll	r2,r8,r2
1010cb44:	88e2d83a 	srl	r17,r17,r3
1010cb48:	2906b03a 	or	r3,r5,r4
1010cb4c:	1004c03a 	cmpne	r2,r2,zero
1010cb50:	1886b03a 	or	r3,r3,r2
1010cb54:	188001cc 	andi	r2,r3,7
1010cb58:	10000726 	beq	r2,zero,1010cb78 <__muldf3+0x654>
1010cb5c:	188003cc 	andi	r2,r3,15
1010cb60:	01000104 	movi	r4,4
1010cb64:	11000426 	beq	r2,r4,1010cb78 <__muldf3+0x654>
1010cb68:	1805883a 	mov	r2,r3
1010cb6c:	10c00104 	addi	r3,r2,4
1010cb70:	1885803a 	cmpltu	r2,r3,r2
1010cb74:	88a3883a 	add	r17,r17,r2
1010cb78:	8880202c 	andhi	r2,r17,128
1010cb7c:	10001c26 	beq	r2,zero,1010cbf0 <__muldf3+0x6cc>
1010cb80:	b02b883a 	mov	r21,r22
1010cb84:	00800044 	movi	r2,1
1010cb88:	000b883a 	mov	r5,zero
1010cb8c:	0029883a 	mov	r20,zero
1010cb90:	003ec306 	br	1010c6a0 <__muldf3+0x17c>
1010cb94:	5805883a 	mov	r2,r11
1010cb98:	003f9906 	br	1010ca00 <__muldf3+0x4dc>
1010cb9c:	00bff844 	movi	r2,-31
1010cba0:	1145c83a 	sub	r2,r2,r5
1010cba4:	8888d83a 	srl	r4,r17,r2
1010cba8:	00800804 	movi	r2,32
1010cbac:	18801a26 	beq	r3,r2,1010cc18 <__muldf3+0x6f4>
1010cbb0:	00801004 	movi	r2,64
1010cbb4:	10c5c83a 	sub	r2,r2,r3
1010cbb8:	8884983a 	sll	r2,r17,r2
1010cbbc:	1204b03a 	or	r2,r2,r8
1010cbc0:	1004c03a 	cmpne	r2,r2,zero
1010cbc4:	2084b03a 	or	r2,r4,r2
1010cbc8:	144001cc 	andi	r17,r2,7
1010cbcc:	88000d1e 	bne	r17,zero,1010cc04 <__muldf3+0x6e0>
1010cbd0:	000b883a 	mov	r5,zero
1010cbd4:	1028d0fa 	srli	r20,r2,3
1010cbd8:	b02b883a 	mov	r21,r22
1010cbdc:	0005883a 	mov	r2,zero
1010cbe0:	a468b03a 	or	r20,r20,r17
1010cbe4:	003eae06 	br	1010c6a0 <__muldf3+0x17c>
1010cbe8:	1007883a 	mov	r3,r2
1010cbec:	0023883a 	mov	r17,zero
1010cbf0:	880a927a 	slli	r5,r17,9
1010cbf4:	1805883a 	mov	r2,r3
1010cbf8:	8822977a 	slli	r17,r17,29
1010cbfc:	280ad33a 	srli	r5,r5,12
1010cc00:	003ff406 	br	1010cbd4 <__muldf3+0x6b0>
1010cc04:	10c003cc 	andi	r3,r2,15
1010cc08:	01000104 	movi	r4,4
1010cc0c:	193ff626 	beq	r3,r4,1010cbe8 <__muldf3+0x6c4>
1010cc10:	0023883a 	mov	r17,zero
1010cc14:	003fd506 	br	1010cb6c <__muldf3+0x648>
1010cc18:	0005883a 	mov	r2,zero
1010cc1c:	003fe706 	br	1010cbbc <__muldf3+0x698>
1010cc20:	00800434 	movhi	r2,16
1010cc24:	89400234 	orhi	r5,r17,8
1010cc28:	10bfffc4 	addi	r2,r2,-1
1010cc2c:	b02b883a 	mov	r21,r22
1010cc30:	288a703a 	and	r5,r5,r2
1010cc34:	4029883a 	mov	r20,r8
1010cc38:	003eff06 	br	1010c838 <__muldf3+0x314>

1010cc3c <__subdf3>:
1010cc3c:	02000434 	movhi	r8,16
1010cc40:	423fffc4 	addi	r8,r8,-1
1010cc44:	defffb04 	addi	sp,sp,-20
1010cc48:	2a14703a 	and	r10,r5,r8
1010cc4c:	3812d53a 	srli	r9,r7,20
1010cc50:	3a10703a 	and	r8,r7,r8
1010cc54:	2006d77a 	srli	r3,r4,29
1010cc58:	3004d77a 	srli	r2,r6,29
1010cc5c:	dc000015 	stw	r16,0(sp)
1010cc60:	501490fa 	slli	r10,r10,3
1010cc64:	2820d53a 	srli	r16,r5,20
1010cc68:	401090fa 	slli	r8,r8,3
1010cc6c:	dc800215 	stw	r18,8(sp)
1010cc70:	dc400115 	stw	r17,4(sp)
1010cc74:	dfc00415 	stw	ra,16(sp)
1010cc78:	202290fa 	slli	r17,r4,3
1010cc7c:	dcc00315 	stw	r19,12(sp)
1010cc80:	4a41ffcc 	andi	r9,r9,2047
1010cc84:	0101ffc4 	movi	r4,2047
1010cc88:	2824d7fa 	srli	r18,r5,31
1010cc8c:	8401ffcc 	andi	r16,r16,2047
1010cc90:	50c6b03a 	or	r3,r10,r3
1010cc94:	380ed7fa 	srli	r7,r7,31
1010cc98:	408ab03a 	or	r5,r8,r2
1010cc9c:	300c90fa 	slli	r6,r6,3
1010cca0:	49009626 	beq	r9,r4,1010cefc <__subdf3+0x2c0>
1010cca4:	39c0005c 	xori	r7,r7,1
1010cca8:	8245c83a 	sub	r2,r16,r9
1010ccac:	3c807426 	beq	r7,r18,1010ce80 <__subdf3+0x244>
1010ccb0:	0080af0e 	bge	zero,r2,1010cf70 <__subdf3+0x334>
1010ccb4:	48002a1e 	bne	r9,zero,1010cd60 <__subdf3+0x124>
1010ccb8:	2988b03a 	or	r4,r5,r6
1010ccbc:	20009a1e 	bne	r4,zero,1010cf28 <__subdf3+0x2ec>
1010ccc0:	888001cc 	andi	r2,r17,7
1010ccc4:	10000726 	beq	r2,zero,1010cce4 <__subdf3+0xa8>
1010ccc8:	888003cc 	andi	r2,r17,15
1010cccc:	01000104 	movi	r4,4
1010ccd0:	11000426 	beq	r2,r4,1010cce4 <__subdf3+0xa8>
1010ccd4:	890b883a 	add	r5,r17,r4
1010ccd8:	2c63803a 	cmpltu	r17,r5,r17
1010ccdc:	1c47883a 	add	r3,r3,r17
1010cce0:	2823883a 	mov	r17,r5
1010cce4:	1880202c 	andhi	r2,r3,128
1010cce8:	10005926 	beq	r2,zero,1010ce50 <__subdf3+0x214>
1010ccec:	84000044 	addi	r16,r16,1
1010ccf0:	0081ffc4 	movi	r2,2047
1010ccf4:	8080be26 	beq	r16,r2,1010cff0 <__subdf3+0x3b4>
1010ccf8:	017fe034 	movhi	r5,65408
1010ccfc:	297fffc4 	addi	r5,r5,-1
1010cd00:	1946703a 	and	r3,r3,r5
1010cd04:	1804977a 	slli	r2,r3,29
1010cd08:	1806927a 	slli	r3,r3,9
1010cd0c:	8822d0fa 	srli	r17,r17,3
1010cd10:	8401ffcc 	andi	r16,r16,2047
1010cd14:	180ad33a 	srli	r5,r3,12
1010cd18:	9100004c 	andi	r4,r18,1
1010cd1c:	1444b03a 	or	r2,r2,r17
1010cd20:	80c1ffcc 	andi	r3,r16,2047
1010cd24:	1820953a 	slli	r16,r3,20
1010cd28:	20c03fcc 	andi	r3,r4,255
1010cd2c:	180897fa 	slli	r4,r3,31
1010cd30:	00c00434 	movhi	r3,16
1010cd34:	18ffffc4 	addi	r3,r3,-1
1010cd38:	28c6703a 	and	r3,r5,r3
1010cd3c:	1c06b03a 	or	r3,r3,r16
1010cd40:	1906b03a 	or	r3,r3,r4
1010cd44:	dfc00417 	ldw	ra,16(sp)
1010cd48:	dcc00317 	ldw	r19,12(sp)
1010cd4c:	dc800217 	ldw	r18,8(sp)
1010cd50:	dc400117 	ldw	r17,4(sp)
1010cd54:	dc000017 	ldw	r16,0(sp)
1010cd58:	dec00504 	addi	sp,sp,20
1010cd5c:	f800283a 	ret
1010cd60:	0101ffc4 	movi	r4,2047
1010cd64:	813fd626 	beq	r16,r4,1010ccc0 <__subdf3+0x84>
1010cd68:	29402034 	orhi	r5,r5,128
1010cd6c:	01000e04 	movi	r4,56
1010cd70:	2080a316 	blt	r4,r2,1010d000 <__subdf3+0x3c4>
1010cd74:	010007c4 	movi	r4,31
1010cd78:	2080c616 	blt	r4,r2,1010d094 <__subdf3+0x458>
1010cd7c:	01000804 	movi	r4,32
1010cd80:	2089c83a 	sub	r4,r4,r2
1010cd84:	2910983a 	sll	r8,r5,r4
1010cd88:	308ed83a 	srl	r7,r6,r2
1010cd8c:	3108983a 	sll	r4,r6,r4
1010cd90:	2884d83a 	srl	r2,r5,r2
1010cd94:	41ccb03a 	or	r6,r8,r7
1010cd98:	2008c03a 	cmpne	r4,r4,zero
1010cd9c:	310cb03a 	or	r6,r6,r4
1010cda0:	898dc83a 	sub	r6,r17,r6
1010cda4:	89a3803a 	cmpltu	r17,r17,r6
1010cda8:	1887c83a 	sub	r3,r3,r2
1010cdac:	1c47c83a 	sub	r3,r3,r17
1010cdb0:	3023883a 	mov	r17,r6
1010cdb4:	1880202c 	andhi	r2,r3,128
1010cdb8:	10002326 	beq	r2,zero,1010ce48 <__subdf3+0x20c>
1010cdbc:	04c02034 	movhi	r19,128
1010cdc0:	9cffffc4 	addi	r19,r19,-1
1010cdc4:	1ce6703a 	and	r19,r3,r19
1010cdc8:	98007a26 	beq	r19,zero,1010cfb4 <__subdf3+0x378>
1010cdcc:	9809883a 	mov	r4,r19
1010cdd0:	010d73c0 	call	1010d73c <__clzsi2>
1010cdd4:	113ffe04 	addi	r4,r2,-8
1010cdd8:	00c007c4 	movi	r3,31
1010cddc:	19007b16 	blt	r3,r4,1010cfcc <__subdf3+0x390>
1010cde0:	00800804 	movi	r2,32
1010cde4:	1105c83a 	sub	r2,r2,r4
1010cde8:	8884d83a 	srl	r2,r17,r2
1010cdec:	9906983a 	sll	r3,r19,r4
1010cdf0:	8922983a 	sll	r17,r17,r4
1010cdf4:	10c4b03a 	or	r2,r2,r3
1010cdf8:	24007816 	blt	r4,r16,1010cfdc <__subdf3+0x3a0>
1010cdfc:	2421c83a 	sub	r16,r4,r16
1010ce00:	80c00044 	addi	r3,r16,1
1010ce04:	010007c4 	movi	r4,31
1010ce08:	20c09516 	blt	r4,r3,1010d060 <__subdf3+0x424>
1010ce0c:	01400804 	movi	r5,32
1010ce10:	28cbc83a 	sub	r5,r5,r3
1010ce14:	88c8d83a 	srl	r4,r17,r3
1010ce18:	8962983a 	sll	r17,r17,r5
1010ce1c:	114a983a 	sll	r5,r2,r5
1010ce20:	10c6d83a 	srl	r3,r2,r3
1010ce24:	8804c03a 	cmpne	r2,r17,zero
1010ce28:	290ab03a 	or	r5,r5,r4
1010ce2c:	28a2b03a 	or	r17,r5,r2
1010ce30:	0021883a 	mov	r16,zero
1010ce34:	003fa206 	br	1010ccc0 <__subdf3+0x84>
1010ce38:	2090b03a 	or	r8,r4,r2
1010ce3c:	40018e26 	beq	r8,zero,1010d478 <__subdf3+0x83c>
1010ce40:	1007883a 	mov	r3,r2
1010ce44:	2023883a 	mov	r17,r4
1010ce48:	888001cc 	andi	r2,r17,7
1010ce4c:	103f9e1e 	bne	r2,zero,1010ccc8 <__subdf3+0x8c>
1010ce50:	1804977a 	slli	r2,r3,29
1010ce54:	8822d0fa 	srli	r17,r17,3
1010ce58:	1810d0fa 	srli	r8,r3,3
1010ce5c:	9100004c 	andi	r4,r18,1
1010ce60:	1444b03a 	or	r2,r2,r17
1010ce64:	00c1ffc4 	movi	r3,2047
1010ce68:	80c02826 	beq	r16,r3,1010cf0c <__subdf3+0x2d0>
1010ce6c:	01400434 	movhi	r5,16
1010ce70:	297fffc4 	addi	r5,r5,-1
1010ce74:	80e0703a 	and	r16,r16,r3
1010ce78:	414a703a 	and	r5,r8,r5
1010ce7c:	003fa806 	br	1010cd20 <__subdf3+0xe4>
1010ce80:	0080630e 	bge	zero,r2,1010d010 <__subdf3+0x3d4>
1010ce84:	48003026 	beq	r9,zero,1010cf48 <__subdf3+0x30c>
1010ce88:	0101ffc4 	movi	r4,2047
1010ce8c:	813f8c26 	beq	r16,r4,1010ccc0 <__subdf3+0x84>
1010ce90:	29402034 	orhi	r5,r5,128
1010ce94:	01000e04 	movi	r4,56
1010ce98:	2080a90e 	bge	r4,r2,1010d140 <__subdf3+0x504>
1010ce9c:	298cb03a 	or	r6,r5,r6
1010cea0:	3012c03a 	cmpne	r9,r6,zero
1010cea4:	0005883a 	mov	r2,zero
1010cea8:	4c53883a 	add	r9,r9,r17
1010ceac:	4c63803a 	cmpltu	r17,r9,r17
1010ceb0:	10c7883a 	add	r3,r2,r3
1010ceb4:	88c7883a 	add	r3,r17,r3
1010ceb8:	4823883a 	mov	r17,r9
1010cebc:	1880202c 	andhi	r2,r3,128
1010cec0:	1000d026 	beq	r2,zero,1010d204 <__subdf3+0x5c8>
1010cec4:	84000044 	addi	r16,r16,1
1010cec8:	0081ffc4 	movi	r2,2047
1010cecc:	8080fe26 	beq	r16,r2,1010d2c8 <__subdf3+0x68c>
1010ced0:	00bfe034 	movhi	r2,65408
1010ced4:	10bfffc4 	addi	r2,r2,-1
1010ced8:	1886703a 	and	r3,r3,r2
1010cedc:	880ad07a 	srli	r5,r17,1
1010cee0:	180497fa 	slli	r2,r3,31
1010cee4:	8900004c 	andi	r4,r17,1
1010cee8:	2922b03a 	or	r17,r5,r4
1010ceec:	1806d07a 	srli	r3,r3,1
1010cef0:	1462b03a 	or	r17,r2,r17
1010cef4:	3825883a 	mov	r18,r7
1010cef8:	003f7106 	br	1010ccc0 <__subdf3+0x84>
1010cefc:	2984b03a 	or	r2,r5,r6
1010cf00:	103f6826 	beq	r2,zero,1010cca4 <__subdf3+0x68>
1010cf04:	39c03fcc 	andi	r7,r7,255
1010cf08:	003f6706 	br	1010cca8 <__subdf3+0x6c>
1010cf0c:	4086b03a 	or	r3,r8,r2
1010cf10:	18015226 	beq	r3,zero,1010d45c <__subdf3+0x820>
1010cf14:	00c00434 	movhi	r3,16
1010cf18:	41400234 	orhi	r5,r8,8
1010cf1c:	18ffffc4 	addi	r3,r3,-1
1010cf20:	28ca703a 	and	r5,r5,r3
1010cf24:	003f7e06 	br	1010cd20 <__subdf3+0xe4>
1010cf28:	10bfffc4 	addi	r2,r2,-1
1010cf2c:	1000491e 	bne	r2,zero,1010d054 <__subdf3+0x418>
1010cf30:	898fc83a 	sub	r7,r17,r6
1010cf34:	89e3803a 	cmpltu	r17,r17,r7
1010cf38:	1947c83a 	sub	r3,r3,r5
1010cf3c:	1c47c83a 	sub	r3,r3,r17
1010cf40:	3823883a 	mov	r17,r7
1010cf44:	003f9b06 	br	1010cdb4 <__subdf3+0x178>
1010cf48:	2988b03a 	or	r4,r5,r6
1010cf4c:	203f5c26 	beq	r4,zero,1010ccc0 <__subdf3+0x84>
1010cf50:	10bfffc4 	addi	r2,r2,-1
1010cf54:	1000931e 	bne	r2,zero,1010d1a4 <__subdf3+0x568>
1010cf58:	898d883a 	add	r6,r17,r6
1010cf5c:	3463803a 	cmpltu	r17,r6,r17
1010cf60:	1947883a 	add	r3,r3,r5
1010cf64:	88c7883a 	add	r3,r17,r3
1010cf68:	3023883a 	mov	r17,r6
1010cf6c:	003fd306 	br	1010cebc <__subdf3+0x280>
1010cf70:	1000541e 	bne	r2,zero,1010d0c4 <__subdf3+0x488>
1010cf74:	80800044 	addi	r2,r16,1
1010cf78:	1081ffcc 	andi	r2,r2,2047
1010cf7c:	01000044 	movi	r4,1
1010cf80:	2080a20e 	bge	r4,r2,1010d20c <__subdf3+0x5d0>
1010cf84:	8989c83a 	sub	r4,r17,r6
1010cf88:	8905803a 	cmpltu	r2,r17,r4
1010cf8c:	1967c83a 	sub	r19,r3,r5
1010cf90:	98a7c83a 	sub	r19,r19,r2
1010cf94:	9880202c 	andhi	r2,r19,128
1010cf98:	10006326 	beq	r2,zero,1010d128 <__subdf3+0x4ec>
1010cf9c:	3463c83a 	sub	r17,r6,r17
1010cfa0:	28c7c83a 	sub	r3,r5,r3
1010cfa4:	344d803a 	cmpltu	r6,r6,r17
1010cfa8:	19a7c83a 	sub	r19,r3,r6
1010cfac:	3825883a 	mov	r18,r7
1010cfb0:	983f861e 	bne	r19,zero,1010cdcc <__subdf3+0x190>
1010cfb4:	8809883a 	mov	r4,r17
1010cfb8:	010d73c0 	call	1010d73c <__clzsi2>
1010cfbc:	10800804 	addi	r2,r2,32
1010cfc0:	113ffe04 	addi	r4,r2,-8
1010cfc4:	00c007c4 	movi	r3,31
1010cfc8:	193f850e 	bge	r3,r4,1010cde0 <__subdf3+0x1a4>
1010cfcc:	10bff604 	addi	r2,r2,-40
1010cfd0:	8884983a 	sll	r2,r17,r2
1010cfd4:	0023883a 	mov	r17,zero
1010cfd8:	243f880e 	bge	r4,r16,1010cdfc <__subdf3+0x1c0>
1010cfdc:	00ffe034 	movhi	r3,65408
1010cfe0:	18ffffc4 	addi	r3,r3,-1
1010cfe4:	8121c83a 	sub	r16,r16,r4
1010cfe8:	10c6703a 	and	r3,r2,r3
1010cfec:	003f3406 	br	1010ccc0 <__subdf3+0x84>
1010cff0:	9100004c 	andi	r4,r18,1
1010cff4:	000b883a 	mov	r5,zero
1010cff8:	0005883a 	mov	r2,zero
1010cffc:	003f4806 	br	1010cd20 <__subdf3+0xe4>
1010d000:	298cb03a 	or	r6,r5,r6
1010d004:	300cc03a 	cmpne	r6,r6,zero
1010d008:	0005883a 	mov	r2,zero
1010d00c:	003f6406 	br	1010cda0 <__subdf3+0x164>
1010d010:	10009a1e 	bne	r2,zero,1010d27c <__subdf3+0x640>
1010d014:	82400044 	addi	r9,r16,1
1010d018:	4881ffcc 	andi	r2,r9,2047
1010d01c:	02800044 	movi	r10,1
1010d020:	5080670e 	bge	r10,r2,1010d1c0 <__subdf3+0x584>
1010d024:	0081ffc4 	movi	r2,2047
1010d028:	4880af26 	beq	r9,r2,1010d2e8 <__subdf3+0x6ac>
1010d02c:	898d883a 	add	r6,r17,r6
1010d030:	1945883a 	add	r2,r3,r5
1010d034:	3447803a 	cmpltu	r3,r6,r17
1010d038:	1887883a 	add	r3,r3,r2
1010d03c:	182297fa 	slli	r17,r3,31
1010d040:	300cd07a 	srli	r6,r6,1
1010d044:	1806d07a 	srli	r3,r3,1
1010d048:	4821883a 	mov	r16,r9
1010d04c:	89a2b03a 	or	r17,r17,r6
1010d050:	003f1b06 	br	1010ccc0 <__subdf3+0x84>
1010d054:	0101ffc4 	movi	r4,2047
1010d058:	813f441e 	bne	r16,r4,1010cd6c <__subdf3+0x130>
1010d05c:	003f1806 	br	1010ccc0 <__subdf3+0x84>
1010d060:	843ff844 	addi	r16,r16,-31
1010d064:	01400804 	movi	r5,32
1010d068:	1408d83a 	srl	r4,r2,r16
1010d06c:	19405026 	beq	r3,r5,1010d1b0 <__subdf3+0x574>
1010d070:	01401004 	movi	r5,64
1010d074:	28c7c83a 	sub	r3,r5,r3
1010d078:	10c4983a 	sll	r2,r2,r3
1010d07c:	88a2b03a 	or	r17,r17,r2
1010d080:	8822c03a 	cmpne	r17,r17,zero
1010d084:	2462b03a 	or	r17,r4,r17
1010d088:	0007883a 	mov	r3,zero
1010d08c:	0021883a 	mov	r16,zero
1010d090:	003f6d06 	br	1010ce48 <__subdf3+0x20c>
1010d094:	11fff804 	addi	r7,r2,-32
1010d098:	01000804 	movi	r4,32
1010d09c:	29ced83a 	srl	r7,r5,r7
1010d0a0:	11004526 	beq	r2,r4,1010d1b8 <__subdf3+0x57c>
1010d0a4:	01001004 	movi	r4,64
1010d0a8:	2089c83a 	sub	r4,r4,r2
1010d0ac:	2904983a 	sll	r2,r5,r4
1010d0b0:	118cb03a 	or	r6,r2,r6
1010d0b4:	300cc03a 	cmpne	r6,r6,zero
1010d0b8:	398cb03a 	or	r6,r7,r6
1010d0bc:	0005883a 	mov	r2,zero
1010d0c0:	003f3706 	br	1010cda0 <__subdf3+0x164>
1010d0c4:	80002a26 	beq	r16,zero,1010d170 <__subdf3+0x534>
1010d0c8:	0101ffc4 	movi	r4,2047
1010d0cc:	49006626 	beq	r9,r4,1010d268 <__subdf3+0x62c>
1010d0d0:	0085c83a 	sub	r2,zero,r2
1010d0d4:	18c02034 	orhi	r3,r3,128
1010d0d8:	01000e04 	movi	r4,56
1010d0dc:	20807e16 	blt	r4,r2,1010d2d8 <__subdf3+0x69c>
1010d0e0:	010007c4 	movi	r4,31
1010d0e4:	2080e716 	blt	r4,r2,1010d484 <__subdf3+0x848>
1010d0e8:	01000804 	movi	r4,32
1010d0ec:	2089c83a 	sub	r4,r4,r2
1010d0f0:	1914983a 	sll	r10,r3,r4
1010d0f4:	8890d83a 	srl	r8,r17,r2
1010d0f8:	8908983a 	sll	r4,r17,r4
1010d0fc:	1884d83a 	srl	r2,r3,r2
1010d100:	5222b03a 	or	r17,r10,r8
1010d104:	2006c03a 	cmpne	r3,r4,zero
1010d108:	88e2b03a 	or	r17,r17,r3
1010d10c:	3463c83a 	sub	r17,r6,r17
1010d110:	2885c83a 	sub	r2,r5,r2
1010d114:	344d803a 	cmpltu	r6,r6,r17
1010d118:	1187c83a 	sub	r3,r2,r6
1010d11c:	4821883a 	mov	r16,r9
1010d120:	3825883a 	mov	r18,r7
1010d124:	003f2306 	br	1010cdb4 <__subdf3+0x178>
1010d128:	24d0b03a 	or	r8,r4,r19
1010d12c:	40001b1e 	bne	r8,zero,1010d19c <__subdf3+0x560>
1010d130:	0005883a 	mov	r2,zero
1010d134:	0009883a 	mov	r4,zero
1010d138:	0021883a 	mov	r16,zero
1010d13c:	003f4906 	br	1010ce64 <__subdf3+0x228>
1010d140:	010007c4 	movi	r4,31
1010d144:	20803a16 	blt	r4,r2,1010d230 <__subdf3+0x5f4>
1010d148:	01000804 	movi	r4,32
1010d14c:	2089c83a 	sub	r4,r4,r2
1010d150:	2912983a 	sll	r9,r5,r4
1010d154:	3090d83a 	srl	r8,r6,r2
1010d158:	3108983a 	sll	r4,r6,r4
1010d15c:	2884d83a 	srl	r2,r5,r2
1010d160:	4a12b03a 	or	r9,r9,r8
1010d164:	2008c03a 	cmpne	r4,r4,zero
1010d168:	4912b03a 	or	r9,r9,r4
1010d16c:	003f4e06 	br	1010cea8 <__subdf3+0x26c>
1010d170:	1c48b03a 	or	r4,r3,r17
1010d174:	20003c26 	beq	r4,zero,1010d268 <__subdf3+0x62c>
1010d178:	0084303a 	nor	r2,zero,r2
1010d17c:	1000381e 	bne	r2,zero,1010d260 <__subdf3+0x624>
1010d180:	3463c83a 	sub	r17,r6,r17
1010d184:	28c5c83a 	sub	r2,r5,r3
1010d188:	344d803a 	cmpltu	r6,r6,r17
1010d18c:	1187c83a 	sub	r3,r2,r6
1010d190:	4821883a 	mov	r16,r9
1010d194:	3825883a 	mov	r18,r7
1010d198:	003f0606 	br	1010cdb4 <__subdf3+0x178>
1010d19c:	2023883a 	mov	r17,r4
1010d1a0:	003f0906 	br	1010cdc8 <__subdf3+0x18c>
1010d1a4:	0101ffc4 	movi	r4,2047
1010d1a8:	813f3a1e 	bne	r16,r4,1010ce94 <__subdf3+0x258>
1010d1ac:	003ec406 	br	1010ccc0 <__subdf3+0x84>
1010d1b0:	0005883a 	mov	r2,zero
1010d1b4:	003fb106 	br	1010d07c <__subdf3+0x440>
1010d1b8:	0005883a 	mov	r2,zero
1010d1bc:	003fbc06 	br	1010d0b0 <__subdf3+0x474>
1010d1c0:	1c44b03a 	or	r2,r3,r17
1010d1c4:	80008e1e 	bne	r16,zero,1010d400 <__subdf3+0x7c4>
1010d1c8:	1000c826 	beq	r2,zero,1010d4ec <__subdf3+0x8b0>
1010d1cc:	2984b03a 	or	r2,r5,r6
1010d1d0:	103ebb26 	beq	r2,zero,1010ccc0 <__subdf3+0x84>
1010d1d4:	8989883a 	add	r4,r17,r6
1010d1d8:	1945883a 	add	r2,r3,r5
1010d1dc:	2447803a 	cmpltu	r3,r4,r17
1010d1e0:	1887883a 	add	r3,r3,r2
1010d1e4:	1880202c 	andhi	r2,r3,128
1010d1e8:	2023883a 	mov	r17,r4
1010d1ec:	103f1626 	beq	r2,zero,1010ce48 <__subdf3+0x20c>
1010d1f0:	00bfe034 	movhi	r2,65408
1010d1f4:	10bfffc4 	addi	r2,r2,-1
1010d1f8:	5021883a 	mov	r16,r10
1010d1fc:	1886703a 	and	r3,r3,r2
1010d200:	003eaf06 	br	1010ccc0 <__subdf3+0x84>
1010d204:	3825883a 	mov	r18,r7
1010d208:	003f0f06 	br	1010ce48 <__subdf3+0x20c>
1010d20c:	1c44b03a 	or	r2,r3,r17
1010d210:	8000251e 	bne	r16,zero,1010d2a8 <__subdf3+0x66c>
1010d214:	1000661e 	bne	r2,zero,1010d3b0 <__subdf3+0x774>
1010d218:	2990b03a 	or	r8,r5,r6
1010d21c:	40009626 	beq	r8,zero,1010d478 <__subdf3+0x83c>
1010d220:	2807883a 	mov	r3,r5
1010d224:	3023883a 	mov	r17,r6
1010d228:	3825883a 	mov	r18,r7
1010d22c:	003ea406 	br	1010ccc0 <__subdf3+0x84>
1010d230:	127ff804 	addi	r9,r2,-32
1010d234:	01000804 	movi	r4,32
1010d238:	2a52d83a 	srl	r9,r5,r9
1010d23c:	11008c26 	beq	r2,r4,1010d470 <__subdf3+0x834>
1010d240:	01001004 	movi	r4,64
1010d244:	2085c83a 	sub	r2,r4,r2
1010d248:	2884983a 	sll	r2,r5,r2
1010d24c:	118cb03a 	or	r6,r2,r6
1010d250:	300cc03a 	cmpne	r6,r6,zero
1010d254:	4992b03a 	or	r9,r9,r6
1010d258:	0005883a 	mov	r2,zero
1010d25c:	003f1206 	br	1010cea8 <__subdf3+0x26c>
1010d260:	0101ffc4 	movi	r4,2047
1010d264:	493f9c1e 	bne	r9,r4,1010d0d8 <__subdf3+0x49c>
1010d268:	2807883a 	mov	r3,r5
1010d26c:	3023883a 	mov	r17,r6
1010d270:	4821883a 	mov	r16,r9
1010d274:	3825883a 	mov	r18,r7
1010d278:	003e9106 	br	1010ccc0 <__subdf3+0x84>
1010d27c:	80001f1e 	bne	r16,zero,1010d2fc <__subdf3+0x6c0>
1010d280:	1c48b03a 	or	r4,r3,r17
1010d284:	20005a26 	beq	r4,zero,1010d3f0 <__subdf3+0x7b4>
1010d288:	0084303a 	nor	r2,zero,r2
1010d28c:	1000561e 	bne	r2,zero,1010d3e8 <__subdf3+0x7ac>
1010d290:	89a3883a 	add	r17,r17,r6
1010d294:	1945883a 	add	r2,r3,r5
1010d298:	898d803a 	cmpltu	r6,r17,r6
1010d29c:	3087883a 	add	r3,r6,r2
1010d2a0:	4821883a 	mov	r16,r9
1010d2a4:	003f0506 	br	1010cebc <__subdf3+0x280>
1010d2a8:	10002b1e 	bne	r2,zero,1010d358 <__subdf3+0x71c>
1010d2ac:	2984b03a 	or	r2,r5,r6
1010d2b0:	10008026 	beq	r2,zero,1010d4b4 <__subdf3+0x878>
1010d2b4:	2807883a 	mov	r3,r5
1010d2b8:	3023883a 	mov	r17,r6
1010d2bc:	3825883a 	mov	r18,r7
1010d2c0:	0401ffc4 	movi	r16,2047
1010d2c4:	003e7e06 	br	1010ccc0 <__subdf3+0x84>
1010d2c8:	3809883a 	mov	r4,r7
1010d2cc:	0011883a 	mov	r8,zero
1010d2d0:	0005883a 	mov	r2,zero
1010d2d4:	003ee306 	br	1010ce64 <__subdf3+0x228>
1010d2d8:	1c62b03a 	or	r17,r3,r17
1010d2dc:	8822c03a 	cmpne	r17,r17,zero
1010d2e0:	0005883a 	mov	r2,zero
1010d2e4:	003f8906 	br	1010d10c <__subdf3+0x4d0>
1010d2e8:	3809883a 	mov	r4,r7
1010d2ec:	4821883a 	mov	r16,r9
1010d2f0:	0011883a 	mov	r8,zero
1010d2f4:	0005883a 	mov	r2,zero
1010d2f8:	003eda06 	br	1010ce64 <__subdf3+0x228>
1010d2fc:	0101ffc4 	movi	r4,2047
1010d300:	49003b26 	beq	r9,r4,1010d3f0 <__subdf3+0x7b4>
1010d304:	0085c83a 	sub	r2,zero,r2
1010d308:	18c02034 	orhi	r3,r3,128
1010d30c:	01000e04 	movi	r4,56
1010d310:	20806e16 	blt	r4,r2,1010d4cc <__subdf3+0x890>
1010d314:	010007c4 	movi	r4,31
1010d318:	20807716 	blt	r4,r2,1010d4f8 <__subdf3+0x8bc>
1010d31c:	01000804 	movi	r4,32
1010d320:	2089c83a 	sub	r4,r4,r2
1010d324:	1914983a 	sll	r10,r3,r4
1010d328:	8890d83a 	srl	r8,r17,r2
1010d32c:	8908983a 	sll	r4,r17,r4
1010d330:	1884d83a 	srl	r2,r3,r2
1010d334:	5222b03a 	or	r17,r10,r8
1010d338:	2006c03a 	cmpne	r3,r4,zero
1010d33c:	88e2b03a 	or	r17,r17,r3
1010d340:	89a3883a 	add	r17,r17,r6
1010d344:	1145883a 	add	r2,r2,r5
1010d348:	898d803a 	cmpltu	r6,r17,r6
1010d34c:	3087883a 	add	r3,r6,r2
1010d350:	4821883a 	mov	r16,r9
1010d354:	003ed906 	br	1010cebc <__subdf3+0x280>
1010d358:	2984b03a 	or	r2,r5,r6
1010d35c:	10004226 	beq	r2,zero,1010d468 <__subdf3+0x82c>
1010d360:	1808d0fa 	srli	r4,r3,3
1010d364:	8822d0fa 	srli	r17,r17,3
1010d368:	1806977a 	slli	r3,r3,29
1010d36c:	2080022c 	andhi	r2,r4,8
1010d370:	1c62b03a 	or	r17,r3,r17
1010d374:	10000826 	beq	r2,zero,1010d398 <__subdf3+0x75c>
1010d378:	2812d0fa 	srli	r9,r5,3
1010d37c:	4880022c 	andhi	r2,r9,8
1010d380:	1000051e 	bne	r2,zero,1010d398 <__subdf3+0x75c>
1010d384:	300cd0fa 	srli	r6,r6,3
1010d388:	2804977a 	slli	r2,r5,29
1010d38c:	4809883a 	mov	r4,r9
1010d390:	3825883a 	mov	r18,r7
1010d394:	11a2b03a 	or	r17,r2,r6
1010d398:	8806d77a 	srli	r3,r17,29
1010d39c:	200890fa 	slli	r4,r4,3
1010d3a0:	882290fa 	slli	r17,r17,3
1010d3a4:	0401ffc4 	movi	r16,2047
1010d3a8:	1906b03a 	or	r3,r3,r4
1010d3ac:	003e4406 	br	1010ccc0 <__subdf3+0x84>
1010d3b0:	2984b03a 	or	r2,r5,r6
1010d3b4:	103e4226 	beq	r2,zero,1010ccc0 <__subdf3+0x84>
1010d3b8:	8989c83a 	sub	r4,r17,r6
1010d3bc:	8911803a 	cmpltu	r8,r17,r4
1010d3c0:	1945c83a 	sub	r2,r3,r5
1010d3c4:	1205c83a 	sub	r2,r2,r8
1010d3c8:	1200202c 	andhi	r8,r2,128
1010d3cc:	403e9a26 	beq	r8,zero,1010ce38 <__subdf3+0x1fc>
1010d3d0:	3463c83a 	sub	r17,r6,r17
1010d3d4:	28c5c83a 	sub	r2,r5,r3
1010d3d8:	344d803a 	cmpltu	r6,r6,r17
1010d3dc:	1187c83a 	sub	r3,r2,r6
1010d3e0:	3825883a 	mov	r18,r7
1010d3e4:	003e3606 	br	1010ccc0 <__subdf3+0x84>
1010d3e8:	0101ffc4 	movi	r4,2047
1010d3ec:	493fc71e 	bne	r9,r4,1010d30c <__subdf3+0x6d0>
1010d3f0:	2807883a 	mov	r3,r5
1010d3f4:	3023883a 	mov	r17,r6
1010d3f8:	4821883a 	mov	r16,r9
1010d3fc:	003e3006 	br	1010ccc0 <__subdf3+0x84>
1010d400:	10003626 	beq	r2,zero,1010d4dc <__subdf3+0x8a0>
1010d404:	2984b03a 	or	r2,r5,r6
1010d408:	10001726 	beq	r2,zero,1010d468 <__subdf3+0x82c>
1010d40c:	1808d0fa 	srli	r4,r3,3
1010d410:	8822d0fa 	srli	r17,r17,3
1010d414:	1806977a 	slli	r3,r3,29
1010d418:	2080022c 	andhi	r2,r4,8
1010d41c:	1c62b03a 	or	r17,r3,r17
1010d420:	10000726 	beq	r2,zero,1010d440 <__subdf3+0x804>
1010d424:	2812d0fa 	srli	r9,r5,3
1010d428:	4880022c 	andhi	r2,r9,8
1010d42c:	1000041e 	bne	r2,zero,1010d440 <__subdf3+0x804>
1010d430:	300cd0fa 	srli	r6,r6,3
1010d434:	2804977a 	slli	r2,r5,29
1010d438:	4809883a 	mov	r4,r9
1010d43c:	11a2b03a 	or	r17,r2,r6
1010d440:	8806d77a 	srli	r3,r17,29
1010d444:	200890fa 	slli	r4,r4,3
1010d448:	882290fa 	slli	r17,r17,3
1010d44c:	3825883a 	mov	r18,r7
1010d450:	1906b03a 	or	r3,r3,r4
1010d454:	0401ffc4 	movi	r16,2047
1010d458:	003e1906 	br	1010ccc0 <__subdf3+0x84>
1010d45c:	000b883a 	mov	r5,zero
1010d460:	0005883a 	mov	r2,zero
1010d464:	003e2e06 	br	1010cd20 <__subdf3+0xe4>
1010d468:	0401ffc4 	movi	r16,2047
1010d46c:	003e1406 	br	1010ccc0 <__subdf3+0x84>
1010d470:	0005883a 	mov	r2,zero
1010d474:	003f7506 	br	1010d24c <__subdf3+0x610>
1010d478:	0005883a 	mov	r2,zero
1010d47c:	0009883a 	mov	r4,zero
1010d480:	003e7806 	br	1010ce64 <__subdf3+0x228>
1010d484:	123ff804 	addi	r8,r2,-32
1010d488:	01000804 	movi	r4,32
1010d48c:	1a10d83a 	srl	r8,r3,r8
1010d490:	11002526 	beq	r2,r4,1010d528 <__subdf3+0x8ec>
1010d494:	01001004 	movi	r4,64
1010d498:	2085c83a 	sub	r2,r4,r2
1010d49c:	1884983a 	sll	r2,r3,r2
1010d4a0:	1444b03a 	or	r2,r2,r17
1010d4a4:	1004c03a 	cmpne	r2,r2,zero
1010d4a8:	40a2b03a 	or	r17,r8,r2
1010d4ac:	0005883a 	mov	r2,zero
1010d4b0:	003f1606 	br	1010d10c <__subdf3+0x4d0>
1010d4b4:	02000434 	movhi	r8,16
1010d4b8:	0009883a 	mov	r4,zero
1010d4bc:	423fffc4 	addi	r8,r8,-1
1010d4c0:	00bfffc4 	movi	r2,-1
1010d4c4:	0401ffc4 	movi	r16,2047
1010d4c8:	003e6606 	br	1010ce64 <__subdf3+0x228>
1010d4cc:	1c62b03a 	or	r17,r3,r17
1010d4d0:	8822c03a 	cmpne	r17,r17,zero
1010d4d4:	0005883a 	mov	r2,zero
1010d4d8:	003f9906 	br	1010d340 <__subdf3+0x704>
1010d4dc:	2807883a 	mov	r3,r5
1010d4e0:	3023883a 	mov	r17,r6
1010d4e4:	0401ffc4 	movi	r16,2047
1010d4e8:	003df506 	br	1010ccc0 <__subdf3+0x84>
1010d4ec:	2807883a 	mov	r3,r5
1010d4f0:	3023883a 	mov	r17,r6
1010d4f4:	003df206 	br	1010ccc0 <__subdf3+0x84>
1010d4f8:	123ff804 	addi	r8,r2,-32
1010d4fc:	01000804 	movi	r4,32
1010d500:	1a10d83a 	srl	r8,r3,r8
1010d504:	11000a26 	beq	r2,r4,1010d530 <__subdf3+0x8f4>
1010d508:	01001004 	movi	r4,64
1010d50c:	2085c83a 	sub	r2,r4,r2
1010d510:	1884983a 	sll	r2,r3,r2
1010d514:	1444b03a 	or	r2,r2,r17
1010d518:	1004c03a 	cmpne	r2,r2,zero
1010d51c:	40a2b03a 	or	r17,r8,r2
1010d520:	0005883a 	mov	r2,zero
1010d524:	003f8606 	br	1010d340 <__subdf3+0x704>
1010d528:	0005883a 	mov	r2,zero
1010d52c:	003fdc06 	br	1010d4a0 <__subdf3+0x864>
1010d530:	0005883a 	mov	r2,zero
1010d534:	003ff706 	br	1010d514 <__subdf3+0x8d8>

1010d538 <__fixdfsi>:
1010d538:	280cd53a 	srli	r6,r5,20
1010d53c:	00c00434 	movhi	r3,16
1010d540:	18ffffc4 	addi	r3,r3,-1
1010d544:	3181ffcc 	andi	r6,r6,2047
1010d548:	01c0ff84 	movi	r7,1022
1010d54c:	28c6703a 	and	r3,r5,r3
1010d550:	280ad7fa 	srli	r5,r5,31
1010d554:	3980120e 	bge	r7,r6,1010d5a0 <__fixdfsi+0x68>
1010d558:	00810744 	movi	r2,1053
1010d55c:	11800c16 	blt	r2,r6,1010d590 <__fixdfsi+0x58>
1010d560:	00810cc4 	movi	r2,1075
1010d564:	1185c83a 	sub	r2,r2,r6
1010d568:	01c007c4 	movi	r7,31
1010d56c:	18c00434 	orhi	r3,r3,16
1010d570:	38800d16 	blt	r7,r2,1010d5a8 <__fixdfsi+0x70>
1010d574:	31befb44 	addi	r6,r6,-1043
1010d578:	2084d83a 	srl	r2,r4,r2
1010d57c:	1986983a 	sll	r3,r3,r6
1010d580:	1884b03a 	or	r2,r3,r2
1010d584:	28000726 	beq	r5,zero,1010d5a4 <__fixdfsi+0x6c>
1010d588:	0085c83a 	sub	r2,zero,r2
1010d58c:	f800283a 	ret
1010d590:	00a00034 	movhi	r2,32768
1010d594:	10bfffc4 	addi	r2,r2,-1
1010d598:	2885883a 	add	r2,r5,r2
1010d59c:	f800283a 	ret
1010d5a0:	0005883a 	mov	r2,zero
1010d5a4:	f800283a 	ret
1010d5a8:	008104c4 	movi	r2,1043
1010d5ac:	1185c83a 	sub	r2,r2,r6
1010d5b0:	1884d83a 	srl	r2,r3,r2
1010d5b4:	003ff306 	br	1010d584 <__fixdfsi+0x4c>

1010d5b8 <__floatsidf>:
1010d5b8:	defffd04 	addi	sp,sp,-12
1010d5bc:	dfc00215 	stw	ra,8(sp)
1010d5c0:	dc400115 	stw	r17,4(sp)
1010d5c4:	dc000015 	stw	r16,0(sp)
1010d5c8:	20002b26 	beq	r4,zero,1010d678 <__floatsidf+0xc0>
1010d5cc:	2023883a 	mov	r17,r4
1010d5d0:	2020d7fa 	srli	r16,r4,31
1010d5d4:	20002d16 	blt	r4,zero,1010d68c <__floatsidf+0xd4>
1010d5d8:	8809883a 	mov	r4,r17
1010d5dc:	010d73c0 	call	1010d73c <__clzsi2>
1010d5e0:	01410784 	movi	r5,1054
1010d5e4:	288bc83a 	sub	r5,r5,r2
1010d5e8:	01010cc4 	movi	r4,1075
1010d5ec:	2149c83a 	sub	r4,r4,r5
1010d5f0:	00c007c4 	movi	r3,31
1010d5f4:	1900160e 	bge	r3,r4,1010d650 <__floatsidf+0x98>
1010d5f8:	00c104c4 	movi	r3,1043
1010d5fc:	1947c83a 	sub	r3,r3,r5
1010d600:	88c6983a 	sll	r3,r17,r3
1010d604:	00800434 	movhi	r2,16
1010d608:	10bfffc4 	addi	r2,r2,-1
1010d60c:	1886703a 	and	r3,r3,r2
1010d610:	2941ffcc 	andi	r5,r5,2047
1010d614:	800d883a 	mov	r6,r16
1010d618:	0005883a 	mov	r2,zero
1010d61c:	280a953a 	slli	r5,r5,20
1010d620:	31803fcc 	andi	r6,r6,255
1010d624:	01000434 	movhi	r4,16
1010d628:	300c97fa 	slli	r6,r6,31
1010d62c:	213fffc4 	addi	r4,r4,-1
1010d630:	1906703a 	and	r3,r3,r4
1010d634:	1946b03a 	or	r3,r3,r5
1010d638:	1986b03a 	or	r3,r3,r6
1010d63c:	dfc00217 	ldw	ra,8(sp)
1010d640:	dc400117 	ldw	r17,4(sp)
1010d644:	dc000017 	ldw	r16,0(sp)
1010d648:	dec00304 	addi	sp,sp,12
1010d64c:	f800283a 	ret
1010d650:	00c002c4 	movi	r3,11
1010d654:	1887c83a 	sub	r3,r3,r2
1010d658:	88c6d83a 	srl	r3,r17,r3
1010d65c:	8904983a 	sll	r2,r17,r4
1010d660:	01000434 	movhi	r4,16
1010d664:	213fffc4 	addi	r4,r4,-1
1010d668:	2941ffcc 	andi	r5,r5,2047
1010d66c:	1906703a 	and	r3,r3,r4
1010d670:	800d883a 	mov	r6,r16
1010d674:	003fe906 	br	1010d61c <__floatsidf+0x64>
1010d678:	000d883a 	mov	r6,zero
1010d67c:	000b883a 	mov	r5,zero
1010d680:	0007883a 	mov	r3,zero
1010d684:	0005883a 	mov	r2,zero
1010d688:	003fe406 	br	1010d61c <__floatsidf+0x64>
1010d68c:	0123c83a 	sub	r17,zero,r4
1010d690:	003fd106 	br	1010d5d8 <__floatsidf+0x20>

1010d694 <__floatunsidf>:
1010d694:	defffe04 	addi	sp,sp,-8
1010d698:	dc000015 	stw	r16,0(sp)
1010d69c:	dfc00115 	stw	ra,4(sp)
1010d6a0:	2021883a 	mov	r16,r4
1010d6a4:	20002226 	beq	r4,zero,1010d730 <__floatunsidf+0x9c>
1010d6a8:	010d73c0 	call	1010d73c <__clzsi2>
1010d6ac:	01010784 	movi	r4,1054
1010d6b0:	2089c83a 	sub	r4,r4,r2
1010d6b4:	01810cc4 	movi	r6,1075
1010d6b8:	310dc83a 	sub	r6,r6,r4
1010d6bc:	00c007c4 	movi	r3,31
1010d6c0:	1980120e 	bge	r3,r6,1010d70c <__floatunsidf+0x78>
1010d6c4:	00c104c4 	movi	r3,1043
1010d6c8:	1907c83a 	sub	r3,r3,r4
1010d6cc:	80ca983a 	sll	r5,r16,r3
1010d6d0:	00800434 	movhi	r2,16
1010d6d4:	10bfffc4 	addi	r2,r2,-1
1010d6d8:	2101ffcc 	andi	r4,r4,2047
1010d6dc:	0021883a 	mov	r16,zero
1010d6e0:	288a703a 	and	r5,r5,r2
1010d6e4:	2008953a 	slli	r4,r4,20
1010d6e8:	00c00434 	movhi	r3,16
1010d6ec:	18ffffc4 	addi	r3,r3,-1
1010d6f0:	28c6703a 	and	r3,r5,r3
1010d6f4:	8005883a 	mov	r2,r16
1010d6f8:	1906b03a 	or	r3,r3,r4
1010d6fc:	dfc00117 	ldw	ra,4(sp)
1010d700:	dc000017 	ldw	r16,0(sp)
1010d704:	dec00204 	addi	sp,sp,8
1010d708:	f800283a 	ret
1010d70c:	00c002c4 	movi	r3,11
1010d710:	188bc83a 	sub	r5,r3,r2
1010d714:	814ad83a 	srl	r5,r16,r5
1010d718:	00c00434 	movhi	r3,16
1010d71c:	18ffffc4 	addi	r3,r3,-1
1010d720:	81a0983a 	sll	r16,r16,r6
1010d724:	2101ffcc 	andi	r4,r4,2047
1010d728:	28ca703a 	and	r5,r5,r3
1010d72c:	003fed06 	br	1010d6e4 <__floatunsidf+0x50>
1010d730:	0009883a 	mov	r4,zero
1010d734:	000b883a 	mov	r5,zero
1010d738:	003fea06 	br	1010d6e4 <__floatunsidf+0x50>

1010d73c <__clzsi2>:
1010d73c:	00bfffd4 	movui	r2,65535
1010d740:	11000536 	bltu	r2,r4,1010d758 <__clzsi2+0x1c>
1010d744:	00803fc4 	movi	r2,255
1010d748:	11000f36 	bltu	r2,r4,1010d788 <__clzsi2+0x4c>
1010d74c:	00800804 	movi	r2,32
1010d750:	0007883a 	mov	r3,zero
1010d754:	00000506 	br	1010d76c <__clzsi2+0x30>
1010d758:	00804034 	movhi	r2,256
1010d75c:	10bfffc4 	addi	r2,r2,-1
1010d760:	11000c2e 	bgeu	r2,r4,1010d794 <__clzsi2+0x58>
1010d764:	00800204 	movi	r2,8
1010d768:	00c00604 	movi	r3,24
1010d76c:	20c8d83a 	srl	r4,r4,r3
1010d770:	00c40474 	movhi	r3,4113
1010d774:	18c02004 	addi	r3,r3,128
1010d778:	1909883a 	add	r4,r3,r4
1010d77c:	20c00003 	ldbu	r3,0(r4)
1010d780:	10c5c83a 	sub	r2,r2,r3
1010d784:	f800283a 	ret
1010d788:	00800604 	movi	r2,24
1010d78c:	00c00204 	movi	r3,8
1010d790:	003ff606 	br	1010d76c <__clzsi2+0x30>
1010d794:	00800404 	movi	r2,16
1010d798:	1007883a 	mov	r3,r2
1010d79c:	003ff306 	br	1010d76c <__clzsi2+0x30>

1010d7a0 <alt_get_errno>:
#undef errno

extern int errno;

static ALT_INLINE int* alt_get_errno(void)
{
1010d7a0:	defffe04 	addi	sp,sp,-8
1010d7a4:	dfc00115 	stw	ra,4(sp)
1010d7a8:	df000015 	stw	fp,0(sp)
1010d7ac:	d839883a 	mov	fp,sp
  return ((alt_errno) ? alt_errno() : &errno);
1010d7b0:	d0a00b17 	ldw	r2,-32724(gp)
1010d7b4:	10000326 	beq	r2,zero,1010d7c4 <alt_get_errno+0x24>
1010d7b8:	d0a00b17 	ldw	r2,-32724(gp)
1010d7bc:	103ee83a 	callr	r2
1010d7c0:	00000106 	br	1010d7c8 <alt_get_errno+0x28>
1010d7c4:	d0a6cc04 	addi	r2,gp,-25808
}
1010d7c8:	e037883a 	mov	sp,fp
1010d7cc:	dfc00117 	ldw	ra,4(sp)
1010d7d0:	df000017 	ldw	fp,0(sp)
1010d7d4:	dec00204 	addi	sp,sp,8
1010d7d8:	f800283a 	ret

1010d7dc <close>:
 *
 * ALT_CLOSE is mapped onto the close() system call in alt_syscall.h
 */
 
int ALT_CLOSE (int fildes)
{
1010d7dc:	defffb04 	addi	sp,sp,-20
1010d7e0:	dfc00415 	stw	ra,16(sp)
1010d7e4:	df000315 	stw	fp,12(sp)
1010d7e8:	df000304 	addi	fp,sp,12
1010d7ec:	e13fff15 	stw	r4,-4(fp)
   * A common error case is that when the file descriptor was created, the call
   * to open() failed resulting in a negative file descriptor. This is trapped
   * below so that we don't try and process an invalid file descriptor.
   */

  fd = (fildes < 0) ? NULL : &alt_fd_list[fildes];
1010d7f0:	e0bfff17 	ldw	r2,-4(fp)
1010d7f4:	10000616 	blt	r2,zero,1010d810 <close+0x34>
1010d7f8:	e0bfff17 	ldw	r2,-4(fp)
1010d7fc:	10c00324 	muli	r3,r2,12
1010d800:	00840474 	movhi	r2,4113
1010d804:	1082a004 	addi	r2,r2,2688
1010d808:	1885883a 	add	r2,r3,r2
1010d80c:	00000106 	br	1010d814 <close+0x38>
1010d810:	0005883a 	mov	r2,zero
1010d814:	e0bffd15 	stw	r2,-12(fp)

  if (fd)
1010d818:	e0bffd17 	ldw	r2,-12(fp)
1010d81c:	10001926 	beq	r2,zero,1010d884 <close+0xa8>
    /*
     * If the associated file system/device has a close function, call it so 
     * that any necessary cleanup code can run.
     */

    rval = (fd->dev->close) ? fd->dev->close(fd) : 0;
1010d820:	e0bffd17 	ldw	r2,-12(fp)
1010d824:	10800017 	ldw	r2,0(r2)
1010d828:	10800417 	ldw	r2,16(r2)
1010d82c:	10000626 	beq	r2,zero,1010d848 <close+0x6c>
1010d830:	e0bffd17 	ldw	r2,-12(fp)
1010d834:	10800017 	ldw	r2,0(r2)
1010d838:	10800417 	ldw	r2,16(r2)
1010d83c:	e13ffd17 	ldw	r4,-12(fp)
1010d840:	103ee83a 	callr	r2
1010d844:	00000106 	br	1010d84c <close+0x70>
1010d848:	0005883a 	mov	r2,zero
1010d84c:	e0bffe15 	stw	r2,-8(fp)

    /* Free the file descriptor structure and return. */

    alt_release_fd (fildes);
1010d850:	e13fff17 	ldw	r4,-4(fp)
1010d854:	010e3900 	call	1010e390 <alt_release_fd>
    if (rval < 0)
1010d858:	e0bffe17 	ldw	r2,-8(fp)
1010d85c:	1000070e 	bge	r2,zero,1010d87c <close+0xa0>
    {
      ALT_ERRNO = -rval;
1010d860:	010d7a00 	call	1010d7a0 <alt_get_errno>
1010d864:	1007883a 	mov	r3,r2
1010d868:	e0bffe17 	ldw	r2,-8(fp)
1010d86c:	0085c83a 	sub	r2,zero,r2
1010d870:	18800015 	stw	r2,0(r3)
      return -1;
1010d874:	00bfffc4 	movi	r2,-1
1010d878:	00000706 	br	1010d898 <close+0xbc>
    }
    return 0;
1010d87c:	0005883a 	mov	r2,zero
1010d880:	00000506 	br	1010d898 <close+0xbc>
  }
  else
  {
    ALT_ERRNO = EBADFD;
1010d884:	010d7a00 	call	1010d7a0 <alt_get_errno>
1010d888:	1007883a 	mov	r3,r2
1010d88c:	00801444 	movi	r2,81
1010d890:	18800015 	stw	r2,0(r3)
    return -1;
1010d894:	00bfffc4 	movi	r2,-1
  }
}
1010d898:	e037883a 	mov	sp,fp
1010d89c:	dfc00117 	ldw	ra,4(sp)
1010d8a0:	df000017 	ldw	fp,0(sp)
1010d8a4:	dec00204 	addi	sp,sp,8
1010d8a8:	f800283a 	ret

1010d8ac <alt_dev_null_write>:
 * by the alt_dev_null device. It simple discards all data passed to it, and
 * indicates that the data has been successfully transmitted.
 */

static int alt_dev_null_write (alt_fd* fd, const char* ptr, int len)
{
1010d8ac:	defffc04 	addi	sp,sp,-16
1010d8b0:	df000315 	stw	fp,12(sp)
1010d8b4:	df000304 	addi	fp,sp,12
1010d8b8:	e13ffd15 	stw	r4,-12(fp)
1010d8bc:	e17ffe15 	stw	r5,-8(fp)
1010d8c0:	e1bfff15 	stw	r6,-4(fp)
  return len;
1010d8c4:	e0bfff17 	ldw	r2,-4(fp)
}
1010d8c8:	e037883a 	mov	sp,fp
1010d8cc:	df000017 	ldw	fp,0(sp)
1010d8d0:	dec00104 	addi	sp,sp,4
1010d8d4:	f800283a 	ret

1010d8d8 <alt_get_errno>:
#undef errno

extern int errno;

static ALT_INLINE int* alt_get_errno(void)
{
1010d8d8:	defffe04 	addi	sp,sp,-8
1010d8dc:	dfc00115 	stw	ra,4(sp)
1010d8e0:	df000015 	stw	fp,0(sp)
1010d8e4:	d839883a 	mov	fp,sp
  return ((alt_errno) ? alt_errno() : &errno);
1010d8e8:	d0a00b17 	ldw	r2,-32724(gp)
1010d8ec:	10000326 	beq	r2,zero,1010d8fc <alt_get_errno+0x24>
1010d8f0:	d0a00b17 	ldw	r2,-32724(gp)
1010d8f4:	103ee83a 	callr	r2
1010d8f8:	00000106 	br	1010d900 <alt_get_errno+0x28>
1010d8fc:	d0a6cc04 	addi	r2,gp,-25808
}
1010d900:	e037883a 	mov	sp,fp
1010d904:	dfc00117 	ldw	ra,4(sp)
1010d908:	df000017 	ldw	fp,0(sp)
1010d90c:	dec00204 	addi	sp,sp,8
1010d910:	f800283a 	ret

1010d914 <fstat>:
}

#else /* !ALT_USE_DIRECT_DRIVERS */

int ALT_FSTAT (int file, struct stat *st)
{
1010d914:	defffb04 	addi	sp,sp,-20
1010d918:	dfc00415 	stw	ra,16(sp)
1010d91c:	df000315 	stw	fp,12(sp)
1010d920:	df000304 	addi	fp,sp,12
1010d924:	e13ffe15 	stw	r4,-8(fp)
1010d928:	e17fff15 	stw	r5,-4(fp)
   * A common error case is that when the file descriptor was created, the call
   * to open() failed resulting in a negative file descriptor. This is trapped
   * below so that we don't try and process an invalid file descriptor.
   */

  fd = (file < 0) ? NULL : &alt_fd_list[file];
1010d92c:	e0bffe17 	ldw	r2,-8(fp)
1010d930:	10000616 	blt	r2,zero,1010d94c <fstat+0x38>
1010d934:	e0bffe17 	ldw	r2,-8(fp)
1010d938:	10c00324 	muli	r3,r2,12
1010d93c:	00840474 	movhi	r2,4113
1010d940:	1082a004 	addi	r2,r2,2688
1010d944:	1885883a 	add	r2,r3,r2
1010d948:	00000106 	br	1010d950 <fstat+0x3c>
1010d94c:	0005883a 	mov	r2,zero
1010d950:	e0bffd15 	stw	r2,-12(fp)
  
  if (fd)
1010d954:	e0bffd17 	ldw	r2,-12(fp)
1010d958:	10001026 	beq	r2,zero,1010d99c <fstat+0x88>
  {
    /* Call the drivers fstat() function to fill out the "st" structure. */

    if (fd->dev->fstat)
1010d95c:	e0bffd17 	ldw	r2,-12(fp)
1010d960:	10800017 	ldw	r2,0(r2)
1010d964:	10800817 	ldw	r2,32(r2)
1010d968:	10000726 	beq	r2,zero,1010d988 <fstat+0x74>
    {
      return fd->dev->fstat(fd, st);
1010d96c:	e0bffd17 	ldw	r2,-12(fp)
1010d970:	10800017 	ldw	r2,0(r2)
1010d974:	10800817 	ldw	r2,32(r2)
1010d978:	e17fff17 	ldw	r5,-4(fp)
1010d97c:	e13ffd17 	ldw	r4,-12(fp)
1010d980:	103ee83a 	callr	r2
1010d984:	00000a06 	br	1010d9b0 <fstat+0x9c>
     * device.
     */
 
    else
    {
      st->st_mode = _IFCHR;
1010d988:	e0bfff17 	ldw	r2,-4(fp)
1010d98c:	00c80004 	movi	r3,8192
1010d990:	10c00115 	stw	r3,4(r2)
      return 0;
1010d994:	0005883a 	mov	r2,zero
1010d998:	00000506 	br	1010d9b0 <fstat+0x9c>
    }
  }
  else
  {
    ALT_ERRNO = EBADFD;
1010d99c:	010d8d80 	call	1010d8d8 <alt_get_errno>
1010d9a0:	1007883a 	mov	r3,r2
1010d9a4:	00801444 	movi	r2,81
1010d9a8:	18800015 	stw	r2,0(r3)
    return -1;
1010d9ac:	00bfffc4 	movi	r2,-1
  }
}
1010d9b0:	e037883a 	mov	sp,fp
1010d9b4:	dfc00117 	ldw	ra,4(sp)
1010d9b8:	df000017 	ldw	fp,0(sp)
1010d9bc:	dec00204 	addi	sp,sp,8
1010d9c0:	f800283a 	ret

1010d9c4 <alt_ic_isr_register>:
  * @param irq              IRQ number
  * @return                 0 if successful, else error (-1)
  */
int alt_ic_isr_register(alt_u32 ic_id, alt_u32 irq, alt_isr_func isr, 
  void *isr_context, void *flags)
{
1010d9c4:	defff904 	addi	sp,sp,-28
1010d9c8:	dfc00615 	stw	ra,24(sp)
1010d9cc:	df000515 	stw	fp,20(sp)
1010d9d0:	df000504 	addi	fp,sp,20
1010d9d4:	e13ffc15 	stw	r4,-16(fp)
1010d9d8:	e17ffd15 	stw	r5,-12(fp)
1010d9dc:	e1bffe15 	stw	r6,-8(fp)
1010d9e0:	e1ffff15 	stw	r7,-4(fp)
    return alt_iic_isr_register(ic_id, irq, isr, isr_context, flags);
1010d9e4:	e0800217 	ldw	r2,8(fp)
1010d9e8:	d8800015 	stw	r2,0(sp)
1010d9ec:	e1ffff17 	ldw	r7,-4(fp)
1010d9f0:	e1bffe17 	ldw	r6,-8(fp)
1010d9f4:	e17ffd17 	ldw	r5,-12(fp)
1010d9f8:	e13ffc17 	ldw	r4,-16(fp)
1010d9fc:	010db740 	call	1010db74 <alt_iic_isr_register>
}  
1010da00:	e037883a 	mov	sp,fp
1010da04:	dfc00117 	ldw	ra,4(sp)
1010da08:	df000017 	ldw	fp,0(sp)
1010da0c:	dec00204 	addi	sp,sp,8
1010da10:	f800283a 	ret

1010da14 <alt_ic_irq_enable>:
  * @param ic_id            Ignored.
  * @param irq              IRQ number
  * @return                 0 if successful, else error (-1)
  */
int alt_ic_irq_enable (alt_u32 ic_id, alt_u32 irq)
{
1010da14:	defff904 	addi	sp,sp,-28
1010da18:	df000615 	stw	fp,24(sp)
1010da1c:	df000604 	addi	fp,sp,24
1010da20:	e13ffe15 	stw	r4,-8(fp)
1010da24:	e17fff15 	stw	r5,-4(fp)
1010da28:	e0bfff17 	ldw	r2,-4(fp)
1010da2c:	e0bffa15 	stw	r2,-24(fp)
static ALT_INLINE alt_irq_context ALT_ALWAYS_INLINE 
       alt_irq_disable_all (void)
{
  alt_irq_context context;

  NIOS2_READ_STATUS (context);
1010da30:	0005303a 	rdctl	r2,status
1010da34:	e0bffb15 	stw	r2,-20(fp)

  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
1010da38:	e0fffb17 	ldw	r3,-20(fp)
1010da3c:	00bfff84 	movi	r2,-2
1010da40:	1884703a 	and	r2,r3,r2
1010da44:	1001703a 	wrctl	status,r2
  
  return context;
1010da48:	e0bffb17 	ldw	r2,-20(fp)
static ALT_INLINE int ALT_ALWAYS_INLINE alt_irq_enable (alt_u32 id)
{
  alt_irq_context  status;
  extern volatile alt_u32 alt_irq_active;

  status = alt_irq_disable_all ();
1010da4c:	e0bffc15 	stw	r2,-16(fp)

  alt_irq_active |= (1 << id);
1010da50:	00c00044 	movi	r3,1
1010da54:	e0bffa17 	ldw	r2,-24(fp)
1010da58:	1884983a 	sll	r2,r3,r2
1010da5c:	1007883a 	mov	r3,r2
1010da60:	d0a6d317 	ldw	r2,-25780(gp)
1010da64:	1884b03a 	or	r2,r3,r2
1010da68:	d0a6d315 	stw	r2,-25780(gp)
  NIOS2_WRITE_IENABLE (alt_irq_active);
1010da6c:	d0a6d317 	ldw	r2,-25780(gp)
1010da70:	100170fa 	wrctl	ienable,r2
1010da74:	e0bffc17 	ldw	r2,-16(fp)
1010da78:	e0bffd15 	stw	r2,-12(fp)
  status &= ~NIOS2_STATUS_PIE_MSK;
  status |= (context & NIOS2_STATUS_PIE_MSK);
  
  NIOS2_WRITE_STATUS (status);
#else
  NIOS2_WRITE_STATUS (context);
1010da7c:	e0bffd17 	ldw	r2,-12(fp)
1010da80:	1001703a 	wrctl	status,r2

  alt_irq_enable_all(status);

  return 0;
1010da84:	0005883a 	mov	r2,zero
    return alt_irq_enable(irq);
1010da88:	0001883a 	nop
}
1010da8c:	e037883a 	mov	sp,fp
1010da90:	df000017 	ldw	fp,0(sp)
1010da94:	dec00104 	addi	sp,sp,4
1010da98:	f800283a 	ret

1010da9c <alt_ic_irq_disable>:
  * @param ic_id            Ignored.
  * @param irq              IRQ number
  * @return                 0 if successful, else error (-1)
  */
int alt_ic_irq_disable(alt_u32 ic_id, alt_u32 irq)
{
1010da9c:	defff904 	addi	sp,sp,-28
1010daa0:	df000615 	stw	fp,24(sp)
1010daa4:	df000604 	addi	fp,sp,24
1010daa8:	e13ffe15 	stw	r4,-8(fp)
1010daac:	e17fff15 	stw	r5,-4(fp)
1010dab0:	e0bfff17 	ldw	r2,-4(fp)
1010dab4:	e0bffa15 	stw	r2,-24(fp)
static ALT_INLINE alt_irq_context ALT_ALWAYS_INLINE 
       alt_irq_disable_all (void)
{
  alt_irq_context context;

  NIOS2_READ_STATUS (context);
1010dab8:	0005303a 	rdctl	r2,status
1010dabc:	e0bffb15 	stw	r2,-20(fp)

  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
1010dac0:	e0fffb17 	ldw	r3,-20(fp)
1010dac4:	00bfff84 	movi	r2,-2
1010dac8:	1884703a 	and	r2,r3,r2
1010dacc:	1001703a 	wrctl	status,r2
  
  return context;
1010dad0:	e0bffb17 	ldw	r2,-20(fp)
static ALT_INLINE int ALT_ALWAYS_INLINE alt_irq_disable (alt_u32 id)
{
  alt_irq_context  status;
  extern volatile alt_u32 alt_irq_active;

  status = alt_irq_disable_all ();
1010dad4:	e0bffc15 	stw	r2,-16(fp)

  alt_irq_active &= ~(1 << id);
1010dad8:	00c00044 	movi	r3,1
1010dadc:	e0bffa17 	ldw	r2,-24(fp)
1010dae0:	1884983a 	sll	r2,r3,r2
1010dae4:	0084303a 	nor	r2,zero,r2
1010dae8:	1007883a 	mov	r3,r2
1010daec:	d0a6d317 	ldw	r2,-25780(gp)
1010daf0:	1884703a 	and	r2,r3,r2
1010daf4:	d0a6d315 	stw	r2,-25780(gp)
  NIOS2_WRITE_IENABLE (alt_irq_active);
1010daf8:	d0a6d317 	ldw	r2,-25780(gp)
1010dafc:	100170fa 	wrctl	ienable,r2
1010db00:	e0bffc17 	ldw	r2,-16(fp)
1010db04:	e0bffd15 	stw	r2,-12(fp)
  status &= ~NIOS2_STATUS_PIE_MSK;
  status |= (context & NIOS2_STATUS_PIE_MSK);
  
  NIOS2_WRITE_STATUS (status);
#else
  NIOS2_WRITE_STATUS (context);
1010db08:	e0bffd17 	ldw	r2,-12(fp)
1010db0c:	1001703a 	wrctl	status,r2

  alt_irq_enable_all(status);

  return 0;
1010db10:	0005883a 	mov	r2,zero
    return alt_irq_disable(irq);
1010db14:	0001883a 	nop
}
1010db18:	e037883a 	mov	sp,fp
1010db1c:	df000017 	ldw	fp,0(sp)
1010db20:	dec00104 	addi	sp,sp,4
1010db24:	f800283a 	ret

1010db28 <alt_ic_irq_enabled>:
  * @param irq              IRQ number
  * @return                 Zero if corresponding interrupt is disabled and
  *                         non-zero otherwise.
  */
alt_u32 alt_ic_irq_enabled(alt_u32 ic_id, alt_u32 irq)
{
1010db28:	defffc04 	addi	sp,sp,-16
1010db2c:	df000315 	stw	fp,12(sp)
1010db30:	df000304 	addi	fp,sp,12
1010db34:	e13ffe15 	stw	r4,-8(fp)
1010db38:	e17fff15 	stw	r5,-4(fp)
    alt_u32 irq_enabled;

    NIOS2_READ_IENABLE(irq_enabled);
1010db3c:	000530fa 	rdctl	r2,ienable
1010db40:	e0bffd15 	stw	r2,-12(fp)

    return (irq_enabled & (1 << irq)) ? 1: 0;
1010db44:	00c00044 	movi	r3,1
1010db48:	e0bfff17 	ldw	r2,-4(fp)
1010db4c:	1884983a 	sll	r2,r3,r2
1010db50:	1007883a 	mov	r3,r2
1010db54:	e0bffd17 	ldw	r2,-12(fp)
1010db58:	1884703a 	and	r2,r3,r2
1010db5c:	1004c03a 	cmpne	r2,r2,zero
1010db60:	10803fcc 	andi	r2,r2,255
}
1010db64:	e037883a 	mov	sp,fp
1010db68:	df000017 	ldw	fp,0(sp)
1010db6c:	dec00104 	addi	sp,sp,4
1010db70:	f800283a 	ret

1010db74 <alt_iic_isr_register>:
  * @param flags            
  * @return                 0 if successful, else error (-1)
  */
int alt_iic_isr_register(alt_u32 ic_id, alt_u32 irq, alt_isr_func isr, 
  void *isr_context, void *flags)
{
1010db74:	defff504 	addi	sp,sp,-44
1010db78:	dfc00a15 	stw	ra,40(sp)
1010db7c:	df000915 	stw	fp,36(sp)
1010db80:	df000904 	addi	fp,sp,36
1010db84:	e13ffc15 	stw	r4,-16(fp)
1010db88:	e17ffd15 	stw	r5,-12(fp)
1010db8c:	e1bffe15 	stw	r6,-8(fp)
1010db90:	e1ffff15 	stw	r7,-4(fp)
  int rc = -EINVAL;  
1010db94:	00bffa84 	movi	r2,-22
1010db98:	e0bff715 	stw	r2,-36(fp)
  int id = irq;             /* IRQ interpreted as the interrupt ID. */
1010db9c:	e0bffd17 	ldw	r2,-12(fp)
1010dba0:	e0bff815 	stw	r2,-32(fp)
  alt_irq_context status;

  if (id < ALT_NIRQ)
1010dba4:	e0bff817 	ldw	r2,-32(fp)
1010dba8:	10800808 	cmpgei	r2,r2,32
1010dbac:	1000271e 	bne	r2,zero,1010dc4c <alt_iic_isr_register+0xd8>
static ALT_INLINE alt_irq_context ALT_ALWAYS_INLINE 
       alt_irq_disable_all (void)
{
  alt_irq_context context;

  NIOS2_READ_STATUS (context);
1010dbb0:	0005303a 	rdctl	r2,status
1010dbb4:	e0bffb15 	stw	r2,-20(fp)

  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
1010dbb8:	e0fffb17 	ldw	r3,-20(fp)
1010dbbc:	00bfff84 	movi	r2,-2
1010dbc0:	1884703a 	and	r2,r3,r2
1010dbc4:	1001703a 	wrctl	status,r2
  
  return context;
1010dbc8:	e0bffb17 	ldw	r2,-20(fp)
     * interrupts are disabled while the handler tables are updated to ensure
     * that an interrupt doesn't occur while the tables are in an inconsistant
     * state.
     */

    status = alt_irq_disable_all();
1010dbcc:	e0bffa15 	stw	r2,-24(fp)

    alt_irq[id].handler = isr;
1010dbd0:	00840474 	movhi	r2,4113
1010dbd4:	108dfc04 	addi	r2,r2,14320
1010dbd8:	e0fff817 	ldw	r3,-32(fp)
1010dbdc:	180690fa 	slli	r3,r3,3
1010dbe0:	10c5883a 	add	r2,r2,r3
1010dbe4:	e0fffe17 	ldw	r3,-8(fp)
1010dbe8:	10c00015 	stw	r3,0(r2)
    alt_irq[id].context = isr_context;
1010dbec:	00840474 	movhi	r2,4113
1010dbf0:	108dfc04 	addi	r2,r2,14320
1010dbf4:	e0fff817 	ldw	r3,-32(fp)
1010dbf8:	180690fa 	slli	r3,r3,3
1010dbfc:	10c5883a 	add	r2,r2,r3
1010dc00:	10800104 	addi	r2,r2,4
1010dc04:	e0ffff17 	ldw	r3,-4(fp)
1010dc08:	10c00015 	stw	r3,0(r2)

    rc = (isr) ? alt_ic_irq_enable(ic_id, id) : alt_ic_irq_disable(ic_id, id);
1010dc0c:	e0bffe17 	ldw	r2,-8(fp)
1010dc10:	10000526 	beq	r2,zero,1010dc28 <alt_iic_isr_register+0xb4>
1010dc14:	e0bff817 	ldw	r2,-32(fp)
1010dc18:	100b883a 	mov	r5,r2
1010dc1c:	e13ffc17 	ldw	r4,-16(fp)
1010dc20:	010da140 	call	1010da14 <alt_ic_irq_enable>
1010dc24:	00000406 	br	1010dc38 <alt_iic_isr_register+0xc4>
1010dc28:	e0bff817 	ldw	r2,-32(fp)
1010dc2c:	100b883a 	mov	r5,r2
1010dc30:	e13ffc17 	ldw	r4,-16(fp)
1010dc34:	010da9c0 	call	1010da9c <alt_ic_irq_disable>
1010dc38:	e0bff715 	stw	r2,-36(fp)
1010dc3c:	e0bffa17 	ldw	r2,-24(fp)
1010dc40:	e0bff915 	stw	r2,-28(fp)
  status &= ~NIOS2_STATUS_PIE_MSK;
  status |= (context & NIOS2_STATUS_PIE_MSK);
  
  NIOS2_WRITE_STATUS (status);
#else
  NIOS2_WRITE_STATUS (context);
1010dc44:	e0bff917 	ldw	r2,-28(fp)
1010dc48:	1001703a 	wrctl	status,r2

    alt_irq_enable_all(status);
  }

  return rc; 
1010dc4c:	e0bff717 	ldw	r2,-36(fp)
}
1010dc50:	e037883a 	mov	sp,fp
1010dc54:	dfc00117 	ldw	ra,4(sp)
1010dc58:	df000017 	ldw	fp,0(sp)
1010dc5c:	dec00204 	addi	sp,sp,8
1010dc60:	f800283a 	ret

1010dc64 <alt_get_errno>:
#undef errno

extern int errno;

static ALT_INLINE int* alt_get_errno(void)
{
1010dc64:	defffe04 	addi	sp,sp,-8
1010dc68:	dfc00115 	stw	ra,4(sp)
1010dc6c:	df000015 	stw	fp,0(sp)
1010dc70:	d839883a 	mov	fp,sp
  return ((alt_errno) ? alt_errno() : &errno);
1010dc74:	d0a00b17 	ldw	r2,-32724(gp)
1010dc78:	10000326 	beq	r2,zero,1010dc88 <alt_get_errno+0x24>
1010dc7c:	d0a00b17 	ldw	r2,-32724(gp)
1010dc80:	103ee83a 	callr	r2
1010dc84:	00000106 	br	1010dc8c <alt_get_errno+0x28>
1010dc88:	d0a6cc04 	addi	r2,gp,-25808
}
1010dc8c:	e037883a 	mov	sp,fp
1010dc90:	dfc00117 	ldw	ra,4(sp)
1010dc94:	df000017 	ldw	fp,0(sp)
1010dc98:	dec00204 	addi	sp,sp,8
1010dc9c:	f800283a 	ret

1010dca0 <isatty>:
 *
 * ALT_ISATTY is mapped onto the isatty() system call in alt_syscall.h
 */
 
int ALT_ISATTY (int file)
{
1010dca0:	deffed04 	addi	sp,sp,-76
1010dca4:	dfc01215 	stw	ra,72(sp)
1010dca8:	df001115 	stw	fp,68(sp)
1010dcac:	df001104 	addi	fp,sp,68
1010dcb0:	e13fff15 	stw	r4,-4(fp)
   * A common error case is that when the file descriptor was created, the call
   * to open() failed resulting in a negative file descriptor. This is trapped
   * below so that we don't try and process an invalid file descriptor.
   */

  fd = (file < 0) ? NULL : &alt_fd_list[file];
1010dcb4:	e0bfff17 	ldw	r2,-4(fp)
1010dcb8:	10000616 	blt	r2,zero,1010dcd4 <isatty+0x34>
1010dcbc:	e0bfff17 	ldw	r2,-4(fp)
1010dcc0:	10c00324 	muli	r3,r2,12
1010dcc4:	00840474 	movhi	r2,4113
1010dcc8:	1082a004 	addi	r2,r2,2688
1010dccc:	1885883a 	add	r2,r3,r2
1010dcd0:	00000106 	br	1010dcd8 <isatty+0x38>
1010dcd4:	0005883a 	mov	r2,zero
1010dcd8:	e0bfef15 	stw	r2,-68(fp)
  
  if (fd)
1010dcdc:	e0bfef17 	ldw	r2,-68(fp)
1010dce0:	10000e26 	beq	r2,zero,1010dd1c <isatty+0x7c>
    /*
     * If a device driver does not provide an fstat() function, then it is 
     * treated as a terminal device by default.
     */

    if (!fd->dev->fstat)
1010dce4:	e0bfef17 	ldw	r2,-68(fp)
1010dce8:	10800017 	ldw	r2,0(r2)
1010dcec:	10800817 	ldw	r2,32(r2)
1010dcf0:	1000021e 	bne	r2,zero,1010dcfc <isatty+0x5c>
    {
      return 1;
1010dcf4:	00800044 	movi	r2,1
1010dcf8:	00000d06 	br	1010dd30 <isatty+0x90>
     * this is called so that the device can identify itself.
     */ 

    else
    {
      fstat (file, &stat);
1010dcfc:	e0bff004 	addi	r2,fp,-64
1010dd00:	100b883a 	mov	r5,r2
1010dd04:	e13fff17 	ldw	r4,-4(fp)
1010dd08:	010d9140 	call	1010d914 <fstat>
      return (stat.st_mode == _IFCHR) ? 1 : 0;
1010dd0c:	e0bff117 	ldw	r2,-60(fp)
1010dd10:	10880020 	cmpeqi	r2,r2,8192
1010dd14:	10803fcc 	andi	r2,r2,255
1010dd18:	00000506 	br	1010dd30 <isatty+0x90>
    }
  }
  else
  {
    ALT_ERRNO = EBADFD;
1010dd1c:	010dc640 	call	1010dc64 <alt_get_errno>
1010dd20:	1007883a 	mov	r3,r2
1010dd24:	00801444 	movi	r2,81
1010dd28:	18800015 	stw	r2,0(r3)
    return 0;
1010dd2c:	0005883a 	mov	r2,zero
  }
}
1010dd30:	e037883a 	mov	sp,fp
1010dd34:	dfc00117 	ldw	ra,4(sp)
1010dd38:	df000017 	ldw	fp,0(sp)
1010dd3c:	dec00204 	addi	sp,sp,8
1010dd40:	f800283a 	ret

1010dd44 <alt_load_section>:
 */

static void ALT_INLINE alt_load_section (alt_u32* from, 
                                         alt_u32* to, 
                                         alt_u32* end)
{
1010dd44:	defffc04 	addi	sp,sp,-16
1010dd48:	df000315 	stw	fp,12(sp)
1010dd4c:	df000304 	addi	fp,sp,12
1010dd50:	e13ffd15 	stw	r4,-12(fp)
1010dd54:	e17ffe15 	stw	r5,-8(fp)
1010dd58:	e1bfff15 	stw	r6,-4(fp)
  if (to != from)
1010dd5c:	e0fffe17 	ldw	r3,-8(fp)
1010dd60:	e0bffd17 	ldw	r2,-12(fp)
1010dd64:	18800c26 	beq	r3,r2,1010dd98 <alt_load_section+0x54>
  {
    while( to != end )
1010dd68:	00000806 	br	1010dd8c <alt_load_section+0x48>
    {
      *to++ = *from++;
1010dd6c:	e0bffe17 	ldw	r2,-8(fp)
1010dd70:	10c00104 	addi	r3,r2,4
1010dd74:	e0fffe15 	stw	r3,-8(fp)
1010dd78:	e0fffd17 	ldw	r3,-12(fp)
1010dd7c:	19000104 	addi	r4,r3,4
1010dd80:	e13ffd15 	stw	r4,-12(fp)
1010dd84:	18c00017 	ldw	r3,0(r3)
1010dd88:	10c00015 	stw	r3,0(r2)
                                         alt_u32* to, 
                                         alt_u32* end)
{
  if (to != from)
  {
    while( to != end )
1010dd8c:	e0fffe17 	ldw	r3,-8(fp)
1010dd90:	e0bfff17 	ldw	r2,-4(fp)
1010dd94:	18bff51e 	bne	r3,r2,1010dd6c <alt_load_section+0x28>
    {
      *to++ = *from++;
    }
  }
}
1010dd98:	0001883a 	nop
1010dd9c:	e037883a 	mov	sp,fp
1010dda0:	df000017 	ldw	fp,0(sp)
1010dda4:	dec00104 	addi	sp,sp,4
1010dda8:	f800283a 	ret

1010ddac <alt_load>:
 * there is no bootloader, so this application is responsible for loading to
 * RAM any sections that are required.
 */  

void alt_load (void)
{
1010ddac:	defffe04 	addi	sp,sp,-8
1010ddb0:	dfc00115 	stw	ra,4(sp)
1010ddb4:	df000015 	stw	fp,0(sp)
1010ddb8:	d839883a 	mov	fp,sp
  /* 
   * Copy the .rwdata section. 
   */

  alt_load_section (&__flash_rwdata_start, 
1010ddbc:	01840474 	movhi	r6,4113
1010ddc0:	31872804 	addi	r6,r6,7328
1010ddc4:	01440474 	movhi	r5,4113
1010ddc8:	29406d04 	addi	r5,r5,436
1010ddcc:	01040474 	movhi	r4,4113
1010ddd0:	21072804 	addi	r4,r4,7328
1010ddd4:	010dd440 	call	1010dd44 <alt_load_section>

  /*
   * Copy the exception handler.
   */

  alt_load_section (&__flash_exceptions_start, 
1010ddd8:	01840434 	movhi	r6,4112
1010dddc:	31809104 	addi	r6,r6,580
1010dde0:	01440434 	movhi	r5,4112
1010dde4:	29400804 	addi	r5,r5,32
1010dde8:	01040434 	movhi	r4,4112
1010ddec:	21000804 	addi	r4,r4,32
1010ddf0:	010dd440 	call	1010dd44 <alt_load_section>

  /*
   * Copy the .rodata section.
   */

  alt_load_section (&__flash_rodata_start, 
1010ddf4:	01840474 	movhi	r6,4113
1010ddf8:	31806d04 	addi	r6,r6,436
1010ddfc:	01440474 	movhi	r5,4113
1010de00:	297f9004 	addi	r5,r5,-448
1010de04:	01040474 	movhi	r4,4113
1010de08:	213f9004 	addi	r4,r4,-448
1010de0c:	010dd440 	call	1010dd44 <alt_load_section>
  
  /*
   * Now ensure that the caches are in synch.
   */
  
  alt_dcache_flush_all();
1010de10:	010f2200 	call	1010f220 <alt_dcache_flush_all>
  alt_icache_flush_all();
1010de14:	010f6440 	call	1010f644 <alt_icache_flush_all>
}
1010de18:	0001883a 	nop
1010de1c:	e037883a 	mov	sp,fp
1010de20:	dfc00117 	ldw	ra,4(sp)
1010de24:	df000017 	ldw	fp,0(sp)
1010de28:	dec00204 	addi	sp,sp,8
1010de2c:	f800283a 	ret

1010de30 <alt_get_errno>:
#undef errno

extern int errno;

static ALT_INLINE int* alt_get_errno(void)
{
1010de30:	defffe04 	addi	sp,sp,-8
1010de34:	dfc00115 	stw	ra,4(sp)
1010de38:	df000015 	stw	fp,0(sp)
1010de3c:	d839883a 	mov	fp,sp
  return ((alt_errno) ? alt_errno() : &errno);
1010de40:	d0a00b17 	ldw	r2,-32724(gp)
1010de44:	10000326 	beq	r2,zero,1010de54 <alt_get_errno+0x24>
1010de48:	d0a00b17 	ldw	r2,-32724(gp)
1010de4c:	103ee83a 	callr	r2
1010de50:	00000106 	br	1010de58 <alt_get_errno+0x28>
1010de54:	d0a6cc04 	addi	r2,gp,-25808
}
1010de58:	e037883a 	mov	sp,fp
1010de5c:	dfc00117 	ldw	ra,4(sp)
1010de60:	df000017 	ldw	fp,0(sp)
1010de64:	dec00204 	addi	sp,sp,8
1010de68:	f800283a 	ret

1010de6c <lseek>:
 * ALT_LSEEK is mapped onto the lseek() system call in alt_syscall.h
 *
 */

off_t ALT_LSEEK (int file, off_t ptr, int dir)
{
1010de6c:	defff904 	addi	sp,sp,-28
1010de70:	dfc00615 	stw	ra,24(sp)
1010de74:	df000515 	stw	fp,20(sp)
1010de78:	df000504 	addi	fp,sp,20
1010de7c:	e13ffd15 	stw	r4,-12(fp)
1010de80:	e17ffe15 	stw	r5,-8(fp)
1010de84:	e1bfff15 	stw	r6,-4(fp)
  alt_fd* fd;
  off_t   rc = 0; 
1010de88:	e03ffb15 	stw	zero,-20(fp)
   * A common error case is that when the file descriptor was created, the call
   * to open() failed resulting in a negative file descriptor. This is trapped
   * below so that we don't try and process an invalid file descriptor.
   */

  fd = (file < 0) ? NULL : &alt_fd_list[file];
1010de8c:	e0bffd17 	ldw	r2,-12(fp)
1010de90:	10000616 	blt	r2,zero,1010deac <lseek+0x40>
1010de94:	e0bffd17 	ldw	r2,-12(fp)
1010de98:	10c00324 	muli	r3,r2,12
1010de9c:	00840474 	movhi	r2,4113
1010dea0:	1082a004 	addi	r2,r2,2688
1010dea4:	1885883a 	add	r2,r3,r2
1010dea8:	00000106 	br	1010deb0 <lseek+0x44>
1010deac:	0005883a 	mov	r2,zero
1010deb0:	e0bffc15 	stw	r2,-16(fp)
  
  if (fd) 
1010deb4:	e0bffc17 	ldw	r2,-16(fp)
1010deb8:	10001026 	beq	r2,zero,1010defc <lseek+0x90>
    /*
     * If the device driver provides an implementation of the lseek() function,
     * then call that to process the request.
     */
 
    if (fd->dev->lseek)
1010debc:	e0bffc17 	ldw	r2,-16(fp)
1010dec0:	10800017 	ldw	r2,0(r2)
1010dec4:	10800717 	ldw	r2,28(r2)
1010dec8:	10000926 	beq	r2,zero,1010def0 <lseek+0x84>
    {
      rc = fd->dev->lseek(fd, ptr, dir);
1010decc:	e0bffc17 	ldw	r2,-16(fp)
1010ded0:	10800017 	ldw	r2,0(r2)
1010ded4:	10800717 	ldw	r2,28(r2)
1010ded8:	e1bfff17 	ldw	r6,-4(fp)
1010dedc:	e17ffe17 	ldw	r5,-8(fp)
1010dee0:	e13ffc17 	ldw	r4,-16(fp)
1010dee4:	103ee83a 	callr	r2
1010dee8:	e0bffb15 	stw	r2,-20(fp)
1010deec:	00000506 	br	1010df04 <lseek+0x98>
     * Otherwise return an error.
     */

    else
    {
      rc = -ENOTSUP;
1010def0:	00bfde84 	movi	r2,-134
1010def4:	e0bffb15 	stw	r2,-20(fp)
1010def8:	00000206 	br	1010df04 <lseek+0x98>
    }
  }
  else  
  {
    rc = -EBADFD;
1010defc:	00bfebc4 	movi	r2,-81
1010df00:	e0bffb15 	stw	r2,-20(fp)
  }

  if (rc < 0)
1010df04:	e0bffb17 	ldw	r2,-20(fp)
1010df08:	1000070e 	bge	r2,zero,1010df28 <lseek+0xbc>
  {
    ALT_ERRNO = -rc;
1010df0c:	010de300 	call	1010de30 <alt_get_errno>
1010df10:	1007883a 	mov	r3,r2
1010df14:	e0bffb17 	ldw	r2,-20(fp)
1010df18:	0085c83a 	sub	r2,zero,r2
1010df1c:	18800015 	stw	r2,0(r3)
    rc = -1;
1010df20:	00bfffc4 	movi	r2,-1
1010df24:	e0bffb15 	stw	r2,-20(fp)
  }

  return rc;
1010df28:	e0bffb17 	ldw	r2,-20(fp)
}
1010df2c:	e037883a 	mov	sp,fp
1010df30:	dfc00117 	ldw	ra,4(sp)
1010df34:	df000017 	ldw	fp,0(sp)
1010df38:	dec00204 	addi	sp,sp,8
1010df3c:	f800283a 	ret

1010df40 <alt_main>:
 * devices/filesystems/components in the system; and call the entry point for
 * the users application, i.e. main().
 */

void alt_main (void)
{
1010df40:	defffd04 	addi	sp,sp,-12
1010df44:	dfc00215 	stw	ra,8(sp)
1010df48:	df000115 	stw	fp,4(sp)
1010df4c:	df000104 	addi	fp,sp,4
#endif

  /* ALT LOG - please see HAL/sys/alt_log_printf.h for details */
  ALT_LOG_PRINT_BOOT("[alt_main.c] Entering alt_main, calling alt_irq_init.\r\n");
  /* Initialize the interrupt controller. */
  alt_irq_init (NULL);
1010df50:	0009883a 	mov	r4,zero
1010df54:	010e60c0 	call	1010e60c <alt_irq_init>

  /* Initialize the operating system */
  ALT_LOG_PRINT_BOOT("[alt_main.c] Done alt_irq_init, calling alt_os_init.\r\n");
  ALT_OS_INIT();
1010df58:	0001883a 	nop
  ALT_LOG_PRINT_BOOT("[alt_main.c] Done OS Init, calling alt_sem_create.\r\n");
  ALT_SEM_CREATE (&alt_fd_list_lock, 1);

  /* Initialize the device drivers/software components. */
  ALT_LOG_PRINT_BOOT("[alt_main.c] Calling alt_sys_init.\r\n");
  alt_sys_init();
1010df5c:	010e6440 	call	1010e644 <alt_sys_init>
   * devices be present (not equal to /dev/null) and if direct drivers
   * aren't being used.
   */

    ALT_LOG_PRINT_BOOT("[alt_main.c] Redirecting IO.\r\n");
    alt_io_redirect(ALT_STDOUT, ALT_STDIN, ALT_STDERR);
1010df60:	01840474 	movhi	r6,4113
1010df64:	31806304 	addi	r6,r6,396
1010df68:	01440474 	movhi	r5,4113
1010df6c:	29406304 	addi	r5,r5,396
1010df70:	01040474 	movhi	r4,4113
1010df74:	21006304 	addi	r4,r4,396
1010df78:	010f7d80 	call	1010f7d8 <alt_io_redirect>
  /* 
   * Call the C++ constructors 
   */

  ALT_LOG_PRINT_BOOT("[alt_main.c] Calling C++ constructors.\r\n");
  _do_ctors ();
1010df7c:	010f3480 	call	1010f348 <_do_ctors>
   * redefined as _exit()). This is in the interest of reducing code footprint,
   * in that the atexit() overhead is removed when it's not needed.
   */

  ALT_LOG_PRINT_BOOT("[alt_main.c] Calling atexit.\r\n");
  atexit (_do_dtors);
1010df80:	01040474 	movhi	r4,4113
1010df84:	213cea04 	addi	r4,r4,-3160
1010df88:	010faac0 	call	1010faac <atexit>
  ALT_LOG_PRINT_BOOT("[alt_main.c] Calling main.\r\n");

#ifdef ALT_NO_EXIT
  main (alt_argc, alt_argv, alt_envp);
#else
  result = main (alt_argc, alt_argv, alt_envp);
1010df8c:	d0a6d417 	ldw	r2,-25776(gp)
1010df90:	d0e6d517 	ldw	r3,-25772(gp)
1010df94:	d126d617 	ldw	r4,-25768(gp)
1010df98:	200d883a 	mov	r6,r4
1010df9c:	180b883a 	mov	r5,r3
1010dfa0:	1009883a 	mov	r4,r2
1010dfa4:	01004380 	call	10100438 <main>
1010dfa8:	e0bfff15 	stw	r2,-4(fp)
  close(STDOUT_FILENO);
1010dfac:	01000044 	movi	r4,1
1010dfb0:	010d7dc0 	call	1010d7dc <close>
  exit (result);
1010dfb4:	e13fff17 	ldw	r4,-4(fp)
1010dfb8:	010fac00 	call	1010fac0 <exit>

1010dfbc <__malloc_lock>:
 * configuration is single threaded, so there is nothing to do here. Note that 
 * this requires that malloc is never called by an interrupt service routine.
 */

void __malloc_lock ( struct _reent *_r )
{
1010dfbc:	defffe04 	addi	sp,sp,-8
1010dfc0:	df000115 	stw	fp,4(sp)
1010dfc4:	df000104 	addi	fp,sp,4
1010dfc8:	e13fff15 	stw	r4,-4(fp)
}
1010dfcc:	0001883a 	nop
1010dfd0:	e037883a 	mov	sp,fp
1010dfd4:	df000017 	ldw	fp,0(sp)
1010dfd8:	dec00104 	addi	sp,sp,4
1010dfdc:	f800283a 	ret

1010dfe0 <__malloc_unlock>:
/*
 *
 */

void __malloc_unlock ( struct _reent *_r )
{
1010dfe0:	defffe04 	addi	sp,sp,-8
1010dfe4:	df000115 	stw	fp,4(sp)
1010dfe8:	df000104 	addi	fp,sp,4
1010dfec:	e13fff15 	stw	r4,-4(fp)
}
1010dff0:	0001883a 	nop
1010dff4:	e037883a 	mov	sp,fp
1010dff8:	df000017 	ldw	fp,0(sp)
1010dffc:	dec00104 	addi	sp,sp,4
1010e000:	f800283a 	ret

1010e004 <alt_get_errno>:
#undef errno

extern int errno;

static ALT_INLINE int* alt_get_errno(void)
{
1010e004:	defffe04 	addi	sp,sp,-8
1010e008:	dfc00115 	stw	ra,4(sp)
1010e00c:	df000015 	stw	fp,0(sp)
1010e010:	d839883a 	mov	fp,sp
  return ((alt_errno) ? alt_errno() : &errno);
1010e014:	d0a00b17 	ldw	r2,-32724(gp)
1010e018:	10000326 	beq	r2,zero,1010e028 <alt_get_errno+0x24>
1010e01c:	d0a00b17 	ldw	r2,-32724(gp)
1010e020:	103ee83a 	callr	r2
1010e024:	00000106 	br	1010e02c <alt_get_errno+0x28>
1010e028:	d0a6cc04 	addi	r2,gp,-25808
}
1010e02c:	e037883a 	mov	sp,fp
1010e030:	dfc00117 	ldw	ra,4(sp)
1010e034:	df000017 	ldw	fp,0(sp)
1010e038:	dec00204 	addi	sp,sp,8
1010e03c:	f800283a 	ret

1010e040 <alt_file_locked>:
 * performed for devices. Filesystems are required to handle the ioctl() call
 * themselves, and report the error from the filesystems open() function. 
 */ 

static int alt_file_locked (alt_fd* fd)
{
1010e040:	defffd04 	addi	sp,sp,-12
1010e044:	df000215 	stw	fp,8(sp)
1010e048:	df000204 	addi	fp,sp,8
1010e04c:	e13fff15 	stw	r4,-4(fp)

  /*
   * Mark the file descriptor as belonging to a device.
   */

  fd->fd_flags |= ALT_FD_DEV;
1010e050:	e0bfff17 	ldw	r2,-4(fp)
1010e054:	10800217 	ldw	r2,8(r2)
1010e058:	10d00034 	orhi	r3,r2,16384
1010e05c:	e0bfff17 	ldw	r2,-4(fp)
1010e060:	10c00215 	stw	r3,8(r2)
  /*
   * Loop through all current file descriptors searching for one that's locked
   * for exclusive access. If a match is found, generate an error.
   */

  for (i = 0; i <= alt_max_fd; i++)
1010e064:	e03ffe15 	stw	zero,-8(fp)
1010e068:	00001d06 	br	1010e0e0 <alt_file_locked+0xa0>
  {
    if ((alt_fd_list[i].dev == fd->dev) &&
1010e06c:	00840474 	movhi	r2,4113
1010e070:	1082a004 	addi	r2,r2,2688
1010e074:	e0fffe17 	ldw	r3,-8(fp)
1010e078:	18c00324 	muli	r3,r3,12
1010e07c:	10c5883a 	add	r2,r2,r3
1010e080:	10c00017 	ldw	r3,0(r2)
1010e084:	e0bfff17 	ldw	r2,-4(fp)
1010e088:	10800017 	ldw	r2,0(r2)
1010e08c:	1880111e 	bne	r3,r2,1010e0d4 <alt_file_locked+0x94>
        (alt_fd_list[i].fd_flags & ALT_FD_EXCL) &&
1010e090:	00840474 	movhi	r2,4113
1010e094:	1082a004 	addi	r2,r2,2688
1010e098:	e0fffe17 	ldw	r3,-8(fp)
1010e09c:	18c00324 	muli	r3,r3,12
1010e0a0:	10c5883a 	add	r2,r2,r3
1010e0a4:	10800204 	addi	r2,r2,8
1010e0a8:	10800017 	ldw	r2,0(r2)
   * for exclusive access. If a match is found, generate an error.
   */

  for (i = 0; i <= alt_max_fd; i++)
  {
    if ((alt_fd_list[i].dev == fd->dev) &&
1010e0ac:	1000090e 	bge	r2,zero,1010e0d4 <alt_file_locked+0x94>
        (alt_fd_list[i].fd_flags & ALT_FD_EXCL) &&
        (&alt_fd_list[i] != fd))
1010e0b0:	e0bffe17 	ldw	r2,-8(fp)
1010e0b4:	10c00324 	muli	r3,r2,12
1010e0b8:	00840474 	movhi	r2,4113
1010e0bc:	1082a004 	addi	r2,r2,2688
1010e0c0:	1887883a 	add	r3,r3,r2
   */

  for (i = 0; i <= alt_max_fd; i++)
  {
    if ((alt_fd_list[i].dev == fd->dev) &&
        (alt_fd_list[i].fd_flags & ALT_FD_EXCL) &&
1010e0c4:	e0bfff17 	ldw	r2,-4(fp)
1010e0c8:	18800226 	beq	r3,r2,1010e0d4 <alt_file_locked+0x94>
        (&alt_fd_list[i] != fd))
    {
      return -EACCES;
1010e0cc:	00bffcc4 	movi	r2,-13
1010e0d0:	00000806 	br	1010e0f4 <alt_file_locked+0xb4>
  /*
   * Loop through all current file descriptors searching for one that's locked
   * for exclusive access. If a match is found, generate an error.
   */

  for (i = 0; i <= alt_max_fd; i++)
1010e0d4:	e0bffe17 	ldw	r2,-8(fp)
1010e0d8:	10800044 	addi	r2,r2,1
1010e0dc:	e0bffe15 	stw	r2,-8(fp)
1010e0e0:	d0a00a17 	ldw	r2,-32728(gp)
1010e0e4:	1007883a 	mov	r3,r2
1010e0e8:	e0bffe17 	ldw	r2,-8(fp)
1010e0ec:	18bfdf2e 	bgeu	r3,r2,1010e06c <alt_file_locked+0x2c>
    }
  }
  
  /* The device is not locked */
 
  return 0;
1010e0f0:	0005883a 	mov	r2,zero
}
1010e0f4:	e037883a 	mov	sp,fp
1010e0f8:	df000017 	ldw	fp,0(sp)
1010e0fc:	dec00104 	addi	sp,sp,4
1010e100:	f800283a 	ret

1010e104 <open>:
 *
 * ALT_OPEN is mapped onto the open() system call in alt_syscall.h
 */
 
int ALT_OPEN (const char* file, int flags, int mode)
{ 
1010e104:	defff604 	addi	sp,sp,-40
1010e108:	dfc00915 	stw	ra,36(sp)
1010e10c:	df000815 	stw	fp,32(sp)
1010e110:	df000804 	addi	fp,sp,32
1010e114:	e13ffd15 	stw	r4,-12(fp)
1010e118:	e17ffe15 	stw	r5,-8(fp)
1010e11c:	e1bfff15 	stw	r6,-4(fp)
  alt_dev* dev;
  alt_fd*  fd;
  int index  = -1;
1010e120:	00bfffc4 	movi	r2,-1
1010e124:	e0bff915 	stw	r2,-28(fp)
  int status = -ENODEV;
1010e128:	00bffb44 	movi	r2,-19
1010e12c:	e0bffa15 	stw	r2,-24(fp)
  int isafs = 0;
1010e130:	e03ffb15 	stw	zero,-20(fp)
  /* 
   * Check the device list, to see if a device with a matching name is 
   * registered.
   */
  
  if (!(dev = alt_find_dev (file, &alt_dev_list)))
1010e134:	d1600804 	addi	r5,gp,-32736
1010e138:	e13ffd17 	ldw	r4,-12(fp)
1010e13c:	010f4080 	call	1010f408 <alt_find_dev>
1010e140:	e0bff815 	stw	r2,-32(fp)
1010e144:	e0bff817 	ldw	r2,-32(fp)
1010e148:	1000051e 	bne	r2,zero,1010e160 <open+0x5c>
  {
    /* No matching device, so try the filesystem list */

    dev   = alt_find_file (file);
1010e14c:	e13ffd17 	ldw	r4,-12(fp)
1010e150:	010f4980 	call	1010f498 <alt_find_file>
1010e154:	e0bff815 	stw	r2,-32(fp)
    isafs = 1;
1010e158:	00800044 	movi	r2,1
1010e15c:	e0bffb15 	stw	r2,-20(fp)

  /* 
   * If a matching device or filesystem is found, allocate a file descriptor. 
   */

  if (dev)
1010e160:	e0bff817 	ldw	r2,-32(fp)
1010e164:	10002926 	beq	r2,zero,1010e20c <open+0x108>
  {
    if ((index = alt_get_fd (dev)) < 0)
1010e168:	e13ff817 	ldw	r4,-32(fp)
1010e16c:	010f5a00 	call	1010f5a0 <alt_get_fd>
1010e170:	e0bff915 	stw	r2,-28(fp)
1010e174:	e0bff917 	ldw	r2,-28(fp)
1010e178:	1000030e 	bge	r2,zero,1010e188 <open+0x84>
    {
      status = index;
1010e17c:	e0bff917 	ldw	r2,-28(fp)
1010e180:	e0bffa15 	stw	r2,-24(fp)
1010e184:	00002306 	br	1010e214 <open+0x110>
    }
    else
    {
      fd = &alt_fd_list[index];
1010e188:	e0bff917 	ldw	r2,-28(fp)
1010e18c:	10c00324 	muli	r3,r2,12
1010e190:	00840474 	movhi	r2,4113
1010e194:	1082a004 	addi	r2,r2,2688
1010e198:	1885883a 	add	r2,r3,r2
1010e19c:	e0bffc15 	stw	r2,-16(fp)
      fd->fd_flags = (flags & ~ALT_FD_FLAGS_MASK);
1010e1a0:	e0fffe17 	ldw	r3,-8(fp)
1010e1a4:	00900034 	movhi	r2,16384
1010e1a8:	10bfffc4 	addi	r2,r2,-1
1010e1ac:	1886703a 	and	r3,r3,r2
1010e1b0:	e0bffc17 	ldw	r2,-16(fp)
1010e1b4:	10c00215 	stw	r3,8(r2)
      
      /* If this is a device, ensure it isn't already locked */

      if (isafs || ((status = alt_file_locked (fd)) >= 0))
1010e1b8:	e0bffb17 	ldw	r2,-20(fp)
1010e1bc:	1000051e 	bne	r2,zero,1010e1d4 <open+0xd0>
1010e1c0:	e13ffc17 	ldw	r4,-16(fp)
1010e1c4:	010e0400 	call	1010e040 <alt_file_locked>
1010e1c8:	e0bffa15 	stw	r2,-24(fp)
1010e1cc:	e0bffa17 	ldw	r2,-24(fp)
1010e1d0:	10001016 	blt	r2,zero,1010e214 <open+0x110>
        /* 
         * If the device or filesystem provides an open() callback function,
         * call it now to perform any device/filesystem specific operations.
         */
    
        status = (dev->open) ? dev->open(fd, file, flags, mode): 0;
1010e1d4:	e0bff817 	ldw	r2,-32(fp)
1010e1d8:	10800317 	ldw	r2,12(r2)
1010e1dc:	10000826 	beq	r2,zero,1010e200 <open+0xfc>
1010e1e0:	e0bff817 	ldw	r2,-32(fp)
1010e1e4:	10800317 	ldw	r2,12(r2)
1010e1e8:	e1ffff17 	ldw	r7,-4(fp)
1010e1ec:	e1bffe17 	ldw	r6,-8(fp)
1010e1f0:	e17ffd17 	ldw	r5,-12(fp)
1010e1f4:	e13ffc17 	ldw	r4,-16(fp)
1010e1f8:	103ee83a 	callr	r2
1010e1fc:	00000106 	br	1010e204 <open+0x100>
1010e200:	0005883a 	mov	r2,zero
1010e204:	e0bffa15 	stw	r2,-24(fp)
1010e208:	00000206 	br	1010e214 <open+0x110>
      }
    }
  }
  else
  {
    status = -ENODEV;
1010e20c:	00bffb44 	movi	r2,-19
1010e210:	e0bffa15 	stw	r2,-24(fp)
  }

  /* Allocation failed, so clean up and return an error */ 

  if (status < 0)
1010e214:	e0bffa17 	ldw	r2,-24(fp)
1010e218:	1000090e 	bge	r2,zero,1010e240 <open+0x13c>
  {
    alt_release_fd (index);  
1010e21c:	e13ff917 	ldw	r4,-28(fp)
1010e220:	010e3900 	call	1010e390 <alt_release_fd>
    ALT_ERRNO = -status;
1010e224:	010e0040 	call	1010e004 <alt_get_errno>
1010e228:	1007883a 	mov	r3,r2
1010e22c:	e0bffa17 	ldw	r2,-24(fp)
1010e230:	0085c83a 	sub	r2,zero,r2
1010e234:	18800015 	stw	r2,0(r3)
    return -1;
1010e238:	00bfffc4 	movi	r2,-1
1010e23c:	00000106 	br	1010e244 <open+0x140>
  }
  
  /* return the reference upon success */

  return index;
1010e240:	e0bff917 	ldw	r2,-28(fp)
}
1010e244:	e037883a 	mov	sp,fp
1010e248:	dfc00117 	ldw	ra,4(sp)
1010e24c:	df000017 	ldw	fp,0(sp)
1010e250:	dec00204 	addi	sp,sp,8
1010e254:	f800283a 	ret

1010e258 <alt_get_errno>:
#undef errno

extern int errno;

static ALT_INLINE int* alt_get_errno(void)
{
1010e258:	defffe04 	addi	sp,sp,-8
1010e25c:	dfc00115 	stw	ra,4(sp)
1010e260:	df000015 	stw	fp,0(sp)
1010e264:	d839883a 	mov	fp,sp
  return ((alt_errno) ? alt_errno() : &errno);
1010e268:	d0a00b17 	ldw	r2,-32724(gp)
1010e26c:	10000326 	beq	r2,zero,1010e27c <alt_get_errno+0x24>
1010e270:	d0a00b17 	ldw	r2,-32724(gp)
1010e274:	103ee83a 	callr	r2
1010e278:	00000106 	br	1010e280 <alt_get_errno+0x28>
1010e27c:	d0a6cc04 	addi	r2,gp,-25808
}
1010e280:	e037883a 	mov	sp,fp
1010e284:	dfc00117 	ldw	ra,4(sp)
1010e288:	df000017 	ldw	fp,0(sp)
1010e28c:	dec00204 	addi	sp,sp,8
1010e290:	f800283a 	ret

1010e294 <read>:
}

#else /* !ALT_USE_DIRECT_DRIVERS */

int ALT_READ (int file, void *ptr, size_t len)
{
1010e294:	defff904 	addi	sp,sp,-28
1010e298:	dfc00615 	stw	ra,24(sp)
1010e29c:	df000515 	stw	fp,20(sp)
1010e2a0:	df000504 	addi	fp,sp,20
1010e2a4:	e13ffd15 	stw	r4,-12(fp)
1010e2a8:	e17ffe15 	stw	r5,-8(fp)
1010e2ac:	e1bfff15 	stw	r6,-4(fp)
   * A common error case is that when the file descriptor was created, the call
   * to open() failed resulting in a negative file descriptor. This is trapped
   * below so that we don't try and process an invalid file descriptor.
   */

  fd = (file < 0) ? NULL : &alt_fd_list[file];
1010e2b0:	e0bffd17 	ldw	r2,-12(fp)
1010e2b4:	10000616 	blt	r2,zero,1010e2d0 <read+0x3c>
1010e2b8:	e0bffd17 	ldw	r2,-12(fp)
1010e2bc:	10c00324 	muli	r3,r2,12
1010e2c0:	00840474 	movhi	r2,4113
1010e2c4:	1082a004 	addi	r2,r2,2688
1010e2c8:	1885883a 	add	r2,r3,r2
1010e2cc:	00000106 	br	1010e2d4 <read+0x40>
1010e2d0:	0005883a 	mov	r2,zero
1010e2d4:	e0bffb15 	stw	r2,-20(fp)
  
  if (fd)
1010e2d8:	e0bffb17 	ldw	r2,-20(fp)
1010e2dc:	10002226 	beq	r2,zero,1010e368 <read+0xd4>
     * If the file has not been opened with read access, or if the driver does
     * not provide an implementation of read(), generate an error. Otherwise
     * call the drivers read() function to process the request.
     */

    if (((fd->fd_flags & O_ACCMODE) != O_WRONLY) && 
1010e2e0:	e0bffb17 	ldw	r2,-20(fp)
1010e2e4:	10800217 	ldw	r2,8(r2)
1010e2e8:	108000cc 	andi	r2,r2,3
1010e2ec:	10800060 	cmpeqi	r2,r2,1
1010e2f0:	1000181e 	bne	r2,zero,1010e354 <read+0xc0>
        (fd->dev->read))
1010e2f4:	e0bffb17 	ldw	r2,-20(fp)
1010e2f8:	10800017 	ldw	r2,0(r2)
1010e2fc:	10800517 	ldw	r2,20(r2)
     * If the file has not been opened with read access, or if the driver does
     * not provide an implementation of read(), generate an error. Otherwise
     * call the drivers read() function to process the request.
     */

    if (((fd->fd_flags & O_ACCMODE) != O_WRONLY) && 
1010e300:	10001426 	beq	r2,zero,1010e354 <read+0xc0>
        (fd->dev->read))
      {
        if ((rval = fd->dev->read(fd, ptr, len)) < 0)
1010e304:	e0bffb17 	ldw	r2,-20(fp)
1010e308:	10800017 	ldw	r2,0(r2)
1010e30c:	10800517 	ldw	r2,20(r2)
1010e310:	e0ffff17 	ldw	r3,-4(fp)
1010e314:	180d883a 	mov	r6,r3
1010e318:	e17ffe17 	ldw	r5,-8(fp)
1010e31c:	e13ffb17 	ldw	r4,-20(fp)
1010e320:	103ee83a 	callr	r2
1010e324:	e0bffc15 	stw	r2,-16(fp)
1010e328:	e0bffc17 	ldw	r2,-16(fp)
1010e32c:	1000070e 	bge	r2,zero,1010e34c <read+0xb8>
        {
          ALT_ERRNO = -rval;
1010e330:	010e2580 	call	1010e258 <alt_get_errno>
1010e334:	1007883a 	mov	r3,r2
1010e338:	e0bffc17 	ldw	r2,-16(fp)
1010e33c:	0085c83a 	sub	r2,zero,r2
1010e340:	18800015 	stw	r2,0(r3)
          return -1;
1010e344:	00bfffc4 	movi	r2,-1
1010e348:	00000c06 	br	1010e37c <read+0xe8>
        }
        return rval;
1010e34c:	e0bffc17 	ldw	r2,-16(fp)
1010e350:	00000a06 	br	1010e37c <read+0xe8>
      }
      else
      {
        ALT_ERRNO = EACCES;
1010e354:	010e2580 	call	1010e258 <alt_get_errno>
1010e358:	1007883a 	mov	r3,r2
1010e35c:	00800344 	movi	r2,13
1010e360:	18800015 	stw	r2,0(r3)
1010e364:	00000406 	br	1010e378 <read+0xe4>
      }
    }
  else
  {
    ALT_ERRNO = EBADFD;
1010e368:	010e2580 	call	1010e258 <alt_get_errno>
1010e36c:	1007883a 	mov	r3,r2
1010e370:	00801444 	movi	r2,81
1010e374:	18800015 	stw	r2,0(r3)
  }
  return -1;
1010e378:	00bfffc4 	movi	r2,-1
}
1010e37c:	e037883a 	mov	sp,fp
1010e380:	dfc00117 	ldw	ra,4(sp)
1010e384:	df000017 	ldw	fp,0(sp)
1010e388:	dec00204 	addi	sp,sp,8
1010e38c:	f800283a 	ret

1010e390 <alt_release_fd>:
 * File descriptors correcponding to standard in, standard out and standard 
 * error cannont be released backed to the pool. They are always reserved.
 */

void alt_release_fd (int fd)
{
1010e390:	defffe04 	addi	sp,sp,-8
1010e394:	df000115 	stw	fp,4(sp)
1010e398:	df000104 	addi	fp,sp,4
1010e39c:	e13fff15 	stw	r4,-4(fp)
  if (fd > 2)
1010e3a0:	e0bfff17 	ldw	r2,-4(fp)
1010e3a4:	108000d0 	cmplti	r2,r2,3
1010e3a8:	10000d1e 	bne	r2,zero,1010e3e0 <alt_release_fd+0x50>
  {
    alt_fd_list[fd].fd_flags = 0;
1010e3ac:	00840474 	movhi	r2,4113
1010e3b0:	1082a004 	addi	r2,r2,2688
1010e3b4:	e0ffff17 	ldw	r3,-4(fp)
1010e3b8:	18c00324 	muli	r3,r3,12
1010e3bc:	10c5883a 	add	r2,r2,r3
1010e3c0:	10800204 	addi	r2,r2,8
1010e3c4:	10000015 	stw	zero,0(r2)
    alt_fd_list[fd].dev      = 0;
1010e3c8:	00840474 	movhi	r2,4113
1010e3cc:	1082a004 	addi	r2,r2,2688
1010e3d0:	e0ffff17 	ldw	r3,-4(fp)
1010e3d4:	18c00324 	muli	r3,r3,12
1010e3d8:	10c5883a 	add	r2,r2,r3
1010e3dc:	10000015 	stw	zero,0(r2)
  }
}
1010e3e0:	0001883a 	nop
1010e3e4:	e037883a 	mov	sp,fp
1010e3e8:	df000017 	ldw	fp,0(sp)
1010e3ec:	dec00104 	addi	sp,sp,4
1010e3f0:	f800283a 	ret

1010e3f4 <sbrk>:
#endif
 
caddr_t ALT_SBRK (int incr) __attribute__ ((no_instrument_function ));

caddr_t ALT_SBRK (int incr)
{ 
1010e3f4:	defff904 	addi	sp,sp,-28
1010e3f8:	df000615 	stw	fp,24(sp)
1010e3fc:	df000604 	addi	fp,sp,24
1010e400:	e13fff15 	stw	r4,-4(fp)
static ALT_INLINE alt_irq_context ALT_ALWAYS_INLINE 
       alt_irq_disable_all (void)
{
  alt_irq_context context;

  NIOS2_READ_STATUS (context);
1010e404:	0005303a 	rdctl	r2,status
1010e408:	e0bffe15 	stw	r2,-8(fp)

  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
1010e40c:	e0fffe17 	ldw	r3,-8(fp)
1010e410:	00bfff84 	movi	r2,-2
1010e414:	1884703a 	and	r2,r3,r2
1010e418:	1001703a 	wrctl	status,r2
  
  return context;
1010e41c:	e0bffe17 	ldw	r2,-8(fp)
  alt_irq_context context;
  char *prev_heap_end; 

  context = alt_irq_disable_all();
1010e420:	e0bffb15 	stw	r2,-20(fp)

  /* Always return data aligned on a word boundary */
  heap_end = (char *)(((unsigned int)heap_end + 3) & ~3);
1010e424:	d0a00d17 	ldw	r2,-32716(gp)
1010e428:	10c000c4 	addi	r3,r2,3
1010e42c:	00bfff04 	movi	r2,-4
1010e430:	1884703a 	and	r2,r3,r2
1010e434:	d0a00d15 	stw	r2,-32716(gp)
  if (((heap_end + incr) - __alt_heap_start) > ALT_MAX_HEAP_BYTES) {
    alt_irq_enable_all(context);
    return (caddr_t)-1;
  }
#else
  if ((heap_end + incr) > __alt_heap_limit) {
1010e438:	d0e00d17 	ldw	r3,-32716(gp)
1010e43c:	e0bfff17 	ldw	r2,-4(fp)
1010e440:	1887883a 	add	r3,r3,r2
1010e444:	008404b4 	movhi	r2,4114
1010e448:	10800004 	addi	r2,r2,0
1010e44c:	10c0062e 	bgeu	r2,r3,1010e468 <sbrk+0x74>
1010e450:	e0bffb17 	ldw	r2,-20(fp)
1010e454:	e0bffa15 	stw	r2,-24(fp)
  status &= ~NIOS2_STATUS_PIE_MSK;
  status |= (context & NIOS2_STATUS_PIE_MSK);
  
  NIOS2_WRITE_STATUS (status);
#else
  NIOS2_WRITE_STATUS (context);
1010e458:	e0bffa17 	ldw	r2,-24(fp)
1010e45c:	1001703a 	wrctl	status,r2
    alt_irq_enable_all(context);
    return (caddr_t)-1;
1010e460:	00bfffc4 	movi	r2,-1
1010e464:	00000b06 	br	1010e494 <sbrk+0xa0>
  }
#endif

  prev_heap_end = heap_end; 
1010e468:	d0a00d17 	ldw	r2,-32716(gp)
1010e46c:	e0bffd15 	stw	r2,-12(fp)
  heap_end += incr; 
1010e470:	d0e00d17 	ldw	r3,-32716(gp)
1010e474:	e0bfff17 	ldw	r2,-4(fp)
1010e478:	1885883a 	add	r2,r3,r2
1010e47c:	d0a00d15 	stw	r2,-32716(gp)
1010e480:	e0bffb17 	ldw	r2,-20(fp)
1010e484:	e0bffc15 	stw	r2,-16(fp)
1010e488:	e0bffc17 	ldw	r2,-16(fp)
1010e48c:	1001703a 	wrctl	status,r2

#endif

  alt_irq_enable_all(context);

  return (caddr_t) prev_heap_end; 
1010e490:	e0bffd17 	ldw	r2,-12(fp)
} 
1010e494:	e037883a 	mov	sp,fp
1010e498:	df000017 	ldw	fp,0(sp)
1010e49c:	dec00104 	addi	sp,sp,4
1010e4a0:	f800283a 	ret

1010e4a4 <alt_get_errno>:
#undef errno

extern int errno;

static ALT_INLINE int* alt_get_errno(void)
{
1010e4a4:	defffe04 	addi	sp,sp,-8
1010e4a8:	dfc00115 	stw	ra,4(sp)
1010e4ac:	df000015 	stw	fp,0(sp)
1010e4b0:	d839883a 	mov	fp,sp
  return ((alt_errno) ? alt_errno() : &errno);
1010e4b4:	d0a00b17 	ldw	r2,-32724(gp)
1010e4b8:	10000326 	beq	r2,zero,1010e4c8 <alt_get_errno+0x24>
1010e4bc:	d0a00b17 	ldw	r2,-32724(gp)
1010e4c0:	103ee83a 	callr	r2
1010e4c4:	00000106 	br	1010e4cc <alt_get_errno+0x28>
1010e4c8:	d0a6cc04 	addi	r2,gp,-25808
}
1010e4cc:	e037883a 	mov	sp,fp
1010e4d0:	dfc00117 	ldw	ra,4(sp)
1010e4d4:	df000017 	ldw	fp,0(sp)
1010e4d8:	dec00204 	addi	sp,sp,8
1010e4dc:	f800283a 	ret

1010e4e0 <write>:
}

#else /* !ALT_USE_DIRECT_DRIVERS */

int ALT_WRITE (int file, const void *ptr, size_t len)
{
1010e4e0:	defff904 	addi	sp,sp,-28
1010e4e4:	dfc00615 	stw	ra,24(sp)
1010e4e8:	df000515 	stw	fp,20(sp)
1010e4ec:	df000504 	addi	fp,sp,20
1010e4f0:	e13ffd15 	stw	r4,-12(fp)
1010e4f4:	e17ffe15 	stw	r5,-8(fp)
1010e4f8:	e1bfff15 	stw	r6,-4(fp)
   * A common error case is that when the file descriptor was created, the call
   * to open() failed resulting in a negative file descriptor. This is trapped
   * below so that we don't try and process an invalid file descriptor.
   */

  fd = (file < 0) ? NULL : &alt_fd_list[file];
1010e4fc:	e0bffd17 	ldw	r2,-12(fp)
1010e500:	10000616 	blt	r2,zero,1010e51c <write+0x3c>
1010e504:	e0bffd17 	ldw	r2,-12(fp)
1010e508:	10c00324 	muli	r3,r2,12
1010e50c:	00840474 	movhi	r2,4113
1010e510:	1082a004 	addi	r2,r2,2688
1010e514:	1885883a 	add	r2,r3,r2
1010e518:	00000106 	br	1010e520 <write+0x40>
1010e51c:	0005883a 	mov	r2,zero
1010e520:	e0bffb15 	stw	r2,-20(fp)
  
  if (fd)
1010e524:	e0bffb17 	ldw	r2,-20(fp)
1010e528:	10002126 	beq	r2,zero,1010e5b0 <write+0xd0>
     * If the file has not been opened with write access, or if the driver does
     * not provide an implementation of write(), generate an error. Otherwise
     * call the drivers write() function to process the request.
     */

    if (((fd->fd_flags & O_ACCMODE) != O_RDONLY) && fd->dev->write)
1010e52c:	e0bffb17 	ldw	r2,-20(fp)
1010e530:	10800217 	ldw	r2,8(r2)
1010e534:	108000cc 	andi	r2,r2,3
1010e538:	10001826 	beq	r2,zero,1010e59c <write+0xbc>
1010e53c:	e0bffb17 	ldw	r2,-20(fp)
1010e540:	10800017 	ldw	r2,0(r2)
1010e544:	10800617 	ldw	r2,24(r2)
1010e548:	10001426 	beq	r2,zero,1010e59c <write+0xbc>
    {
      
      /* ALT_LOG - see altera_hal/HAL/inc/sys/alt_log_printf.h */
      ALT_LOG_WRITE_FUNCTION(ptr,len);

      if ((rval = fd->dev->write(fd, ptr, len)) < 0)
1010e54c:	e0bffb17 	ldw	r2,-20(fp)
1010e550:	10800017 	ldw	r2,0(r2)
1010e554:	10800617 	ldw	r2,24(r2)
1010e558:	e0ffff17 	ldw	r3,-4(fp)
1010e55c:	180d883a 	mov	r6,r3
1010e560:	e17ffe17 	ldw	r5,-8(fp)
1010e564:	e13ffb17 	ldw	r4,-20(fp)
1010e568:	103ee83a 	callr	r2
1010e56c:	e0bffc15 	stw	r2,-16(fp)
1010e570:	e0bffc17 	ldw	r2,-16(fp)
1010e574:	1000070e 	bge	r2,zero,1010e594 <write+0xb4>
      {
        ALT_ERRNO = -rval;
1010e578:	010e4a40 	call	1010e4a4 <alt_get_errno>
1010e57c:	1007883a 	mov	r3,r2
1010e580:	e0bffc17 	ldw	r2,-16(fp)
1010e584:	0085c83a 	sub	r2,zero,r2
1010e588:	18800015 	stw	r2,0(r3)
        return -1;
1010e58c:	00bfffc4 	movi	r2,-1
1010e590:	00000c06 	br	1010e5c4 <write+0xe4>
      }
      return rval;
1010e594:	e0bffc17 	ldw	r2,-16(fp)
1010e598:	00000a06 	br	1010e5c4 <write+0xe4>
    }
    else
    {
      ALT_ERRNO = EACCES;
1010e59c:	010e4a40 	call	1010e4a4 <alt_get_errno>
1010e5a0:	1007883a 	mov	r3,r2
1010e5a4:	00800344 	movi	r2,13
1010e5a8:	18800015 	stw	r2,0(r3)
1010e5ac:	00000406 	br	1010e5c0 <write+0xe0>
    }
  }
  else  
  {
    ALT_ERRNO = EBADFD;
1010e5b0:	010e4a40 	call	1010e4a4 <alt_get_errno>
1010e5b4:	1007883a 	mov	r3,r2
1010e5b8:	00801444 	movi	r2,81
1010e5bc:	18800015 	stw	r2,0(r3)
  }
  return -1;
1010e5c0:	00bfffc4 	movi	r2,-1
}
1010e5c4:	e037883a 	mov	sp,fp
1010e5c8:	dfc00117 	ldw	ra,4(sp)
1010e5cc:	df000017 	ldw	fp,0(sp)
1010e5d0:	dec00204 	addi	sp,sp,8
1010e5d4:	f800283a 	ret

1010e5d8 <alt_dev_reg>:
 */

extern int alt_fs_reg  (alt_dev* dev); 

static ALT_INLINE int alt_dev_reg (alt_dev* dev)
{
1010e5d8:	defffd04 	addi	sp,sp,-12
1010e5dc:	dfc00215 	stw	ra,8(sp)
1010e5e0:	df000115 	stw	fp,4(sp)
1010e5e4:	df000104 	addi	fp,sp,4
1010e5e8:	e13fff15 	stw	r4,-4(fp)
  extern alt_llist alt_dev_list;

  return alt_dev_llist_insert ((alt_dev_llist*) dev, &alt_dev_list);
1010e5ec:	d1600804 	addi	r5,gp,-32736
1010e5f0:	e13fff17 	ldw	r4,-4(fp)
1010e5f4:	010f2a40 	call	1010f2a4 <alt_dev_llist_insert>
}
1010e5f8:	e037883a 	mov	sp,fp
1010e5fc:	dfc00117 	ldw	ra,4(sp)
1010e600:	df000017 	ldw	fp,0(sp)
1010e604:	dec00204 	addi	sp,sp,8
1010e608:	f800283a 	ret

1010e60c <alt_irq_init>:
 * The "base" parameter is ignored and only
 * present for backwards-compatibility.
 */

void alt_irq_init ( const void* base )
{
1010e60c:	defffd04 	addi	sp,sp,-12
1010e610:	dfc00215 	stw	ra,8(sp)
1010e614:	df000115 	stw	fp,4(sp)
1010e618:	df000104 	addi	fp,sp,4
1010e61c:	e13fff15 	stw	r4,-4(fp)
    ALTERA_NIOS2_GEN2_IRQ_INIT ( NIOS2_GEN2_0, nios2_gen2_0);
1010e620:	010f9f80 	call	1010f9f8 <altera_nios2_gen2_irq_init>
 * alt_irq_cpu_enable_interrupts() enables the CPU to start taking interrupts.
 */
static ALT_INLINE void ALT_ALWAYS_INLINE 
       alt_irq_cpu_enable_interrupts (void)
{
    NIOS2_WRITE_STATUS(NIOS2_STATUS_PIE_MSK
1010e624:	00800044 	movi	r2,1
1010e628:	1001703a 	wrctl	status,r2
    alt_irq_cpu_enable_interrupts();
}
1010e62c:	0001883a 	nop
1010e630:	e037883a 	mov	sp,fp
1010e634:	dfc00117 	ldw	ra,4(sp)
1010e638:	df000017 	ldw	fp,0(sp)
1010e63c:	dec00204 	addi	sp,sp,8
1010e640:	f800283a 	ret

1010e644 <alt_sys_init>:
 * Initialize the non-interrupt controller devices.
 * Called after alt_irq_init().
 */

void alt_sys_init( void )
{
1010e644:	defffe04 	addi	sp,sp,-8
1010e648:	dfc00115 	stw	ra,4(sp)
1010e64c:	df000015 	stw	fp,0(sp)
1010e650:	d839883a 	mov	fp,sp
    ALTERA_AVALON_JTAG_UART_INIT ( JTAG_UART_0, jtag_uart_0);
1010e654:	01800044 	movi	r6,1
1010e658:	000b883a 	mov	r5,zero
1010e65c:	01040474 	movhi	r4,4113
1010e660:	21030a04 	addi	r4,r4,3112
1010e664:	010e7f00 	call	1010e7f0 <altera_avalon_jtag_uart_init>
1010e668:	01040474 	movhi	r4,4113
1010e66c:	21030004 	addi	r4,r4,3072
1010e670:	010e5d80 	call	1010e5d8 <alt_dev_reg>
}
1010e674:	0001883a 	nop
1010e678:	e037883a 	mov	sp,fp
1010e67c:	dfc00117 	ldw	ra,4(sp)
1010e680:	df000017 	ldw	fp,0(sp)
1010e684:	dec00204 	addi	sp,sp,8
1010e688:	f800283a 	ret

1010e68c <altera_avalon_jtag_uart_read_fd>:
 *
 */

int 
altera_avalon_jtag_uart_read_fd(alt_fd* fd, char* buffer, int space)
{
1010e68c:	defffa04 	addi	sp,sp,-24
1010e690:	dfc00515 	stw	ra,20(sp)
1010e694:	df000415 	stw	fp,16(sp)
1010e698:	df000404 	addi	fp,sp,16
1010e69c:	e13ffd15 	stw	r4,-12(fp)
1010e6a0:	e17ffe15 	stw	r5,-8(fp)
1010e6a4:	e1bfff15 	stw	r6,-4(fp)
    altera_avalon_jtag_uart_dev* dev = (altera_avalon_jtag_uart_dev*) fd->dev; 
1010e6a8:	e0bffd17 	ldw	r2,-12(fp)
1010e6ac:	10800017 	ldw	r2,0(r2)
1010e6b0:	e0bffc15 	stw	r2,-16(fp)

    return altera_avalon_jtag_uart_read(&dev->state, buffer, space,
1010e6b4:	e0bffc17 	ldw	r2,-16(fp)
1010e6b8:	10c00a04 	addi	r3,r2,40
1010e6bc:	e0bffd17 	ldw	r2,-12(fp)
1010e6c0:	10800217 	ldw	r2,8(r2)
1010e6c4:	100f883a 	mov	r7,r2
1010e6c8:	e1bfff17 	ldw	r6,-4(fp)
1010e6cc:	e17ffe17 	ldw	r5,-8(fp)
1010e6d0:	1809883a 	mov	r4,r3
1010e6d4:	010ecb40 	call	1010ecb4 <altera_avalon_jtag_uart_read>
      fd->fd_flags);
}
1010e6d8:	e037883a 	mov	sp,fp
1010e6dc:	dfc00117 	ldw	ra,4(sp)
1010e6e0:	df000017 	ldw	fp,0(sp)
1010e6e4:	dec00204 	addi	sp,sp,8
1010e6e8:	f800283a 	ret

1010e6ec <altera_avalon_jtag_uart_write_fd>:

int 
altera_avalon_jtag_uart_write_fd(alt_fd* fd, const char* buffer, int space)
{
1010e6ec:	defffa04 	addi	sp,sp,-24
1010e6f0:	dfc00515 	stw	ra,20(sp)
1010e6f4:	df000415 	stw	fp,16(sp)
1010e6f8:	df000404 	addi	fp,sp,16
1010e6fc:	e13ffd15 	stw	r4,-12(fp)
1010e700:	e17ffe15 	stw	r5,-8(fp)
1010e704:	e1bfff15 	stw	r6,-4(fp)
    altera_avalon_jtag_uart_dev* dev = (altera_avalon_jtag_uart_dev*) fd->dev; 
1010e708:	e0bffd17 	ldw	r2,-12(fp)
1010e70c:	10800017 	ldw	r2,0(r2)
1010e710:	e0bffc15 	stw	r2,-16(fp)

    return altera_avalon_jtag_uart_write(&dev->state, buffer, space,
1010e714:	e0bffc17 	ldw	r2,-16(fp)
1010e718:	10c00a04 	addi	r3,r2,40
1010e71c:	e0bffd17 	ldw	r2,-12(fp)
1010e720:	10800217 	ldw	r2,8(r2)
1010e724:	100f883a 	mov	r7,r2
1010e728:	e1bfff17 	ldw	r6,-4(fp)
1010e72c:	e17ffe17 	ldw	r5,-8(fp)
1010e730:	1809883a 	mov	r4,r3
1010e734:	010eed00 	call	1010eed0 <altera_avalon_jtag_uart_write>
      fd->fd_flags);
}
1010e738:	e037883a 	mov	sp,fp
1010e73c:	dfc00117 	ldw	ra,4(sp)
1010e740:	df000017 	ldw	fp,0(sp)
1010e744:	dec00204 	addi	sp,sp,8
1010e748:	f800283a 	ret

1010e74c <altera_avalon_jtag_uart_close_fd>:

#ifndef ALTERA_AVALON_JTAG_UART_SMALL

int 
altera_avalon_jtag_uart_close_fd(alt_fd* fd)
{
1010e74c:	defffc04 	addi	sp,sp,-16
1010e750:	dfc00315 	stw	ra,12(sp)
1010e754:	df000215 	stw	fp,8(sp)
1010e758:	df000204 	addi	fp,sp,8
1010e75c:	e13fff15 	stw	r4,-4(fp)
    altera_avalon_jtag_uart_dev* dev = (altera_avalon_jtag_uart_dev*) fd->dev; 
1010e760:	e0bfff17 	ldw	r2,-4(fp)
1010e764:	10800017 	ldw	r2,0(r2)
1010e768:	e0bffe15 	stw	r2,-8(fp)

    return altera_avalon_jtag_uart_close(&dev->state, fd->fd_flags);
1010e76c:	e0bffe17 	ldw	r2,-8(fp)
1010e770:	10c00a04 	addi	r3,r2,40
1010e774:	e0bfff17 	ldw	r2,-4(fp)
1010e778:	10800217 	ldw	r2,8(r2)
1010e77c:	100b883a 	mov	r5,r2
1010e780:	1809883a 	mov	r4,r3
1010e784:	010eb5c0 	call	1010eb5c <altera_avalon_jtag_uart_close>
}
1010e788:	e037883a 	mov	sp,fp
1010e78c:	dfc00117 	ldw	ra,4(sp)
1010e790:	df000017 	ldw	fp,0(sp)
1010e794:	dec00204 	addi	sp,sp,8
1010e798:	f800283a 	ret

1010e79c <altera_avalon_jtag_uart_ioctl_fd>:

int 
altera_avalon_jtag_uart_ioctl_fd(alt_fd* fd, int req, void* arg)
{
1010e79c:	defffa04 	addi	sp,sp,-24
1010e7a0:	dfc00515 	stw	ra,20(sp)
1010e7a4:	df000415 	stw	fp,16(sp)
1010e7a8:	df000404 	addi	fp,sp,16
1010e7ac:	e13ffd15 	stw	r4,-12(fp)
1010e7b0:	e17ffe15 	stw	r5,-8(fp)
1010e7b4:	e1bfff15 	stw	r6,-4(fp)
    altera_avalon_jtag_uart_dev* dev = (altera_avalon_jtag_uart_dev*) fd->dev;
1010e7b8:	e0bffd17 	ldw	r2,-12(fp)
1010e7bc:	10800017 	ldw	r2,0(r2)
1010e7c0:	e0bffc15 	stw	r2,-16(fp)

    return altera_avalon_jtag_uart_ioctl(&dev->state, req, arg);
1010e7c4:	e0bffc17 	ldw	r2,-16(fp)
1010e7c8:	10800a04 	addi	r2,r2,40
1010e7cc:	e1bfff17 	ldw	r6,-4(fp)
1010e7d0:	e17ffe17 	ldw	r5,-8(fp)
1010e7d4:	1009883a 	mov	r4,r2
1010e7d8:	010ebc40 	call	1010ebc4 <altera_avalon_jtag_uart_ioctl>
}
1010e7dc:	e037883a 	mov	sp,fp
1010e7e0:	dfc00117 	ldw	ra,4(sp)
1010e7e4:	df000017 	ldw	fp,0(sp)
1010e7e8:	dec00204 	addi	sp,sp,8
1010e7ec:	f800283a 	ret

1010e7f0 <altera_avalon_jtag_uart_init>:
 * Return 1 on sucessful IRQ register and 0 on failure.
 */

void altera_avalon_jtag_uart_init(altera_avalon_jtag_uart_state* sp, 
                                  int irq_controller_id, int irq)
{
1010e7f0:	defffa04 	addi	sp,sp,-24
1010e7f4:	dfc00515 	stw	ra,20(sp)
1010e7f8:	df000415 	stw	fp,16(sp)
1010e7fc:	df000404 	addi	fp,sp,16
1010e800:	e13ffd15 	stw	r4,-12(fp)
1010e804:	e17ffe15 	stw	r5,-8(fp)
1010e808:	e1bfff15 	stw	r6,-4(fp)
  ALT_FLAG_CREATE(&sp->events, 0);
  ALT_SEM_CREATE(&sp->read_lock, 1);
  ALT_SEM_CREATE(&sp->write_lock, 1);

  /* enable read interrupts at the device */
  sp->irq_enable = ALTERA_AVALON_JTAG_UART_CONTROL_RE_MSK;
1010e80c:	e0bffd17 	ldw	r2,-12(fp)
1010e810:	00c00044 	movi	r3,1
1010e814:	10c00815 	stw	r3,32(r2)

  IOWR_ALTERA_AVALON_JTAG_UART_CONTROL(sp->base, sp->irq_enable); 
1010e818:	e0bffd17 	ldw	r2,-12(fp)
1010e81c:	10800017 	ldw	r2,0(r2)
1010e820:	10800104 	addi	r2,r2,4
1010e824:	1007883a 	mov	r3,r2
1010e828:	e0bffd17 	ldw	r2,-12(fp)
1010e82c:	10800817 	ldw	r2,32(r2)
1010e830:	18800035 	stwio	r2,0(r3)
  
  /* register the interrupt handler */
#ifdef ALT_ENHANCED_INTERRUPT_API_PRESENT
  alt_ic_isr_register(irq_controller_id, irq, altera_avalon_jtag_uart_irq, 
1010e834:	e0bffe17 	ldw	r2,-8(fp)
1010e838:	e0ffff17 	ldw	r3,-4(fp)
1010e83c:	d8000015 	stw	zero,0(sp)
1010e840:	e1fffd17 	ldw	r7,-12(fp)
1010e844:	01840474 	movhi	r6,4113
1010e848:	31ba2c04 	addi	r6,r6,-5968
1010e84c:	180b883a 	mov	r5,r3
1010e850:	1009883a 	mov	r4,r2
1010e854:	010d9c40 	call	1010d9c4 <alt_ic_isr_register>
#else
  alt_irq_register(irq, sp, altera_avalon_jtag_uart_irq);
#endif  

  /* Register an alarm to go off every second to check for presence of host */
  sp->host_inactive = 0;
1010e858:	e0bffd17 	ldw	r2,-12(fp)
1010e85c:	10000915 	stw	zero,36(r2)

  if (alt_alarm_start(&sp->alarm, alt_ticks_per_second(), 
1010e860:	e0bffd17 	ldw	r2,-12(fp)
1010e864:	10800204 	addi	r2,r2,8
 * Obtain the system clock rate in ticks/s. 
 */

static ALT_INLINE alt_u32 ALT_ALWAYS_INLINE alt_ticks_per_second (void)
{
  return _alt_tick_rate;
1010e868:	d0e6d817 	ldw	r3,-25760(gp)
1010e86c:	e1fffd17 	ldw	r7,-12(fp)
1010e870:	01840474 	movhi	r6,4113
1010e874:	31baaf04 	addi	r6,r6,-5444
1010e878:	180b883a 	mov	r5,r3
1010e87c:	1009883a 	mov	r4,r2
1010e880:	010f0f40 	call	1010f0f4 <alt_alarm_start>
1010e884:	1000040e 	bge	r2,zero,1010e898 <altera_avalon_jtag_uart_init+0xa8>
    &altera_avalon_jtag_uart_timeout, sp) < 0)
  {
    /* If we can't set the alarm then record "don't know if host present" 
     * and behave as though the host is present.
     */
    sp->timeout = INT_MAX;
1010e888:	e0fffd17 	ldw	r3,-12(fp)
1010e88c:	00a00034 	movhi	r2,32768
1010e890:	10bfffc4 	addi	r2,r2,-1
1010e894:	18800115 	stw	r2,4(r3)
  }

  /* ALT_LOG - see altera_hal/HAL/inc/sys/alt_log_printf.h */ 
  ALT_LOG_JTAG_UART_ALARM_REGISTER(sp, sp->base);
}
1010e898:	0001883a 	nop
1010e89c:	e037883a 	mov	sp,fp
1010e8a0:	dfc00117 	ldw	ra,4(sp)
1010e8a4:	df000017 	ldw	fp,0(sp)
1010e8a8:	dec00204 	addi	sp,sp,8
1010e8ac:	f800283a 	ret

1010e8b0 <altera_avalon_jtag_uart_irq>:
#ifdef ALT_ENHANCED_INTERRUPT_API_PRESENT
static void altera_avalon_jtag_uart_irq(void* context)
#else
static void altera_avalon_jtag_uart_irq(void* context, alt_u32 id)
#endif
{
1010e8b0:	defff804 	addi	sp,sp,-32
1010e8b4:	df000715 	stw	fp,28(sp)
1010e8b8:	df000704 	addi	fp,sp,28
1010e8bc:	e13fff15 	stw	r4,-4(fp)
  altera_avalon_jtag_uart_state* sp = (altera_avalon_jtag_uart_state*) context;
1010e8c0:	e0bfff17 	ldw	r2,-4(fp)
1010e8c4:	e0bffb15 	stw	r2,-20(fp)
  unsigned int base = sp->base;
1010e8c8:	e0bffb17 	ldw	r2,-20(fp)
1010e8cc:	10800017 	ldw	r2,0(r2)
1010e8d0:	e0bffc15 	stw	r2,-16(fp)
  /* ALT_LOG - see altera_hal/HAL/inc/sys/alt_log_printf.h */ 
  ALT_LOG_JTAG_UART_ISR_FUNCTION(base, sp);

  for ( ; ; )
  {
    unsigned int control = IORD_ALTERA_AVALON_JTAG_UART_CONTROL(base);
1010e8d4:	e0bffc17 	ldw	r2,-16(fp)
1010e8d8:	10800104 	addi	r2,r2,4
1010e8dc:	10800037 	ldwio	r2,0(r2)
1010e8e0:	e0bffd15 	stw	r2,-12(fp)

    /* Return once nothing more to do */
    if ((control & (ALTERA_AVALON_JTAG_UART_CONTROL_RI_MSK | ALTERA_AVALON_JTAG_UART_CONTROL_WI_MSK)) == 0)
1010e8e4:	e0bffd17 	ldw	r2,-12(fp)
1010e8e8:	1080c00c 	andi	r2,r2,768
1010e8ec:	10006d26 	beq	r2,zero,1010eaa4 <altera_avalon_jtag_uart_irq+0x1f4>
      break;

    if (control & ALTERA_AVALON_JTAG_UART_CONTROL_RI_MSK)
1010e8f0:	e0bffd17 	ldw	r2,-12(fp)
1010e8f4:	1080400c 	andi	r2,r2,256
1010e8f8:	10003526 	beq	r2,zero,1010e9d0 <altera_avalon_jtag_uart_irq+0x120>
    {
      /* process a read irq.  Start by assuming that there is data in the
       * receive FIFO (otherwise why would we have been interrupted?)
       */
      unsigned int data = 1 << ALTERA_AVALON_JTAG_UART_DATA_RAVAIL_OFST;
1010e8fc:	00800074 	movhi	r2,1
1010e900:	e0bff915 	stw	r2,-28(fp)
      for ( ; ; )
      {
        /* Check whether there is space in the buffer.  If not then we must not
         * read any characters from the buffer as they will be lost.
         */
        unsigned int next = (sp->rx_in + 1) % ALTERA_AVALON_JTAG_UART_BUF_LEN;
1010e904:	e0bffb17 	ldw	r2,-20(fp)
1010e908:	10800a17 	ldw	r2,40(r2)
1010e90c:	10800044 	addi	r2,r2,1
1010e910:	1081ffcc 	andi	r2,r2,2047
1010e914:	e0bffe15 	stw	r2,-8(fp)
        if (next == sp->rx_out)
1010e918:	e0bffb17 	ldw	r2,-20(fp)
1010e91c:	10c00b17 	ldw	r3,44(r2)
1010e920:	e0bffe17 	ldw	r2,-8(fp)
1010e924:	18801526 	beq	r3,r2,1010e97c <altera_avalon_jtag_uart_irq+0xcc>
          break;

        /* Try to remove a character from the FIFO and find out whether there
         * are any more characters remaining.
         */
        data = IORD_ALTERA_AVALON_JTAG_UART_DATA(base);
1010e928:	e0bffc17 	ldw	r2,-16(fp)
1010e92c:	10800037 	ldwio	r2,0(r2)
1010e930:	e0bff915 	stw	r2,-28(fp)
        
        if ((data & ALTERA_AVALON_JTAG_UART_DATA_RVALID_MSK) == 0)
1010e934:	e0bff917 	ldw	r2,-28(fp)
1010e938:	10a0000c 	andi	r2,r2,32768
1010e93c:	10001126 	beq	r2,zero,1010e984 <altera_avalon_jtag_uart_irq+0xd4>
          break;

        sp->rx_buf[sp->rx_in] = (data & ALTERA_AVALON_JTAG_UART_DATA_DATA_MSK) >> ALTERA_AVALON_JTAG_UART_DATA_DATA_OFST;
1010e940:	e0bffb17 	ldw	r2,-20(fp)
1010e944:	10800a17 	ldw	r2,40(r2)
1010e948:	e0fff917 	ldw	r3,-28(fp)
1010e94c:	1809883a 	mov	r4,r3
1010e950:	e0fffb17 	ldw	r3,-20(fp)
1010e954:	1885883a 	add	r2,r3,r2
1010e958:	10800e04 	addi	r2,r2,56
1010e95c:	11000005 	stb	r4,0(r2)
        sp->rx_in = (sp->rx_in + 1) % ALTERA_AVALON_JTAG_UART_BUF_LEN;
1010e960:	e0bffb17 	ldw	r2,-20(fp)
1010e964:	10800a17 	ldw	r2,40(r2)
1010e968:	10800044 	addi	r2,r2,1
1010e96c:	10c1ffcc 	andi	r3,r2,2047
1010e970:	e0bffb17 	ldw	r2,-20(fp)
1010e974:	10c00a15 	stw	r3,40(r2)

        /* Post an event to notify jtag_uart_read that a character has been read */
        ALT_FLAG_POST (sp->events, ALT_JTAG_UART_READ_RDY, OS_FLAG_SET);
      }
1010e978:	003fe206 	br	1010e904 <altera_avalon_jtag_uart_irq+0x54>
        /* Check whether there is space in the buffer.  If not then we must not
         * read any characters from the buffer as they will be lost.
         */
        unsigned int next = (sp->rx_in + 1) % ALTERA_AVALON_JTAG_UART_BUF_LEN;
        if (next == sp->rx_out)
          break;
1010e97c:	0001883a 	nop
1010e980:	00000106 	br	1010e988 <altera_avalon_jtag_uart_irq+0xd8>
         * are any more characters remaining.
         */
        data = IORD_ALTERA_AVALON_JTAG_UART_DATA(base);
        
        if ((data & ALTERA_AVALON_JTAG_UART_DATA_RVALID_MSK) == 0)
          break;
1010e984:	0001883a 	nop

        /* Post an event to notify jtag_uart_read that a character has been read */
        ALT_FLAG_POST (sp->events, ALT_JTAG_UART_READ_RDY, OS_FLAG_SET);
      }

      if (data & ALTERA_AVALON_JTAG_UART_DATA_RAVAIL_MSK)
1010e988:	e0bff917 	ldw	r2,-28(fp)
1010e98c:	10bfffec 	andhi	r2,r2,65535
1010e990:	10000f26 	beq	r2,zero,1010e9d0 <altera_avalon_jtag_uart_irq+0x120>
      {
        /* If there is still data available here then the buffer is full 
         * so turn off receive interrupts until some space becomes available.
         */
        sp->irq_enable &= ~ALTERA_AVALON_JTAG_UART_CONTROL_RE_MSK;
1010e994:	e0bffb17 	ldw	r2,-20(fp)
1010e998:	10c00817 	ldw	r3,32(r2)
1010e99c:	00bfff84 	movi	r2,-2
1010e9a0:	1886703a 	and	r3,r3,r2
1010e9a4:	e0bffb17 	ldw	r2,-20(fp)
1010e9a8:	10c00815 	stw	r3,32(r2)
        IOWR_ALTERA_AVALON_JTAG_UART_CONTROL(base, sp->irq_enable);
1010e9ac:	e0bffc17 	ldw	r2,-16(fp)
1010e9b0:	10800104 	addi	r2,r2,4
1010e9b4:	1007883a 	mov	r3,r2
1010e9b8:	e0bffb17 	ldw	r2,-20(fp)
1010e9bc:	10800817 	ldw	r2,32(r2)
1010e9c0:	18800035 	stwio	r2,0(r3)
        
        /* Dummy read to ensure IRQ is cleared prior to ISR completion */
        IORD_ALTERA_AVALON_JTAG_UART_CONTROL(base);
1010e9c4:	e0bffc17 	ldw	r2,-16(fp)
1010e9c8:	10800104 	addi	r2,r2,4
1010e9cc:	10800037 	ldwio	r2,0(r2)
      }
    }

    if (control & ALTERA_AVALON_JTAG_UART_CONTROL_WI_MSK)
1010e9d0:	e0bffd17 	ldw	r2,-12(fp)
1010e9d4:	1080800c 	andi	r2,r2,512
1010e9d8:	103fbe26 	beq	r2,zero,1010e8d4 <altera_avalon_jtag_uart_irq+0x24>
    {
      /* process a write irq */
      unsigned int space = (control & ALTERA_AVALON_JTAG_UART_CONTROL_WSPACE_MSK) >> ALTERA_AVALON_JTAG_UART_CONTROL_WSPACE_OFST;
1010e9dc:	e0bffd17 	ldw	r2,-12(fp)
1010e9e0:	1004d43a 	srli	r2,r2,16
1010e9e4:	e0bffa15 	stw	r2,-24(fp)

      while (space > 0 && sp->tx_out != sp->tx_in)
1010e9e8:	00001406 	br	1010ea3c <altera_avalon_jtag_uart_irq+0x18c>
      {
        IOWR_ALTERA_AVALON_JTAG_UART_DATA(base, sp->tx_buf[sp->tx_out]);
1010e9ec:	e0bffc17 	ldw	r2,-16(fp)
1010e9f0:	e0fffb17 	ldw	r3,-20(fp)
1010e9f4:	18c00d17 	ldw	r3,52(r3)
1010e9f8:	e13ffb17 	ldw	r4,-20(fp)
1010e9fc:	20c7883a 	add	r3,r4,r3
1010ea00:	18c20e04 	addi	r3,r3,2104
1010ea04:	18c00003 	ldbu	r3,0(r3)
1010ea08:	18c03fcc 	andi	r3,r3,255
1010ea0c:	18c0201c 	xori	r3,r3,128
1010ea10:	18ffe004 	addi	r3,r3,-128
1010ea14:	10c00035 	stwio	r3,0(r2)

        sp->tx_out = (sp->tx_out + 1) % ALTERA_AVALON_JTAG_UART_BUF_LEN;
1010ea18:	e0bffb17 	ldw	r2,-20(fp)
1010ea1c:	10800d17 	ldw	r2,52(r2)
1010ea20:	10800044 	addi	r2,r2,1
1010ea24:	10c1ffcc 	andi	r3,r2,2047
1010ea28:	e0bffb17 	ldw	r2,-20(fp)
1010ea2c:	10c00d15 	stw	r3,52(r2)

        /* Post an event to notify jtag_uart_write that a character has been written */
        ALT_FLAG_POST (sp->events, ALT_JTAG_UART_WRITE_RDY, OS_FLAG_SET);

        space--;
1010ea30:	e0bffa17 	ldw	r2,-24(fp)
1010ea34:	10bfffc4 	addi	r2,r2,-1
1010ea38:	e0bffa15 	stw	r2,-24(fp)
    if (control & ALTERA_AVALON_JTAG_UART_CONTROL_WI_MSK)
    {
      /* process a write irq */
      unsigned int space = (control & ALTERA_AVALON_JTAG_UART_CONTROL_WSPACE_MSK) >> ALTERA_AVALON_JTAG_UART_CONTROL_WSPACE_OFST;

      while (space > 0 && sp->tx_out != sp->tx_in)
1010ea3c:	e0bffa17 	ldw	r2,-24(fp)
1010ea40:	10000526 	beq	r2,zero,1010ea58 <altera_avalon_jtag_uart_irq+0x1a8>
1010ea44:	e0bffb17 	ldw	r2,-20(fp)
1010ea48:	10c00d17 	ldw	r3,52(r2)
1010ea4c:	e0bffb17 	ldw	r2,-20(fp)
1010ea50:	10800c17 	ldw	r2,48(r2)
1010ea54:	18bfe51e 	bne	r3,r2,1010e9ec <altera_avalon_jtag_uart_irq+0x13c>
        ALT_FLAG_POST (sp->events, ALT_JTAG_UART_WRITE_RDY, OS_FLAG_SET);

        space--;
      }

      if (space > 0)
1010ea58:	e0bffa17 	ldw	r2,-24(fp)
1010ea5c:	103f9d26 	beq	r2,zero,1010e8d4 <altera_avalon_jtag_uart_irq+0x24>
      {
        /* If we don't have any more data available then turn off the TX interrupt */
        sp->irq_enable &= ~ALTERA_AVALON_JTAG_UART_CONTROL_WE_MSK;
1010ea60:	e0bffb17 	ldw	r2,-20(fp)
1010ea64:	10c00817 	ldw	r3,32(r2)
1010ea68:	00bfff44 	movi	r2,-3
1010ea6c:	1886703a 	and	r3,r3,r2
1010ea70:	e0bffb17 	ldw	r2,-20(fp)
1010ea74:	10c00815 	stw	r3,32(r2)
        IOWR_ALTERA_AVALON_JTAG_UART_CONTROL(sp->base, sp->irq_enable);
1010ea78:	e0bffb17 	ldw	r2,-20(fp)
1010ea7c:	10800017 	ldw	r2,0(r2)
1010ea80:	10800104 	addi	r2,r2,4
1010ea84:	1007883a 	mov	r3,r2
1010ea88:	e0bffb17 	ldw	r2,-20(fp)
1010ea8c:	10800817 	ldw	r2,32(r2)
1010ea90:	18800035 	stwio	r2,0(r3)
        
        /* Dummy read to ensure IRQ is cleared prior to ISR completion */
        IORD_ALTERA_AVALON_JTAG_UART_CONTROL(base);
1010ea94:	e0bffc17 	ldw	r2,-16(fp)
1010ea98:	10800104 	addi	r2,r2,4
1010ea9c:	10800037 	ldwio	r2,0(r2)
      }
    }
  }
1010eaa0:	003f8c06 	br	1010e8d4 <altera_avalon_jtag_uart_irq+0x24>
  {
    unsigned int control = IORD_ALTERA_AVALON_JTAG_UART_CONTROL(base);

    /* Return once nothing more to do */
    if ((control & (ALTERA_AVALON_JTAG_UART_CONTROL_RI_MSK | ALTERA_AVALON_JTAG_UART_CONTROL_WI_MSK)) == 0)
      break;
1010eaa4:	0001883a 	nop
        /* Dummy read to ensure IRQ is cleared prior to ISR completion */
        IORD_ALTERA_AVALON_JTAG_UART_CONTROL(base);
      }
    }
  }
}
1010eaa8:	0001883a 	nop
1010eaac:	e037883a 	mov	sp,fp
1010eab0:	df000017 	ldw	fp,0(sp)
1010eab4:	dec00104 	addi	sp,sp,4
1010eab8:	f800283a 	ret

1010eabc <altera_avalon_jtag_uart_timeout>:
 * Timeout routine is called every second
 */

static alt_u32 
altera_avalon_jtag_uart_timeout(void* context) 
{
1010eabc:	defff804 	addi	sp,sp,-32
1010eac0:	df000715 	stw	fp,28(sp)
1010eac4:	df000704 	addi	fp,sp,28
1010eac8:	e13ffb15 	stw	r4,-20(fp)
  altera_avalon_jtag_uart_state* sp = (altera_avalon_jtag_uart_state *) context;
1010eacc:	e0bffb17 	ldw	r2,-20(fp)
1010ead0:	e0bff915 	stw	r2,-28(fp)

  unsigned int control = IORD_ALTERA_AVALON_JTAG_UART_CONTROL(sp->base);
1010ead4:	e0bff917 	ldw	r2,-28(fp)
1010ead8:	10800017 	ldw	r2,0(r2)
1010eadc:	10800104 	addi	r2,r2,4
1010eae0:	10800037 	ldwio	r2,0(r2)
1010eae4:	e0bffa15 	stw	r2,-24(fp)

  if (control & ALTERA_AVALON_JTAG_UART_CONTROL_AC_MSK)
1010eae8:	e0bffa17 	ldw	r2,-24(fp)
1010eaec:	1081000c 	andi	r2,r2,1024
1010eaf0:	10000b26 	beq	r2,zero,1010eb20 <altera_avalon_jtag_uart_timeout+0x64>
  {
    IOWR_ALTERA_AVALON_JTAG_UART_CONTROL(sp->base, sp->irq_enable | ALTERA_AVALON_JTAG_UART_CONTROL_AC_MSK);
1010eaf4:	e0bff917 	ldw	r2,-28(fp)
1010eaf8:	10800017 	ldw	r2,0(r2)
1010eafc:	10800104 	addi	r2,r2,4
1010eb00:	1007883a 	mov	r3,r2
1010eb04:	e0bff917 	ldw	r2,-28(fp)
1010eb08:	10800817 	ldw	r2,32(r2)
1010eb0c:	10810014 	ori	r2,r2,1024
1010eb10:	18800035 	stwio	r2,0(r3)
    sp->host_inactive = 0;
1010eb14:	e0bff917 	ldw	r2,-28(fp)
1010eb18:	10000915 	stw	zero,36(r2)
1010eb1c:	00000a06 	br	1010eb48 <altera_avalon_jtag_uart_timeout+0x8c>
  }
  else if (sp->host_inactive < INT_MAX - 2) {
1010eb20:	e0bff917 	ldw	r2,-28(fp)
1010eb24:	10c00917 	ldw	r3,36(r2)
1010eb28:	00a00034 	movhi	r2,32768
1010eb2c:	10bfff04 	addi	r2,r2,-4
1010eb30:	10c00536 	bltu	r2,r3,1010eb48 <altera_avalon_jtag_uart_timeout+0x8c>
    sp->host_inactive++;
1010eb34:	e0bff917 	ldw	r2,-28(fp)
1010eb38:	10800917 	ldw	r2,36(r2)
1010eb3c:	10c00044 	addi	r3,r2,1
1010eb40:	e0bff917 	ldw	r2,-28(fp)
1010eb44:	10c00915 	stw	r3,36(r2)
1010eb48:	d0a6d817 	ldw	r2,-25760(gp)
      ALT_FLAG_POST (sp->events, ALT_JTAG_UART_TIMEOUT, OS_FLAG_SET);
    }
  }

  return alt_ticks_per_second();
}
1010eb4c:	e037883a 	mov	sp,fp
1010eb50:	df000017 	ldw	fp,0(sp)
1010eb54:	dec00104 	addi	sp,sp,4
1010eb58:	f800283a 	ret

1010eb5c <altera_avalon_jtag_uart_close>:
 * The close routine is not implemented for the small driver; instead it will
 * map to null. This is because the small driver simply waits while characters
 * are transmitted; there is no interrupt-serviced buffer to empty 
 */
int altera_avalon_jtag_uart_close(altera_avalon_jtag_uart_state* sp, int flags)
{
1010eb5c:	defffd04 	addi	sp,sp,-12
1010eb60:	df000215 	stw	fp,8(sp)
1010eb64:	df000204 	addi	fp,sp,8
1010eb68:	e13ffe15 	stw	r4,-8(fp)
1010eb6c:	e17fff15 	stw	r5,-4(fp)
  /* 
   * Wait for all transmit data to be emptied by the JTAG UART ISR, or
   * for a host-inactivity timeout, in which case transmit data will be lost
   */
  while ( (sp->tx_out != sp->tx_in) && (sp->host_inactive < sp->timeout) ) {
1010eb70:	00000506 	br	1010eb88 <altera_avalon_jtag_uart_close+0x2c>
    if (flags & O_NONBLOCK) {
1010eb74:	e0bfff17 	ldw	r2,-4(fp)
1010eb78:	1090000c 	andi	r2,r2,16384
1010eb7c:	10000226 	beq	r2,zero,1010eb88 <altera_avalon_jtag_uart_close+0x2c>
      return -EWOULDBLOCK; 
1010eb80:	00bffd44 	movi	r2,-11
1010eb84:	00000b06 	br	1010ebb4 <altera_avalon_jtag_uart_close+0x58>
{
  /* 
   * Wait for all transmit data to be emptied by the JTAG UART ISR, or
   * for a host-inactivity timeout, in which case transmit data will be lost
   */
  while ( (sp->tx_out != sp->tx_in) && (sp->host_inactive < sp->timeout) ) {
1010eb88:	e0bffe17 	ldw	r2,-8(fp)
1010eb8c:	10c00d17 	ldw	r3,52(r2)
1010eb90:	e0bffe17 	ldw	r2,-8(fp)
1010eb94:	10800c17 	ldw	r2,48(r2)
1010eb98:	18800526 	beq	r3,r2,1010ebb0 <altera_avalon_jtag_uart_close+0x54>
1010eb9c:	e0bffe17 	ldw	r2,-8(fp)
1010eba0:	10c00917 	ldw	r3,36(r2)
1010eba4:	e0bffe17 	ldw	r2,-8(fp)
1010eba8:	10800117 	ldw	r2,4(r2)
1010ebac:	18bff136 	bltu	r3,r2,1010eb74 <altera_avalon_jtag_uart_close+0x18>
    if (flags & O_NONBLOCK) {
      return -EWOULDBLOCK; 
    }
  }

  return 0;
1010ebb0:	0005883a 	mov	r2,zero
}
1010ebb4:	e037883a 	mov	sp,fp
1010ebb8:	df000017 	ldw	fp,0(sp)
1010ebbc:	dec00104 	addi	sp,sp,4
1010ebc0:	f800283a 	ret

1010ebc4 <altera_avalon_jtag_uart_ioctl>:
/* ----------------------------------------------------------- */

int 
altera_avalon_jtag_uart_ioctl(altera_avalon_jtag_uart_state* sp, int req,
  void* arg)
{
1010ebc4:	defffa04 	addi	sp,sp,-24
1010ebc8:	df000515 	stw	fp,20(sp)
1010ebcc:	df000504 	addi	fp,sp,20
1010ebd0:	e13ffd15 	stw	r4,-12(fp)
1010ebd4:	e17ffe15 	stw	r5,-8(fp)
1010ebd8:	e1bfff15 	stw	r6,-4(fp)
  int rc = -ENOTTY;
1010ebdc:	00bff9c4 	movi	r2,-25
1010ebe0:	e0bffb15 	stw	r2,-20(fp)

  switch (req)
1010ebe4:	e0bffe17 	ldw	r2,-8(fp)
1010ebe8:	10da8060 	cmpeqi	r3,r2,27137
1010ebec:	1800031e 	bne	r3,zero,1010ebfc <altera_avalon_jtag_uart_ioctl+0x38>
1010ebf0:	109a80a0 	cmpeqi	r2,r2,27138
1010ebf4:	1000181e 	bne	r2,zero,1010ec58 <altera_avalon_jtag_uart_ioctl+0x94>
      rc = 0;
    }
    break;

  default:
    break;
1010ebf8:	00002906 	br	1010eca0 <altera_avalon_jtag_uart_ioctl+0xdc>

  switch (req)
  {
  case TIOCSTIMEOUT:
    /* Set the time to wait until assuming host is not connected */
    if (sp->timeout != INT_MAX)
1010ebfc:	e0bffd17 	ldw	r2,-12(fp)
1010ec00:	10c00117 	ldw	r3,4(r2)
1010ec04:	00a00034 	movhi	r2,32768
1010ec08:	10bfffc4 	addi	r2,r2,-1
1010ec0c:	18802126 	beq	r3,r2,1010ec94 <altera_avalon_jtag_uart_ioctl+0xd0>
    {
      int timeout = *((int *)arg);
1010ec10:	e0bfff17 	ldw	r2,-4(fp)
1010ec14:	10800017 	ldw	r2,0(r2)
1010ec18:	e0bffc15 	stw	r2,-16(fp)
      sp->timeout = (timeout >= 2 && timeout < INT_MAX) ? timeout : INT_MAX - 1;
1010ec1c:	e0bffc17 	ldw	r2,-16(fp)
1010ec20:	10800090 	cmplti	r2,r2,2
1010ec24:	1000061e 	bne	r2,zero,1010ec40 <altera_avalon_jtag_uart_ioctl+0x7c>
1010ec28:	e0fffc17 	ldw	r3,-16(fp)
1010ec2c:	00a00034 	movhi	r2,32768
1010ec30:	10bfffc4 	addi	r2,r2,-1
1010ec34:	18800226 	beq	r3,r2,1010ec40 <altera_avalon_jtag_uart_ioctl+0x7c>
1010ec38:	e0bffc17 	ldw	r2,-16(fp)
1010ec3c:	00000206 	br	1010ec48 <altera_avalon_jtag_uart_ioctl+0x84>
1010ec40:	00a00034 	movhi	r2,32768
1010ec44:	10bfff84 	addi	r2,r2,-2
1010ec48:	e0fffd17 	ldw	r3,-12(fp)
1010ec4c:	18800115 	stw	r2,4(r3)
      rc = 0;
1010ec50:	e03ffb15 	stw	zero,-20(fp)
    }
    break;
1010ec54:	00000f06 	br	1010ec94 <altera_avalon_jtag_uart_ioctl+0xd0>

  case TIOCGCONNECTED:
    /* Find out whether host is connected */
    if (sp->timeout != INT_MAX)
1010ec58:	e0bffd17 	ldw	r2,-12(fp)
1010ec5c:	10c00117 	ldw	r3,4(r2)
1010ec60:	00a00034 	movhi	r2,32768
1010ec64:	10bfffc4 	addi	r2,r2,-1
1010ec68:	18800c26 	beq	r3,r2,1010ec9c <altera_avalon_jtag_uart_ioctl+0xd8>
    {
      *((int *)arg) = (sp->host_inactive < sp->timeout) ? 1 : 0;
1010ec6c:	e0bffd17 	ldw	r2,-12(fp)
1010ec70:	10c00917 	ldw	r3,36(r2)
1010ec74:	e0bffd17 	ldw	r2,-12(fp)
1010ec78:	10800117 	ldw	r2,4(r2)
1010ec7c:	1885803a 	cmpltu	r2,r3,r2
1010ec80:	10c03fcc 	andi	r3,r2,255
1010ec84:	e0bfff17 	ldw	r2,-4(fp)
1010ec88:	10c00015 	stw	r3,0(r2)
      rc = 0;
1010ec8c:	e03ffb15 	stw	zero,-20(fp)
    }
    break;
1010ec90:	00000206 	br	1010ec9c <altera_avalon_jtag_uart_ioctl+0xd8>
    {
      int timeout = *((int *)arg);
      sp->timeout = (timeout >= 2 && timeout < INT_MAX) ? timeout : INT_MAX - 1;
      rc = 0;
    }
    break;
1010ec94:	0001883a 	nop
1010ec98:	00000106 	br	1010eca0 <altera_avalon_jtag_uart_ioctl+0xdc>
    if (sp->timeout != INT_MAX)
    {
      *((int *)arg) = (sp->host_inactive < sp->timeout) ? 1 : 0;
      rc = 0;
    }
    break;
1010ec9c:	0001883a 	nop

  default:
    break;
  }

  return rc;
1010eca0:	e0bffb17 	ldw	r2,-20(fp)
}
1010eca4:	e037883a 	mov	sp,fp
1010eca8:	df000017 	ldw	fp,0(sp)
1010ecac:	dec00104 	addi	sp,sp,4
1010ecb0:	f800283a 	ret

1010ecb4 <altera_avalon_jtag_uart_read>:
/* ----------------------------------------------------------- */

int 
altera_avalon_jtag_uart_read(altera_avalon_jtag_uart_state* sp, 
  char * buffer, int space, int flags)
{
1010ecb4:	defff304 	addi	sp,sp,-52
1010ecb8:	dfc00c15 	stw	ra,48(sp)
1010ecbc:	df000b15 	stw	fp,44(sp)
1010ecc0:	df000b04 	addi	fp,sp,44
1010ecc4:	e13ffc15 	stw	r4,-16(fp)
1010ecc8:	e17ffd15 	stw	r5,-12(fp)
1010eccc:	e1bffe15 	stw	r6,-8(fp)
1010ecd0:	e1ffff15 	stw	r7,-4(fp)
  char * ptr = buffer;
1010ecd4:	e0bffd17 	ldw	r2,-12(fp)
1010ecd8:	e0bff515 	stw	r2,-44(fp)
   * When running in a multi threaded environment, obtain the "read_lock"
   * semaphore. This ensures that reading from the device is thread-safe.
   */
  ALT_SEM_PEND (sp->read_lock, 0);

  while (space > 0)
1010ecdc:	00004706 	br	1010edfc <altera_avalon_jtag_uart_read+0x148>
    unsigned int in, out;

    /* Read as much data as possible */
    do
    {
      in  = sp->rx_in;
1010ece0:	e0bffc17 	ldw	r2,-16(fp)
1010ece4:	10800a17 	ldw	r2,40(r2)
1010ece8:	e0bff715 	stw	r2,-36(fp)
      out = sp->rx_out;
1010ecec:	e0bffc17 	ldw	r2,-16(fp)
1010ecf0:	10800b17 	ldw	r2,44(r2)
1010ecf4:	e0bff815 	stw	r2,-32(fp)

      if (in >= out)
1010ecf8:	e0fff717 	ldw	r3,-36(fp)
1010ecfc:	e0bff817 	ldw	r2,-32(fp)
1010ed00:	18800536 	bltu	r3,r2,1010ed18 <altera_avalon_jtag_uart_read+0x64>
        n = in - out;
1010ed04:	e0fff717 	ldw	r3,-36(fp)
1010ed08:	e0bff817 	ldw	r2,-32(fp)
1010ed0c:	1885c83a 	sub	r2,r3,r2
1010ed10:	e0bff615 	stw	r2,-40(fp)
1010ed14:	00000406 	br	1010ed28 <altera_avalon_jtag_uart_read+0x74>
      else
        n = ALTERA_AVALON_JTAG_UART_BUF_LEN - out;
1010ed18:	00c20004 	movi	r3,2048
1010ed1c:	e0bff817 	ldw	r2,-32(fp)
1010ed20:	1885c83a 	sub	r2,r3,r2
1010ed24:	e0bff615 	stw	r2,-40(fp)

      if (n == 0)
1010ed28:	e0bff617 	ldw	r2,-40(fp)
1010ed2c:	10001e26 	beq	r2,zero,1010eda8 <altera_avalon_jtag_uart_read+0xf4>
        break; /* No more data available */

      if (n > space)
1010ed30:	e0fffe17 	ldw	r3,-8(fp)
1010ed34:	e0bff617 	ldw	r2,-40(fp)
1010ed38:	1880022e 	bgeu	r3,r2,1010ed44 <altera_avalon_jtag_uart_read+0x90>
        n = space;
1010ed3c:	e0bffe17 	ldw	r2,-8(fp)
1010ed40:	e0bff615 	stw	r2,-40(fp)

      memcpy(ptr, sp->rx_buf + out, n);
1010ed44:	e0bffc17 	ldw	r2,-16(fp)
1010ed48:	10c00e04 	addi	r3,r2,56
1010ed4c:	e0bff817 	ldw	r2,-32(fp)
1010ed50:	1885883a 	add	r2,r3,r2
1010ed54:	e1bff617 	ldw	r6,-40(fp)
1010ed58:	100b883a 	mov	r5,r2
1010ed5c:	e13ff517 	ldw	r4,-44(fp)
1010ed60:	0106ecc0 	call	10106ecc <memcpy>
      ptr   += n;
1010ed64:	e0fff517 	ldw	r3,-44(fp)
1010ed68:	e0bff617 	ldw	r2,-40(fp)
1010ed6c:	1885883a 	add	r2,r3,r2
1010ed70:	e0bff515 	stw	r2,-44(fp)
      space -= n;
1010ed74:	e0fffe17 	ldw	r3,-8(fp)
1010ed78:	e0bff617 	ldw	r2,-40(fp)
1010ed7c:	1885c83a 	sub	r2,r3,r2
1010ed80:	e0bffe15 	stw	r2,-8(fp)

      sp->rx_out = (out + n) % ALTERA_AVALON_JTAG_UART_BUF_LEN;
1010ed84:	e0fff817 	ldw	r3,-32(fp)
1010ed88:	e0bff617 	ldw	r2,-40(fp)
1010ed8c:	1885883a 	add	r2,r3,r2
1010ed90:	10c1ffcc 	andi	r3,r2,2047
1010ed94:	e0bffc17 	ldw	r2,-16(fp)
1010ed98:	10c00b15 	stw	r3,44(r2)
    }
    while (space > 0);
1010ed9c:	e0bffe17 	ldw	r2,-8(fp)
1010eda0:	00bfcf16 	blt	zero,r2,1010ece0 <altera_avalon_jtag_uart_read+0x2c>
1010eda4:	00000106 	br	1010edac <altera_avalon_jtag_uart_read+0xf8>
        n = in - out;
      else
        n = ALTERA_AVALON_JTAG_UART_BUF_LEN - out;

      if (n == 0)
        break; /* No more data available */
1010eda8:	0001883a 	nop
      sp->rx_out = (out + n) % ALTERA_AVALON_JTAG_UART_BUF_LEN;
    }
    while (space > 0);

    /* If we read any data then return it */
    if (ptr != buffer)
1010edac:	e0fff517 	ldw	r3,-44(fp)
1010edb0:	e0bffd17 	ldw	r2,-12(fp)
1010edb4:	1880141e 	bne	r3,r2,1010ee08 <altera_avalon_jtag_uart_read+0x154>
      break;

    /* If in non-blocking mode then return error */
    if (flags & O_NONBLOCK)
1010edb8:	e0bfff17 	ldw	r2,-4(fp)
1010edbc:	1090000c 	andi	r2,r2,16384
1010edc0:	1000131e 	bne	r2,zero,1010ee10 <altera_avalon_jtag_uart_read+0x15c>
      while (in == sp->rx_in && sp->host_inactive < sp->timeout)
        ;
    }
#else
    /* No OS: Always spin */
    while (in == sp->rx_in && sp->host_inactive < sp->timeout)
1010edc4:	0001883a 	nop
1010edc8:	e0bffc17 	ldw	r2,-16(fp)
1010edcc:	10c00a17 	ldw	r3,40(r2)
1010edd0:	e0bff717 	ldw	r2,-36(fp)
1010edd4:	1880051e 	bne	r3,r2,1010edec <altera_avalon_jtag_uart_read+0x138>
1010edd8:	e0bffc17 	ldw	r2,-16(fp)
1010eddc:	10c00917 	ldw	r3,36(r2)
1010ede0:	e0bffc17 	ldw	r2,-16(fp)
1010ede4:	10800117 	ldw	r2,4(r2)
1010ede8:	18bff736 	bltu	r3,r2,1010edc8 <altera_avalon_jtag_uart_read+0x114>
      ;
#endif /* __ucosii__ */

    if (in == sp->rx_in)
1010edec:	e0bffc17 	ldw	r2,-16(fp)
1010edf0:	10c00a17 	ldw	r3,40(r2)
1010edf4:	e0bff717 	ldw	r2,-36(fp)
1010edf8:	18800726 	beq	r3,r2,1010ee18 <altera_avalon_jtag_uart_read+0x164>
   * When running in a multi threaded environment, obtain the "read_lock"
   * semaphore. This ensures that reading from the device is thread-safe.
   */
  ALT_SEM_PEND (sp->read_lock, 0);

  while (space > 0)
1010edfc:	e0bffe17 	ldw	r2,-8(fp)
1010ee00:	00bfb716 	blt	zero,r2,1010ece0 <altera_avalon_jtag_uart_read+0x2c>
1010ee04:	00000506 	br	1010ee1c <altera_avalon_jtag_uart_read+0x168>
    }
    while (space > 0);

    /* If we read any data then return it */
    if (ptr != buffer)
      break;
1010ee08:	0001883a 	nop
1010ee0c:	00000306 	br	1010ee1c <altera_avalon_jtag_uart_read+0x168>

    /* If in non-blocking mode then return error */
    if (flags & O_NONBLOCK)
      break;
1010ee10:	0001883a 	nop
1010ee14:	00000106 	br	1010ee1c <altera_avalon_jtag_uart_read+0x168>
    while (in == sp->rx_in && sp->host_inactive < sp->timeout)
      ;
#endif /* __ucosii__ */

    if (in == sp->rx_in)
      break;
1010ee18:	0001883a 	nop
   * semaphore so that other threads can access the buffer.
   */

  ALT_SEM_POST (sp->read_lock);

  if (ptr != buffer)
1010ee1c:	e0fff517 	ldw	r3,-44(fp)
1010ee20:	e0bffd17 	ldw	r2,-12(fp)
1010ee24:	18801826 	beq	r3,r2,1010ee88 <altera_avalon_jtag_uart_read+0x1d4>
static ALT_INLINE alt_irq_context ALT_ALWAYS_INLINE 
       alt_irq_disable_all (void)
{
  alt_irq_context context;

  NIOS2_READ_STATUS (context);
1010ee28:	0005303a 	rdctl	r2,status
1010ee2c:	e0bffb15 	stw	r2,-20(fp)

  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
1010ee30:	e0fffb17 	ldw	r3,-20(fp)
1010ee34:	00bfff84 	movi	r2,-2
1010ee38:	1884703a 	and	r2,r3,r2
1010ee3c:	1001703a 	wrctl	status,r2
  
  return context;
1010ee40:	e0bffb17 	ldw	r2,-20(fp)
  {
    /* If we read any data then there is space in the buffer so enable interrupts */
    context = alt_irq_disable_all();
1010ee44:	e0bffa15 	stw	r2,-24(fp)
    sp->irq_enable |= ALTERA_AVALON_JTAG_UART_CONTROL_RE_MSK;
1010ee48:	e0bffc17 	ldw	r2,-16(fp)
1010ee4c:	10800817 	ldw	r2,32(r2)
1010ee50:	10c00054 	ori	r3,r2,1
1010ee54:	e0bffc17 	ldw	r2,-16(fp)
1010ee58:	10c00815 	stw	r3,32(r2)
    IOWR_ALTERA_AVALON_JTAG_UART_CONTROL(sp->base, sp->irq_enable);
1010ee5c:	e0bffc17 	ldw	r2,-16(fp)
1010ee60:	10800017 	ldw	r2,0(r2)
1010ee64:	10800104 	addi	r2,r2,4
1010ee68:	1007883a 	mov	r3,r2
1010ee6c:	e0bffc17 	ldw	r2,-16(fp)
1010ee70:	10800817 	ldw	r2,32(r2)
1010ee74:	18800035 	stwio	r2,0(r3)
1010ee78:	e0bffa17 	ldw	r2,-24(fp)
1010ee7c:	e0bff915 	stw	r2,-28(fp)
  status &= ~NIOS2_STATUS_PIE_MSK;
  status |= (context & NIOS2_STATUS_PIE_MSK);
  
  NIOS2_WRITE_STATUS (status);
#else
  NIOS2_WRITE_STATUS (context);
1010ee80:	e0bff917 	ldw	r2,-28(fp)
1010ee84:	1001703a 	wrctl	status,r2
    alt_irq_enable_all(context);
  }

  if (ptr != buffer)
1010ee88:	e0fff517 	ldw	r3,-44(fp)
1010ee8c:	e0bffd17 	ldw	r2,-12(fp)
1010ee90:	18800426 	beq	r3,r2,1010eea4 <altera_avalon_jtag_uart_read+0x1f0>
    return ptr - buffer;
1010ee94:	e0fff517 	ldw	r3,-44(fp)
1010ee98:	e0bffd17 	ldw	r2,-12(fp)
1010ee9c:	1885c83a 	sub	r2,r3,r2
1010eea0:	00000606 	br	1010eebc <altera_avalon_jtag_uart_read+0x208>
  else if (flags & O_NONBLOCK)
1010eea4:	e0bfff17 	ldw	r2,-4(fp)
1010eea8:	1090000c 	andi	r2,r2,16384
1010eeac:	10000226 	beq	r2,zero,1010eeb8 <altera_avalon_jtag_uart_read+0x204>
    return -EWOULDBLOCK;
1010eeb0:	00bffd44 	movi	r2,-11
1010eeb4:	00000106 	br	1010eebc <altera_avalon_jtag_uart_read+0x208>
  else
    return -EIO;
1010eeb8:	00bffec4 	movi	r2,-5
}
1010eebc:	e037883a 	mov	sp,fp
1010eec0:	dfc00117 	ldw	ra,4(sp)
1010eec4:	df000017 	ldw	fp,0(sp)
1010eec8:	dec00204 	addi	sp,sp,8
1010eecc:	f800283a 	ret

1010eed0 <altera_avalon_jtag_uart_write>:
/* ----------------------------------------------------------- */

int 
altera_avalon_jtag_uart_write(altera_avalon_jtag_uart_state* sp, 
  const char * ptr, int count, int flags)
{
1010eed0:	defff304 	addi	sp,sp,-52
1010eed4:	dfc00c15 	stw	ra,48(sp)
1010eed8:	df000b15 	stw	fp,44(sp)
1010eedc:	df000b04 	addi	fp,sp,44
1010eee0:	e13ffc15 	stw	r4,-16(fp)
1010eee4:	e17ffd15 	stw	r5,-12(fp)
1010eee8:	e1bffe15 	stw	r6,-8(fp)
1010eeec:	e1ffff15 	stw	r7,-4(fp)
  /* Remove warning at optimisation level 03 by seting out to 0 */
  unsigned int in, out=0;
1010eef0:	e03ff515 	stw	zero,-44(fp)
  unsigned int n;
  alt_irq_context context;

  const char * start = ptr;
1010eef4:	e0bffd17 	ldw	r2,-12(fp)
1010eef8:	e0bff715 	stw	r2,-36(fp)
  ALT_SEM_PEND (sp->write_lock, 0);

  do
  {
    /* Copy as much as we can into the transmit buffer */
    while (count > 0)
1010eefc:	00003706 	br	1010efdc <altera_avalon_jtag_uart_write+0x10c>
    {
      /* We need a stable value of the out pointer to calculate the space available */
      in  = sp->tx_in;
1010ef00:	e0bffc17 	ldw	r2,-16(fp)
1010ef04:	10800c17 	ldw	r2,48(r2)
1010ef08:	e0bff915 	stw	r2,-28(fp)
      out = sp->tx_out;
1010ef0c:	e0bffc17 	ldw	r2,-16(fp)
1010ef10:	10800d17 	ldw	r2,52(r2)
1010ef14:	e0bff515 	stw	r2,-44(fp)

      if (in < out)
1010ef18:	e0fff917 	ldw	r3,-28(fp)
1010ef1c:	e0bff517 	ldw	r2,-44(fp)
1010ef20:	1880062e 	bgeu	r3,r2,1010ef3c <altera_avalon_jtag_uart_write+0x6c>
        n = out - 1 - in;
1010ef24:	e0fff517 	ldw	r3,-44(fp)
1010ef28:	e0bff917 	ldw	r2,-28(fp)
1010ef2c:	1885c83a 	sub	r2,r3,r2
1010ef30:	10bfffc4 	addi	r2,r2,-1
1010ef34:	e0bff615 	stw	r2,-40(fp)
1010ef38:	00000b06 	br	1010ef68 <altera_avalon_jtag_uart_write+0x98>
      else if (out > 0)
1010ef3c:	e0bff517 	ldw	r2,-44(fp)
1010ef40:	10000526 	beq	r2,zero,1010ef58 <altera_avalon_jtag_uart_write+0x88>
        n = ALTERA_AVALON_JTAG_UART_BUF_LEN - in;
1010ef44:	00c20004 	movi	r3,2048
1010ef48:	e0bff917 	ldw	r2,-28(fp)
1010ef4c:	1885c83a 	sub	r2,r3,r2
1010ef50:	e0bff615 	stw	r2,-40(fp)
1010ef54:	00000406 	br	1010ef68 <altera_avalon_jtag_uart_write+0x98>
      else
        n = ALTERA_AVALON_JTAG_UART_BUF_LEN - 1 - in;
1010ef58:	00c1ffc4 	movi	r3,2047
1010ef5c:	e0bff917 	ldw	r2,-28(fp)
1010ef60:	1885c83a 	sub	r2,r3,r2
1010ef64:	e0bff615 	stw	r2,-40(fp)

      if (n == 0)
1010ef68:	e0bff617 	ldw	r2,-40(fp)
1010ef6c:	10001e26 	beq	r2,zero,1010efe8 <altera_avalon_jtag_uart_write+0x118>
        break;

      if (n > count)
1010ef70:	e0fffe17 	ldw	r3,-8(fp)
1010ef74:	e0bff617 	ldw	r2,-40(fp)
1010ef78:	1880022e 	bgeu	r3,r2,1010ef84 <altera_avalon_jtag_uart_write+0xb4>
        n = count;
1010ef7c:	e0bffe17 	ldw	r2,-8(fp)
1010ef80:	e0bff615 	stw	r2,-40(fp)

      memcpy(sp->tx_buf + in, ptr, n);
1010ef84:	e0bffc17 	ldw	r2,-16(fp)
1010ef88:	10c20e04 	addi	r3,r2,2104
1010ef8c:	e0bff917 	ldw	r2,-28(fp)
1010ef90:	1885883a 	add	r2,r3,r2
1010ef94:	e1bff617 	ldw	r6,-40(fp)
1010ef98:	e17ffd17 	ldw	r5,-12(fp)
1010ef9c:	1009883a 	mov	r4,r2
1010efa0:	0106ecc0 	call	10106ecc <memcpy>
      ptr   += n;
1010efa4:	e0fffd17 	ldw	r3,-12(fp)
1010efa8:	e0bff617 	ldw	r2,-40(fp)
1010efac:	1885883a 	add	r2,r3,r2
1010efb0:	e0bffd15 	stw	r2,-12(fp)
      count -= n;
1010efb4:	e0fffe17 	ldw	r3,-8(fp)
1010efb8:	e0bff617 	ldw	r2,-40(fp)
1010efbc:	1885c83a 	sub	r2,r3,r2
1010efc0:	e0bffe15 	stw	r2,-8(fp)

      sp->tx_in = (in + n) % ALTERA_AVALON_JTAG_UART_BUF_LEN;
1010efc4:	e0fff917 	ldw	r3,-28(fp)
1010efc8:	e0bff617 	ldw	r2,-40(fp)
1010efcc:	1885883a 	add	r2,r3,r2
1010efd0:	10c1ffcc 	andi	r3,r2,2047
1010efd4:	e0bffc17 	ldw	r2,-16(fp)
1010efd8:	10c00c15 	stw	r3,48(r2)
  ALT_SEM_PEND (sp->write_lock, 0);

  do
  {
    /* Copy as much as we can into the transmit buffer */
    while (count > 0)
1010efdc:	e0bffe17 	ldw	r2,-8(fp)
1010efe0:	00bfc716 	blt	zero,r2,1010ef00 <altera_avalon_jtag_uart_write+0x30>
1010efe4:	00000106 	br	1010efec <altera_avalon_jtag_uart_write+0x11c>
        n = ALTERA_AVALON_JTAG_UART_BUF_LEN - in;
      else
        n = ALTERA_AVALON_JTAG_UART_BUF_LEN - 1 - in;

      if (n == 0)
        break;
1010efe8:	0001883a 	nop
static ALT_INLINE alt_irq_context ALT_ALWAYS_INLINE 
       alt_irq_disable_all (void)
{
  alt_irq_context context;

  NIOS2_READ_STATUS (context);
1010efec:	0005303a 	rdctl	r2,status
1010eff0:	e0bffb15 	stw	r2,-20(fp)

  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
1010eff4:	e0fffb17 	ldw	r3,-20(fp)
1010eff8:	00bfff84 	movi	r2,-2
1010effc:	1884703a 	and	r2,r3,r2
1010f000:	1001703a 	wrctl	status,r2
  
  return context;
1010f004:	e0bffb17 	ldw	r2,-20(fp)
     * to enable interrupts if there is no space left in the FIFO
     *
     * For now kick the interrupt routine every time to make it transmit 
     * the data 
     */
    context = alt_irq_disable_all();
1010f008:	e0bffa15 	stw	r2,-24(fp)
    sp->irq_enable |= ALTERA_AVALON_JTAG_UART_CONTROL_WE_MSK;
1010f00c:	e0bffc17 	ldw	r2,-16(fp)
1010f010:	10800817 	ldw	r2,32(r2)
1010f014:	10c00094 	ori	r3,r2,2
1010f018:	e0bffc17 	ldw	r2,-16(fp)
1010f01c:	10c00815 	stw	r3,32(r2)
    IOWR_ALTERA_AVALON_JTAG_UART_CONTROL(sp->base, sp->irq_enable);
1010f020:	e0bffc17 	ldw	r2,-16(fp)
1010f024:	10800017 	ldw	r2,0(r2)
1010f028:	10800104 	addi	r2,r2,4
1010f02c:	1007883a 	mov	r3,r2
1010f030:	e0bffc17 	ldw	r2,-16(fp)
1010f034:	10800817 	ldw	r2,32(r2)
1010f038:	18800035 	stwio	r2,0(r3)
1010f03c:	e0bffa17 	ldw	r2,-24(fp)
1010f040:	e0bff815 	stw	r2,-32(fp)
  status &= ~NIOS2_STATUS_PIE_MSK;
  status |= (context & NIOS2_STATUS_PIE_MSK);
  
  NIOS2_WRITE_STATUS (status);
#else
  NIOS2_WRITE_STATUS (context);
1010f044:	e0bff817 	ldw	r2,-32(fp)
1010f048:	1001703a 	wrctl	status,r2
    /* 
     * If there is any data left then either return now or block until 
     * some has been sent 
     */
    /* consider: test whether there is anything there while doing this and delay for at most 2s. */
    if (count > 0)
1010f04c:	e0bffe17 	ldw	r2,-8(fp)
1010f050:	0080100e 	bge	zero,r2,1010f094 <altera_avalon_jtag_uart_write+0x1c4>
    {
      if (flags & O_NONBLOCK)
1010f054:	e0bfff17 	ldw	r2,-4(fp)
1010f058:	1090000c 	andi	r2,r2,16384
1010f05c:	1000101e 	bne	r2,zero,1010f0a0 <altera_avalon_jtag_uart_write+0x1d0>
      /*
       * No OS present: Always wait for data to be removed from buffer.  Once
       * the interrupt routine has removed some data then we will be able to
       * insert some more.
       */
      while (out == sp->tx_out && sp->host_inactive < sp->timeout)
1010f060:	0001883a 	nop
1010f064:	e0bffc17 	ldw	r2,-16(fp)
1010f068:	10c00d17 	ldw	r3,52(r2)
1010f06c:	e0bff517 	ldw	r2,-44(fp)
1010f070:	1880051e 	bne	r3,r2,1010f088 <altera_avalon_jtag_uart_write+0x1b8>
1010f074:	e0bffc17 	ldw	r2,-16(fp)
1010f078:	10c00917 	ldw	r3,36(r2)
1010f07c:	e0bffc17 	ldw	r2,-16(fp)
1010f080:	10800117 	ldw	r2,4(r2)
1010f084:	18bff736 	bltu	r3,r2,1010f064 <altera_avalon_jtag_uart_write+0x194>
        ;
#endif /* __ucosii__ */

      if  (sp->host_inactive)
1010f088:	e0bffc17 	ldw	r2,-16(fp)
1010f08c:	10800917 	ldw	r2,36(r2)
1010f090:	1000051e 	bne	r2,zero,1010f0a8 <altera_avalon_jtag_uart_write+0x1d8>
         break;
    }
  }
  while (count > 0);
1010f094:	e0bffe17 	ldw	r2,-8(fp)
1010f098:	00bfd016 	blt	zero,r2,1010efdc <altera_avalon_jtag_uart_write+0x10c>
1010f09c:	00000306 	br	1010f0ac <altera_avalon_jtag_uart_write+0x1dc>
     */
    /* consider: test whether there is anything there while doing this and delay for at most 2s. */
    if (count > 0)
    {
      if (flags & O_NONBLOCK)
        break;
1010f0a0:	0001883a 	nop
1010f0a4:	00000106 	br	1010f0ac <altera_avalon_jtag_uart_write+0x1dc>
      while (out == sp->tx_out && sp->host_inactive < sp->timeout)
        ;
#endif /* __ucosii__ */

      if  (sp->host_inactive)
         break;
1010f0a8:	0001883a 	nop
   * Now that access to the circular buffer is complete, release the write
   * semaphore so that other threads can access the buffer.
   */
  ALT_SEM_POST (sp->write_lock);

  if (ptr != start)
1010f0ac:	e0fffd17 	ldw	r3,-12(fp)
1010f0b0:	e0bff717 	ldw	r2,-36(fp)
1010f0b4:	18800426 	beq	r3,r2,1010f0c8 <altera_avalon_jtag_uart_write+0x1f8>
    return ptr - start;
1010f0b8:	e0fffd17 	ldw	r3,-12(fp)
1010f0bc:	e0bff717 	ldw	r2,-36(fp)
1010f0c0:	1885c83a 	sub	r2,r3,r2
1010f0c4:	00000606 	br	1010f0e0 <altera_avalon_jtag_uart_write+0x210>
  else if (flags & O_NONBLOCK)
1010f0c8:	e0bfff17 	ldw	r2,-4(fp)
1010f0cc:	1090000c 	andi	r2,r2,16384
1010f0d0:	10000226 	beq	r2,zero,1010f0dc <altera_avalon_jtag_uart_write+0x20c>
    return -EWOULDBLOCK;
1010f0d4:	00bffd44 	movi	r2,-11
1010f0d8:	00000106 	br	1010f0e0 <altera_avalon_jtag_uart_write+0x210>
    sp->tx_out = sp->tx_in = 0;
    return ptr - start + count;
  }
#endif
  else
    return -EIO; /* Host not connected */
1010f0dc:	00bffec4 	movi	r2,-5
}
1010f0e0:	e037883a 	mov	sp,fp
1010f0e4:	dfc00117 	ldw	ra,4(sp)
1010f0e8:	df000017 	ldw	fp,0(sp)
1010f0ec:	dec00204 	addi	sp,sp,8
1010f0f0:	f800283a 	ret

1010f0f4 <alt_alarm_start>:
 */ 

int alt_alarm_start (alt_alarm* alarm, alt_u32 nticks,
                     alt_u32 (*callback) (void* context),
                     void* context)
{
1010f0f4:	defff504 	addi	sp,sp,-44
1010f0f8:	df000a15 	stw	fp,40(sp)
1010f0fc:	df000a04 	addi	fp,sp,40
1010f100:	e13ffc15 	stw	r4,-16(fp)
1010f104:	e17ffd15 	stw	r5,-12(fp)
1010f108:	e1bffe15 	stw	r6,-8(fp)
1010f10c:	e1ffff15 	stw	r7,-4(fp)
  alt_irq_context irq_context;
  alt_u32 current_nticks = 0;
1010f110:	e03ff615 	stw	zero,-40(fp)
1010f114:	d0a6d817 	ldw	r2,-25760(gp)
  
  if (alt_ticks_per_second ())
1010f118:	10003c26 	beq	r2,zero,1010f20c <alt_alarm_start+0x118>
  {
    if (alarm)
1010f11c:	e0bffc17 	ldw	r2,-16(fp)
1010f120:	10003826 	beq	r2,zero,1010f204 <alt_alarm_start+0x110>
    {
      alarm->callback = callback;
1010f124:	e0bffc17 	ldw	r2,-16(fp)
1010f128:	e0fffe17 	ldw	r3,-8(fp)
1010f12c:	10c00315 	stw	r3,12(r2)
      alarm->context  = context;
1010f130:	e0bffc17 	ldw	r2,-16(fp)
1010f134:	e0ffff17 	ldw	r3,-4(fp)
1010f138:	10c00515 	stw	r3,20(r2)
static ALT_INLINE alt_irq_context ALT_ALWAYS_INLINE 
       alt_irq_disable_all (void)
{
  alt_irq_context context;

  NIOS2_READ_STATUS (context);
1010f13c:	0005303a 	rdctl	r2,status
1010f140:	e0bff915 	stw	r2,-28(fp)

  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
1010f144:	e0fff917 	ldw	r3,-28(fp)
1010f148:	00bfff84 	movi	r2,-2
1010f14c:	1884703a 	and	r2,r3,r2
1010f150:	1001703a 	wrctl	status,r2
  
  return context;
1010f154:	e0bff917 	ldw	r2,-28(fp)
 
      irq_context = alt_irq_disable_all ();
1010f158:	e0bff815 	stw	r2,-32(fp)
 * alt_nticks() returns the elapsed number of system clock ticks since reset.
 */

static ALT_INLINE alt_u32 ALT_ALWAYS_INLINE alt_nticks (void)
{
  return _alt_nticks;
1010f15c:	d0a6d917 	ldw	r2,-25756(gp)
      
      current_nticks = alt_nticks();
1010f160:	e0bff615 	stw	r2,-40(fp)
      
      alarm->time = nticks + current_nticks + 1; 
1010f164:	e0fffd17 	ldw	r3,-12(fp)
1010f168:	e0bff617 	ldw	r2,-40(fp)
1010f16c:	1885883a 	add	r2,r3,r2
1010f170:	10c00044 	addi	r3,r2,1
1010f174:	e0bffc17 	ldw	r2,-16(fp)
1010f178:	10c00215 	stw	r3,8(r2)
      /* 
       * If the desired alarm time causes a roll-over, set the rollover
       * flag. This will prevent the subsequent tick event from causing
       * an alarm too early.
       */
      if(alarm->time < current_nticks)
1010f17c:	e0bffc17 	ldw	r2,-16(fp)
1010f180:	10c00217 	ldw	r3,8(r2)
1010f184:	e0bff617 	ldw	r2,-40(fp)
1010f188:	1880042e 	bgeu	r3,r2,1010f19c <alt_alarm_start+0xa8>
      {
        alarm->rollover = 1;
1010f18c:	e0bffc17 	ldw	r2,-16(fp)
1010f190:	00c00044 	movi	r3,1
1010f194:	10c00405 	stb	r3,16(r2)
1010f198:	00000206 	br	1010f1a4 <alt_alarm_start+0xb0>
      }
      else
      {
        alarm->rollover = 0;
1010f19c:	e0bffc17 	ldw	r2,-16(fp)
1010f1a0:	10000405 	stb	zero,16(r2)
      }
    
      alt_llist_insert (&alt_alarm_list, &alarm->llist);
1010f1a4:	e0bffc17 	ldw	r2,-16(fp)
1010f1a8:	d0e00e04 	addi	r3,gp,-32712
1010f1ac:	e0fffa15 	stw	r3,-24(fp)
1010f1b0:	e0bffb15 	stw	r2,-20(fp)
 */

static ALT_INLINE void ALT_ALWAYS_INLINE alt_llist_insert(alt_llist* list, 
                alt_llist* entry)
{
  entry->previous = list;
1010f1b4:	e0bffb17 	ldw	r2,-20(fp)
1010f1b8:	e0fffa17 	ldw	r3,-24(fp)
1010f1bc:	10c00115 	stw	r3,4(r2)
  entry->next     = list->next;
1010f1c0:	e0bffa17 	ldw	r2,-24(fp)
1010f1c4:	10c00017 	ldw	r3,0(r2)
1010f1c8:	e0bffb17 	ldw	r2,-20(fp)
1010f1cc:	10c00015 	stw	r3,0(r2)

  list->next->previous = entry;
1010f1d0:	e0bffa17 	ldw	r2,-24(fp)
1010f1d4:	10800017 	ldw	r2,0(r2)
1010f1d8:	e0fffb17 	ldw	r3,-20(fp)
1010f1dc:	10c00115 	stw	r3,4(r2)
  list->next           = entry;
1010f1e0:	e0bffa17 	ldw	r2,-24(fp)
1010f1e4:	e0fffb17 	ldw	r3,-20(fp)
1010f1e8:	10c00015 	stw	r3,0(r2)
1010f1ec:	e0bff817 	ldw	r2,-32(fp)
1010f1f0:	e0bff715 	stw	r2,-36(fp)
  status &= ~NIOS2_STATUS_PIE_MSK;
  status |= (context & NIOS2_STATUS_PIE_MSK);
  
  NIOS2_WRITE_STATUS (status);
#else
  NIOS2_WRITE_STATUS (context);
1010f1f4:	e0bff717 	ldw	r2,-36(fp)
1010f1f8:	1001703a 	wrctl	status,r2
      alt_irq_enable_all (irq_context);

      return 0;
1010f1fc:	0005883a 	mov	r2,zero
1010f200:	00000306 	br	1010f210 <alt_alarm_start+0x11c>
    }
    else
    {
      return -EINVAL;
1010f204:	00bffa84 	movi	r2,-22
1010f208:	00000106 	br	1010f210 <alt_alarm_start+0x11c>
    }
  }
  else
  {
    return -ENOTSUP;
1010f20c:	00bfde84 	movi	r2,-134
  }
}
1010f210:	e037883a 	mov	sp,fp
1010f214:	df000017 	ldw	fp,0(sp)
1010f218:	dec00104 	addi	sp,sp,4
1010f21c:	f800283a 	ret

1010f220 <alt_dcache_flush_all>:
/*
 * alt_dcache_flush_all() is called to flush the entire data cache.
 */

void alt_dcache_flush_all (void)
{
1010f220:	defffe04 	addi	sp,sp,-8
1010f224:	df000115 	stw	fp,4(sp)
1010f228:	df000104 	addi	fp,sp,4
#if NIOS2_DCACHE_SIZE > 0
  char* i;
  
  for (i = (char*) 0; i < (char*) NIOS2_DCACHE_SIZE; i+= NIOS2_DCACHE_LINE_SIZE)
1010f22c:	e03fff15 	stw	zero,-4(fp)
1010f230:	00000506 	br	1010f248 <alt_dcache_flush_all+0x28>
  { 
    __asm__ volatile ("flushd (%0)" :: "r" (i));
1010f234:	e0bfff17 	ldw	r2,-4(fp)
1010f238:	1000003b 	flushd	0(r2)
void alt_dcache_flush_all (void)
{
#if NIOS2_DCACHE_SIZE > 0
  char* i;
  
  for (i = (char*) 0; i < (char*) NIOS2_DCACHE_SIZE; i+= NIOS2_DCACHE_LINE_SIZE)
1010f23c:	e0bfff17 	ldw	r2,-4(fp)
1010f240:	10800804 	addi	r2,r2,32
1010f244:	e0bfff15 	stw	r2,-4(fp)
1010f248:	e0bfff17 	ldw	r2,-4(fp)
1010f24c:	10820030 	cmpltui	r2,r2,2048
1010f250:	103ff81e 	bne	r2,zero,1010f234 <alt_dcache_flush_all+0x14>
  { 
    __asm__ volatile ("flushd (%0)" :: "r" (i));
  }
#endif /* NIOS2_DCACHE_SIZE > 0 */
}
1010f254:	0001883a 	nop
1010f258:	e037883a 	mov	sp,fp
1010f25c:	df000017 	ldw	fp,0(sp)
1010f260:	dec00104 	addi	sp,sp,4
1010f264:	f800283a 	ret

1010f268 <alt_get_errno>:
#undef errno

extern int errno;

static ALT_INLINE int* alt_get_errno(void)
{
1010f268:	defffe04 	addi	sp,sp,-8
1010f26c:	dfc00115 	stw	ra,4(sp)
1010f270:	df000015 	stw	fp,0(sp)
1010f274:	d839883a 	mov	fp,sp
  return ((alt_errno) ? alt_errno() : &errno);
1010f278:	d0a00b17 	ldw	r2,-32724(gp)
1010f27c:	10000326 	beq	r2,zero,1010f28c <alt_get_errno+0x24>
1010f280:	d0a00b17 	ldw	r2,-32724(gp)
1010f284:	103ee83a 	callr	r2
1010f288:	00000106 	br	1010f290 <alt_get_errno+0x28>
1010f28c:	d0a6cc04 	addi	r2,gp,-25808
}
1010f290:	e037883a 	mov	sp,fp
1010f294:	dfc00117 	ldw	ra,4(sp)
1010f298:	df000017 	ldw	fp,0(sp)
1010f29c:	dec00204 	addi	sp,sp,8
1010f2a0:	f800283a 	ret

1010f2a4 <alt_dev_llist_insert>:
/*
 *
 */

int alt_dev_llist_insert (alt_dev_llist* dev, alt_llist* list)
{
1010f2a4:	defffa04 	addi	sp,sp,-24
1010f2a8:	dfc00515 	stw	ra,20(sp)
1010f2ac:	df000415 	stw	fp,16(sp)
1010f2b0:	df000404 	addi	fp,sp,16
1010f2b4:	e13ffe15 	stw	r4,-8(fp)
1010f2b8:	e17fff15 	stw	r5,-4(fp)
  /*
   * check that the device exists, and that it has a valid name.
   */

  if (!dev || !dev->name)
1010f2bc:	e0bffe17 	ldw	r2,-8(fp)
1010f2c0:	10000326 	beq	r2,zero,1010f2d0 <alt_dev_llist_insert+0x2c>
1010f2c4:	e0bffe17 	ldw	r2,-8(fp)
1010f2c8:	10800217 	ldw	r2,8(r2)
1010f2cc:	1000061e 	bne	r2,zero,1010f2e8 <alt_dev_llist_insert+0x44>
  {
    ALT_ERRNO = EINVAL;
1010f2d0:	010f2680 	call	1010f268 <alt_get_errno>
1010f2d4:	1007883a 	mov	r3,r2
1010f2d8:	00800584 	movi	r2,22
1010f2dc:	18800015 	stw	r2,0(r3)
    return -EINVAL;
1010f2e0:	00bffa84 	movi	r2,-22
1010f2e4:	00001306 	br	1010f334 <alt_dev_llist_insert+0x90>
  
  /*
   * register the device.
   */
  
  alt_llist_insert(list, &dev->llist);
1010f2e8:	e0bffe17 	ldw	r2,-8(fp)
1010f2ec:	e0ffff17 	ldw	r3,-4(fp)
1010f2f0:	e0fffc15 	stw	r3,-16(fp)
1010f2f4:	e0bffd15 	stw	r2,-12(fp)
 */

static ALT_INLINE void ALT_ALWAYS_INLINE alt_llist_insert(alt_llist* list, 
                alt_llist* entry)
{
  entry->previous = list;
1010f2f8:	e0bffd17 	ldw	r2,-12(fp)
1010f2fc:	e0fffc17 	ldw	r3,-16(fp)
1010f300:	10c00115 	stw	r3,4(r2)
  entry->next     = list->next;
1010f304:	e0bffc17 	ldw	r2,-16(fp)
1010f308:	10c00017 	ldw	r3,0(r2)
1010f30c:	e0bffd17 	ldw	r2,-12(fp)
1010f310:	10c00015 	stw	r3,0(r2)

  list->next->previous = entry;
1010f314:	e0bffc17 	ldw	r2,-16(fp)
1010f318:	10800017 	ldw	r2,0(r2)
1010f31c:	e0fffd17 	ldw	r3,-12(fp)
1010f320:	10c00115 	stw	r3,4(r2)
  list->next           = entry;
1010f324:	e0bffc17 	ldw	r2,-16(fp)
1010f328:	e0fffd17 	ldw	r3,-12(fp)
1010f32c:	10c00015 	stw	r3,0(r2)

  return 0;  
1010f330:	0005883a 	mov	r2,zero
}
1010f334:	e037883a 	mov	sp,fp
1010f338:	dfc00117 	ldw	ra,4(sp)
1010f33c:	df000017 	ldw	fp,0(sp)
1010f340:	dec00204 	addi	sp,sp,8
1010f344:	f800283a 	ret

1010f348 <_do_ctors>:
/*
 * Run the C++ static constructors.
 */

void _do_ctors(void)
{
1010f348:	defffd04 	addi	sp,sp,-12
1010f34c:	dfc00215 	stw	ra,8(sp)
1010f350:	df000115 	stw	fp,4(sp)
1010f354:	df000104 	addi	fp,sp,4
  constructor* ctor;

  for (ctor = &__CTOR_END__[-1]; ctor >= __CTOR_LIST__; ctor--)
1010f358:	00840474 	movhi	r2,4113
1010f35c:	10bf8f04 	addi	r2,r2,-452
1010f360:	e0bfff15 	stw	r2,-4(fp)
1010f364:	00000606 	br	1010f380 <_do_ctors+0x38>
        (*ctor) (); 
1010f368:	e0bfff17 	ldw	r2,-4(fp)
1010f36c:	10800017 	ldw	r2,0(r2)
1010f370:	103ee83a 	callr	r2

void _do_ctors(void)
{
  constructor* ctor;

  for (ctor = &__CTOR_END__[-1]; ctor >= __CTOR_LIST__; ctor--)
1010f374:	e0bfff17 	ldw	r2,-4(fp)
1010f378:	10bfff04 	addi	r2,r2,-4
1010f37c:	e0bfff15 	stw	r2,-4(fp)
1010f380:	e0ffff17 	ldw	r3,-4(fp)
1010f384:	00840474 	movhi	r2,4113
1010f388:	10bf9004 	addi	r2,r2,-448
1010f38c:	18bff62e 	bgeu	r3,r2,1010f368 <_do_ctors+0x20>
        (*ctor) (); 
}
1010f390:	0001883a 	nop
1010f394:	e037883a 	mov	sp,fp
1010f398:	dfc00117 	ldw	ra,4(sp)
1010f39c:	df000017 	ldw	fp,0(sp)
1010f3a0:	dec00204 	addi	sp,sp,8
1010f3a4:	f800283a 	ret

1010f3a8 <_do_dtors>:
/*
 * Run the C++ static destructors.
 */

void _do_dtors(void)
{
1010f3a8:	defffd04 	addi	sp,sp,-12
1010f3ac:	dfc00215 	stw	ra,8(sp)
1010f3b0:	df000115 	stw	fp,4(sp)
1010f3b4:	df000104 	addi	fp,sp,4
  destructor* dtor;

  for (dtor = &__DTOR_END__[-1]; dtor >= __DTOR_LIST__; dtor--)
1010f3b8:	00840474 	movhi	r2,4113
1010f3bc:	10bf8f04 	addi	r2,r2,-452
1010f3c0:	e0bfff15 	stw	r2,-4(fp)
1010f3c4:	00000606 	br	1010f3e0 <_do_dtors+0x38>
        (*dtor) (); 
1010f3c8:	e0bfff17 	ldw	r2,-4(fp)
1010f3cc:	10800017 	ldw	r2,0(r2)
1010f3d0:	103ee83a 	callr	r2

void _do_dtors(void)
{
  destructor* dtor;

  for (dtor = &__DTOR_END__[-1]; dtor >= __DTOR_LIST__; dtor--)
1010f3d4:	e0bfff17 	ldw	r2,-4(fp)
1010f3d8:	10bfff04 	addi	r2,r2,-4
1010f3dc:	e0bfff15 	stw	r2,-4(fp)
1010f3e0:	e0ffff17 	ldw	r3,-4(fp)
1010f3e4:	00840474 	movhi	r2,4113
1010f3e8:	10bf9004 	addi	r2,r2,-448
1010f3ec:	18bff62e 	bgeu	r3,r2,1010f3c8 <_do_dtors+0x20>
        (*dtor) (); 
}
1010f3f0:	0001883a 	nop
1010f3f4:	e037883a 	mov	sp,fp
1010f3f8:	dfc00117 	ldw	ra,4(sp)
1010f3fc:	df000017 	ldw	fp,0(sp)
1010f400:	dec00204 	addi	sp,sp,8
1010f404:	f800283a 	ret

1010f408 <alt_find_dev>:
 * "name" must be an exact match for the devices registered name for a match to
 * be found.
 */
 
alt_dev* alt_find_dev(const char* name, alt_llist* llist)
{
1010f408:	defffa04 	addi	sp,sp,-24
1010f40c:	dfc00515 	stw	ra,20(sp)
1010f410:	df000415 	stw	fp,16(sp)
1010f414:	df000404 	addi	fp,sp,16
1010f418:	e13ffe15 	stw	r4,-8(fp)
1010f41c:	e17fff15 	stw	r5,-4(fp)
  alt_dev* next = (alt_dev*) llist->next;
1010f420:	e0bfff17 	ldw	r2,-4(fp)
1010f424:	10800017 	ldw	r2,0(r2)
1010f428:	e0bffc15 	stw	r2,-16(fp)
  alt_32 len;

  len  = strlen(name) + 1;
1010f42c:	e13ffe17 	ldw	r4,-8(fp)
1010f430:	01028f80 	call	101028f8 <strlen>
1010f434:	10800044 	addi	r2,r2,1
1010f438:	e0bffd15 	stw	r2,-12(fp)
  /*
   * Check each list entry in turn, until a match is found, or we reach the
   * end of the list (i.e. next winds up pointing back to the list head).
   */ 

  while (next != (alt_dev*) llist)
1010f43c:	00000d06 	br	1010f474 <alt_find_dev+0x6c>
    /* 
     * memcmp() is used here rather than strcmp() in order to reduce the size
     * of the executable.
     */

    if (!memcmp (next->name, name, len))
1010f440:	e0bffc17 	ldw	r2,-16(fp)
1010f444:	10800217 	ldw	r2,8(r2)
1010f448:	e0fffd17 	ldw	r3,-12(fp)
1010f44c:	180d883a 	mov	r6,r3
1010f450:	e17ffe17 	ldw	r5,-8(fp)
1010f454:	1009883a 	mov	r4,r2
1010f458:	010faf80 	call	1010faf8 <memcmp>
1010f45c:	1000021e 	bne	r2,zero,1010f468 <alt_find_dev+0x60>
    {
      /* match found */

      return next;
1010f460:	e0bffc17 	ldw	r2,-16(fp)
1010f464:	00000706 	br	1010f484 <alt_find_dev+0x7c>
    }
    next = (alt_dev*) next->llist.next;
1010f468:	e0bffc17 	ldw	r2,-16(fp)
1010f46c:	10800017 	ldw	r2,0(r2)
1010f470:	e0bffc15 	stw	r2,-16(fp)
  /*
   * Check each list entry in turn, until a match is found, or we reach the
   * end of the list (i.e. next winds up pointing back to the list head).
   */ 

  while (next != (alt_dev*) llist)
1010f474:	e0fffc17 	ldw	r3,-16(fp)
1010f478:	e0bfff17 	ldw	r2,-4(fp)
1010f47c:	18bff01e 	bne	r3,r2,1010f440 <alt_find_dev+0x38>
    next = (alt_dev*) next->llist.next;
  }
  
  /* No match found */
  
  return NULL;
1010f480:	0005883a 	mov	r2,zero
}
1010f484:	e037883a 	mov	sp,fp
1010f488:	dfc00117 	ldw	ra,4(sp)
1010f48c:	df000017 	ldw	fp,0(sp)
1010f490:	dec00204 	addi	sp,sp,8
1010f494:	f800283a 	ret

1010f498 <alt_find_file>:
 * either '/' or '\0' is the prefix of the filename. For example the filename:
 * "/myfilesystem/junk.txt" would match: "/myfilesystem", but not: "/myfile". 
 */
 
alt_dev* alt_find_file (const char* name)
{
1010f498:	defffb04 	addi	sp,sp,-20
1010f49c:	dfc00415 	stw	ra,16(sp)
1010f4a0:	df000315 	stw	fp,12(sp)
1010f4a4:	df000304 	addi	fp,sp,12
1010f4a8:	e13fff15 	stw	r4,-4(fp)
  alt_dev* next = (alt_dev*) alt_fs_list.next;   
1010f4ac:	d0a00617 	ldw	r2,-32744(gp)
1010f4b0:	e0bffd15 	stw	r2,-12(fp)
  /*
   * Check each list entry in turn, until a match is found, or we reach the
   * end of the list (i.e. next winds up pointing back to the list head).
   */ 
 
  while (next != (alt_dev*) &alt_fs_list)
1010f4b4:	00003106 	br	1010f57c <alt_find_file+0xe4>
  {
    len = strlen(next->name);
1010f4b8:	e0bffd17 	ldw	r2,-12(fp)
1010f4bc:	10800217 	ldw	r2,8(r2)
1010f4c0:	1009883a 	mov	r4,r2
1010f4c4:	01028f80 	call	101028f8 <strlen>
1010f4c8:	e0bffe15 	stw	r2,-8(fp)
    
    if (next->name[len-1] == '/')
1010f4cc:	e0bffd17 	ldw	r2,-12(fp)
1010f4d0:	10c00217 	ldw	r3,8(r2)
1010f4d4:	e0bffe17 	ldw	r2,-8(fp)
1010f4d8:	10bfffc4 	addi	r2,r2,-1
1010f4dc:	1885883a 	add	r2,r3,r2
1010f4e0:	10800003 	ldbu	r2,0(r2)
1010f4e4:	10803fcc 	andi	r2,r2,255
1010f4e8:	1080201c 	xori	r2,r2,128
1010f4ec:	10bfe004 	addi	r2,r2,-128
1010f4f0:	10800bd8 	cmpnei	r2,r2,47
1010f4f4:	1000031e 	bne	r2,zero,1010f504 <alt_find_file+0x6c>
    {
      len -= 1;
1010f4f8:	e0bffe17 	ldw	r2,-8(fp)
1010f4fc:	10bfffc4 	addi	r2,r2,-1
1010f500:	e0bffe15 	stw	r2,-8(fp)
    }

    if (((name[len] == '/') || (name[len] == '\0')) && 
1010f504:	e0bffe17 	ldw	r2,-8(fp)
1010f508:	e0ffff17 	ldw	r3,-4(fp)
1010f50c:	1885883a 	add	r2,r3,r2
1010f510:	10800003 	ldbu	r2,0(r2)
1010f514:	10803fcc 	andi	r2,r2,255
1010f518:	1080201c 	xori	r2,r2,128
1010f51c:	10bfe004 	addi	r2,r2,-128
1010f520:	10800be0 	cmpeqi	r2,r2,47
1010f524:	1000081e 	bne	r2,zero,1010f548 <alt_find_file+0xb0>
1010f528:	e0bffe17 	ldw	r2,-8(fp)
1010f52c:	e0ffff17 	ldw	r3,-4(fp)
1010f530:	1885883a 	add	r2,r3,r2
1010f534:	10800003 	ldbu	r2,0(r2)
1010f538:	10803fcc 	andi	r2,r2,255
1010f53c:	1080201c 	xori	r2,r2,128
1010f540:	10bfe004 	addi	r2,r2,-128
1010f544:	10000a1e 	bne	r2,zero,1010f570 <alt_find_file+0xd8>
        !memcmp (next->name, name, len))
1010f548:	e0bffd17 	ldw	r2,-12(fp)
1010f54c:	10800217 	ldw	r2,8(r2)
1010f550:	e0fffe17 	ldw	r3,-8(fp)
1010f554:	180d883a 	mov	r6,r3
1010f558:	e17fff17 	ldw	r5,-4(fp)
1010f55c:	1009883a 	mov	r4,r2
1010f560:	010faf80 	call	1010faf8 <memcmp>
    if (next->name[len-1] == '/')
    {
      len -= 1;
    }

    if (((name[len] == '/') || (name[len] == '\0')) && 
1010f564:	1000021e 	bne	r2,zero,1010f570 <alt_find_file+0xd8>
        !memcmp (next->name, name, len))
    {
      /* match found */

      return next;
1010f568:	e0bffd17 	ldw	r2,-12(fp)
1010f56c:	00000706 	br	1010f58c <alt_find_file+0xf4>
    }
    next = (alt_dev*) next->llist.next;
1010f570:	e0bffd17 	ldw	r2,-12(fp)
1010f574:	10800017 	ldw	r2,0(r2)
1010f578:	e0bffd15 	stw	r2,-12(fp)
  /*
   * Check each list entry in turn, until a match is found, or we reach the
   * end of the list (i.e. next winds up pointing back to the list head).
   */ 
 
  while (next != (alt_dev*) &alt_fs_list)
1010f57c:	e0fffd17 	ldw	r3,-12(fp)
1010f580:	d0a00604 	addi	r2,gp,-32744
1010f584:	18bfcc1e 	bne	r3,r2,1010f4b8 <alt_find_file+0x20>
    next = (alt_dev*) next->llist.next;
  }
  
  /* No match found */
  
  return NULL;     
1010f588:	0005883a 	mov	r2,zero
}
1010f58c:	e037883a 	mov	sp,fp
1010f590:	dfc00117 	ldw	ra,4(sp)
1010f594:	df000017 	ldw	fp,0(sp)
1010f598:	dec00204 	addi	sp,sp,8
1010f59c:	f800283a 	ret

1010f5a0 <alt_get_fd>:
 * the offset of the file descriptor within the file descriptor array). A
 * negative value indicates failure.
 */

int alt_get_fd (alt_dev* dev)
{
1010f5a0:	defffc04 	addi	sp,sp,-16
1010f5a4:	df000315 	stw	fp,12(sp)
1010f5a8:	df000304 	addi	fp,sp,12
1010f5ac:	e13fff15 	stw	r4,-4(fp)
  alt_32 i;
  int rc = -EMFILE;
1010f5b0:	00bffa04 	movi	r2,-24
1010f5b4:	e0bffe15 	stw	r2,-8(fp)
   * indicates the highest file descriptor ever allocated. This is used to
   * improve efficency when searching the file descriptor list, and 
   * therefore reduce contention on the alt_fd_list_lock semaphore. 
   */

  for (i = 0; i < ALT_MAX_FD; i++)
1010f5b8:	e03ffd15 	stw	zero,-12(fp)
1010f5bc:	00001906 	br	1010f624 <alt_get_fd+0x84>
  {
    if (!alt_fd_list[i].dev)
1010f5c0:	00840474 	movhi	r2,4113
1010f5c4:	1082a004 	addi	r2,r2,2688
1010f5c8:	e0fffd17 	ldw	r3,-12(fp)
1010f5cc:	18c00324 	muli	r3,r3,12
1010f5d0:	10c5883a 	add	r2,r2,r3
1010f5d4:	10800017 	ldw	r2,0(r2)
1010f5d8:	10000f1e 	bne	r2,zero,1010f618 <alt_get_fd+0x78>
    {
      alt_fd_list[i].dev = dev;
1010f5dc:	00840474 	movhi	r2,4113
1010f5e0:	1082a004 	addi	r2,r2,2688
1010f5e4:	e0fffd17 	ldw	r3,-12(fp)
1010f5e8:	18c00324 	muli	r3,r3,12
1010f5ec:	10c5883a 	add	r2,r2,r3
1010f5f0:	e0ffff17 	ldw	r3,-4(fp)
1010f5f4:	10c00015 	stw	r3,0(r2)
      if (i > alt_max_fd)
1010f5f8:	d0e00a17 	ldw	r3,-32728(gp)
1010f5fc:	e0bffd17 	ldw	r2,-12(fp)
1010f600:	1880020e 	bge	r3,r2,1010f60c <alt_get_fd+0x6c>
      {
        alt_max_fd = i;
1010f604:	e0bffd17 	ldw	r2,-12(fp)
1010f608:	d0a00a15 	stw	r2,-32728(gp)
      }
      rc = i;
1010f60c:	e0bffd17 	ldw	r2,-12(fp)
1010f610:	e0bffe15 	stw	r2,-8(fp)
      goto alt_get_fd_exit;
1010f614:	00000606 	br	1010f630 <alt_get_fd+0x90>
   * indicates the highest file descriptor ever allocated. This is used to
   * improve efficency when searching the file descriptor list, and 
   * therefore reduce contention on the alt_fd_list_lock semaphore. 
   */

  for (i = 0; i < ALT_MAX_FD; i++)
1010f618:	e0bffd17 	ldw	r2,-12(fp)
1010f61c:	10800044 	addi	r2,r2,1
1010f620:	e0bffd15 	stw	r2,-12(fp)
1010f624:	e0bffd17 	ldw	r2,-12(fp)
1010f628:	10800810 	cmplti	r2,r2,32
1010f62c:	103fe41e 	bne	r2,zero,1010f5c0 <alt_get_fd+0x20>
   * file descriptor pool.
   */

  ALT_SEM_POST(alt_fd_list_lock);

  return rc;
1010f630:	e0bffe17 	ldw	r2,-8(fp)
}
1010f634:	e037883a 	mov	sp,fp
1010f638:	df000017 	ldw	fp,0(sp)
1010f63c:	dec00104 	addi	sp,sp,4
1010f640:	f800283a 	ret

1010f644 <alt_icache_flush_all>:
/*
 * alt_icache_flush_all() is called to flush the entire instruction cache.
 */

void alt_icache_flush_all (void)
{
1010f644:	defffe04 	addi	sp,sp,-8
1010f648:	dfc00115 	stw	ra,4(sp)
1010f64c:	df000015 	stw	fp,0(sp)
1010f650:	d839883a 	mov	fp,sp
#if NIOS2_ICACHE_SIZE > 0
  alt_icache_flush (0, NIOS2_ICACHE_SIZE);
1010f654:	01440004 	movi	r5,4096
1010f658:	0009883a 	mov	r4,zero
1010f65c:	010fa1c0 	call	1010fa1c <alt_icache_flush>
#endif
}
1010f660:	0001883a 	nop
1010f664:	e037883a 	mov	sp,fp
1010f668:	dfc00117 	ldw	ra,4(sp)
1010f66c:	df000017 	ldw	fp,0(sp)
1010f670:	dec00204 	addi	sp,sp,8
1010f674:	f800283a 	ret

1010f678 <alt_exception_cause_generated_bad_addr>:
 * Return: 1: BADADDR (bad_addr argument to handler) is valid
 *         0: BADADDR is not valid
 */
int 
alt_exception_cause_generated_bad_addr(alt_exception_cause cause)
{
1010f678:	defffe04 	addi	sp,sp,-8
1010f67c:	df000115 	stw	fp,4(sp)
1010f680:	df000104 	addi	fp,sp,4
1010f684:	e13fff15 	stw	r4,-4(fp)
  switch (cause) {
1010f688:	e0bfff17 	ldw	r2,-4(fp)
1010f68c:	10bffe84 	addi	r2,r2,-6
1010f690:	10c00428 	cmpgeui	r3,r2,16
1010f694:	18001a1e 	bne	r3,zero,1010f700 <alt_exception_cause_generated_bad_addr+0x88>
1010f698:	100690ba 	slli	r3,r2,2
1010f69c:	00840474 	movhi	r2,4113
1010f6a0:	10bdac04 	addi	r2,r2,-2384
1010f6a4:	1885883a 	add	r2,r3,r2
1010f6a8:	10800017 	ldw	r2,0(r2)
1010f6ac:	1000683a 	jmp	r2
1010f6b0:	1010f6f0 	cmpltui	zero,r2,17371
1010f6b4:	1010f6f0 	cmpltui	zero,r2,17371
1010f6b8:	1010f700 	call	11010f70 <__alt_data_end+0xef0f70>
1010f6bc:	1010f700 	call	11010f70 <__alt_data_end+0xef0f70>
1010f6c0:	1010f700 	call	11010f70 <__alt_data_end+0xef0f70>
1010f6c4:	1010f6f0 	cmpltui	zero,r2,17371
1010f6c8:	1010f6f8 	rdprs	zero,r2,17371
1010f6cc:	1010f700 	call	11010f70 <__alt_data_end+0xef0f70>
1010f6d0:	1010f6f0 	cmpltui	zero,r2,17371
1010f6d4:	1010f6f0 	cmpltui	zero,r2,17371
1010f6d8:	1010f700 	call	11010f70 <__alt_data_end+0xef0f70>
1010f6dc:	1010f6f0 	cmpltui	zero,r2,17371
1010f6e0:	1010f6f8 	rdprs	zero,r2,17371
1010f6e4:	1010f700 	call	11010f70 <__alt_data_end+0xef0f70>
1010f6e8:	1010f700 	call	11010f70 <__alt_data_end+0xef0f70>
1010f6ec:	1010f6f0 	cmpltui	zero,r2,17371
  case NIOS2_EXCEPTION_MISALIGNED_TARGET_PC:
  case NIOS2_EXCEPTION_TLB_READ_PERM_VIOLATION:
  case NIOS2_EXCEPTION_TLB_WRITE_PERM_VIOLATION:
  case NIOS2_EXCEPTION_MPU_DATA_REGION_VIOLATION:
  case NIOS2_EXCEPTION_ECC_DATA_ERR:
    return 1;
1010f6f0:	00800044 	movi	r2,1
1010f6f4:	00000306 	br	1010f704 <alt_exception_cause_generated_bad_addr+0x8c>

  case NIOS2_EXCEPTION_TLB_MISS:
  case NIOS2_EXCEPTION_ECC_TLB_ERR:
    return 0;
1010f6f8:	0005883a 	mov	r2,zero
1010f6fc:	00000106 	br	1010f704 <alt_exception_cause_generated_bad_addr+0x8c>

  default:
    return 0;
1010f700:	0005883a 	mov	r2,zero
  }
}
1010f704:	e037883a 	mov	sp,fp
1010f708:	df000017 	ldw	fp,0(sp)
1010f70c:	dec00104 	addi	sp,sp,4
1010f710:	f800283a 	ret

1010f714 <alt_open_fd>:
 * If the device can not be succesfully opened, then the input file descriptor
 * remains unchanged.
 */

static void alt_open_fd(alt_fd* fd, const char* name, int flags, int mode)
{
1010f714:	defff904 	addi	sp,sp,-28
1010f718:	dfc00615 	stw	ra,24(sp)
1010f71c:	df000515 	stw	fp,20(sp)
1010f720:	df000504 	addi	fp,sp,20
1010f724:	e13ffc15 	stw	r4,-16(fp)
1010f728:	e17ffd15 	stw	r5,-12(fp)
1010f72c:	e1bffe15 	stw	r6,-8(fp)
1010f730:	e1ffff15 	stw	r7,-4(fp)
  int old;

  old = open (name, flags, mode);
1010f734:	e1bfff17 	ldw	r6,-4(fp)
1010f738:	e17ffe17 	ldw	r5,-8(fp)
1010f73c:	e13ffd17 	ldw	r4,-12(fp)
1010f740:	010e1040 	call	1010e104 <open>
1010f744:	e0bffb15 	stw	r2,-20(fp)

  if (old >= 0)
1010f748:	e0bffb17 	ldw	r2,-20(fp)
1010f74c:	10001c16 	blt	r2,zero,1010f7c0 <alt_open_fd+0xac>
  {
    fd->dev      = alt_fd_list[old].dev;
1010f750:	00840474 	movhi	r2,4113
1010f754:	1082a004 	addi	r2,r2,2688
1010f758:	e0fffb17 	ldw	r3,-20(fp)
1010f75c:	18c00324 	muli	r3,r3,12
1010f760:	10c5883a 	add	r2,r2,r3
1010f764:	10c00017 	ldw	r3,0(r2)
1010f768:	e0bffc17 	ldw	r2,-16(fp)
1010f76c:	10c00015 	stw	r3,0(r2)
    fd->priv     = alt_fd_list[old].priv;
1010f770:	00840474 	movhi	r2,4113
1010f774:	1082a004 	addi	r2,r2,2688
1010f778:	e0fffb17 	ldw	r3,-20(fp)
1010f77c:	18c00324 	muli	r3,r3,12
1010f780:	10c5883a 	add	r2,r2,r3
1010f784:	10800104 	addi	r2,r2,4
1010f788:	10c00017 	ldw	r3,0(r2)
1010f78c:	e0bffc17 	ldw	r2,-16(fp)
1010f790:	10c00115 	stw	r3,4(r2)
    fd->fd_flags = alt_fd_list[old].fd_flags;
1010f794:	00840474 	movhi	r2,4113
1010f798:	1082a004 	addi	r2,r2,2688
1010f79c:	e0fffb17 	ldw	r3,-20(fp)
1010f7a0:	18c00324 	muli	r3,r3,12
1010f7a4:	10c5883a 	add	r2,r2,r3
1010f7a8:	10800204 	addi	r2,r2,8
1010f7ac:	10c00017 	ldw	r3,0(r2)
1010f7b0:	e0bffc17 	ldw	r2,-16(fp)
1010f7b4:	10c00215 	stw	r3,8(r2)

    alt_release_fd (old);
1010f7b8:	e13ffb17 	ldw	r4,-20(fp)
1010f7bc:	010e3900 	call	1010e390 <alt_release_fd>
  }
} 
1010f7c0:	0001883a 	nop
1010f7c4:	e037883a 	mov	sp,fp
1010f7c8:	dfc00117 	ldw	ra,4(sp)
1010f7cc:	df000017 	ldw	fp,0(sp)
1010f7d0:	dec00204 	addi	sp,sp,8
1010f7d4:	f800283a 	ret

1010f7d8 <alt_io_redirect>:
 */
 
void alt_io_redirect(const char* stdout_dev, 
                     const char* stdin_dev, 
                     const char* stderr_dev)
{
1010f7d8:	defffb04 	addi	sp,sp,-20
1010f7dc:	dfc00415 	stw	ra,16(sp)
1010f7e0:	df000315 	stw	fp,12(sp)
1010f7e4:	df000304 	addi	fp,sp,12
1010f7e8:	e13ffd15 	stw	r4,-12(fp)
1010f7ec:	e17ffe15 	stw	r5,-8(fp)
1010f7f0:	e1bfff15 	stw	r6,-4(fp)
  /* Redirect the channels */

  alt_open_fd (&alt_fd_list[STDOUT_FILENO], stdout_dev, O_WRONLY, 0777);
1010f7f4:	01c07fc4 	movi	r7,511
1010f7f8:	01800044 	movi	r6,1
1010f7fc:	e17ffd17 	ldw	r5,-12(fp)
1010f800:	01040474 	movhi	r4,4113
1010f804:	2102a304 	addi	r4,r4,2700
1010f808:	010f7140 	call	1010f714 <alt_open_fd>
  alt_open_fd (&alt_fd_list[STDIN_FILENO], stdin_dev, O_RDONLY, 0777);
1010f80c:	01c07fc4 	movi	r7,511
1010f810:	000d883a 	mov	r6,zero
1010f814:	e17ffe17 	ldw	r5,-8(fp)
1010f818:	01040474 	movhi	r4,4113
1010f81c:	2102a004 	addi	r4,r4,2688
1010f820:	010f7140 	call	1010f714 <alt_open_fd>
  alt_open_fd (&alt_fd_list[STDERR_FILENO], stderr_dev, O_WRONLY, 0777);
1010f824:	01c07fc4 	movi	r7,511
1010f828:	01800044 	movi	r6,1
1010f82c:	e17fff17 	ldw	r5,-4(fp)
1010f830:	01040474 	movhi	r4,4113
1010f834:	2102a604 	addi	r4,r4,2712
1010f838:	010f7140 	call	1010f714 <alt_open_fd>
}  
1010f83c:	0001883a 	nop
1010f840:	e037883a 	mov	sp,fp
1010f844:	dfc00117 	ldw	ra,4(sp)
1010f848:	df000017 	ldw	fp,0(sp)
1010f84c:	dec00204 	addi	sp,sp,8
1010f850:	f800283a 	ret

1010f854 <alt_alarm_stop>:
 * alarms. Alternatively an alarm can unregister itself by returning zero when 
 * the alarm executes.
 */

void alt_alarm_stop (alt_alarm* alarm)
{
1010f854:	defffa04 	addi	sp,sp,-24
1010f858:	df000515 	stw	fp,20(sp)
1010f85c:	df000504 	addi	fp,sp,20
1010f860:	e13fff15 	stw	r4,-4(fp)
static ALT_INLINE alt_irq_context ALT_ALWAYS_INLINE 
       alt_irq_disable_all (void)
{
  alt_irq_context context;

  NIOS2_READ_STATUS (context);
1010f864:	0005303a 	rdctl	r2,status
1010f868:	e0bffc15 	stw	r2,-16(fp)

  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
1010f86c:	e0fffc17 	ldw	r3,-16(fp)
1010f870:	00bfff84 	movi	r2,-2
1010f874:	1884703a 	and	r2,r3,r2
1010f878:	1001703a 	wrctl	status,r2
  
  return context;
1010f87c:	e0bffc17 	ldw	r2,-16(fp)
  alt_irq_context irq_context;

  irq_context = alt_irq_disable_all();
1010f880:	e0bffb15 	stw	r2,-20(fp)
  alt_llist_remove (&alarm->llist);
1010f884:	e0bfff17 	ldw	r2,-4(fp)
1010f888:	e0bffd15 	stw	r2,-12(fp)
 * input argument is the element to remove.
 */
     
static ALT_INLINE void ALT_ALWAYS_INLINE alt_llist_remove(alt_llist* entry)
{
  entry->next->previous = entry->previous;
1010f88c:	e0bffd17 	ldw	r2,-12(fp)
1010f890:	10800017 	ldw	r2,0(r2)
1010f894:	e0fffd17 	ldw	r3,-12(fp)
1010f898:	18c00117 	ldw	r3,4(r3)
1010f89c:	10c00115 	stw	r3,4(r2)
  entry->previous->next = entry->next;
1010f8a0:	e0bffd17 	ldw	r2,-12(fp)
1010f8a4:	10800117 	ldw	r2,4(r2)
1010f8a8:	e0fffd17 	ldw	r3,-12(fp)
1010f8ac:	18c00017 	ldw	r3,0(r3)
1010f8b0:	10c00015 	stw	r3,0(r2)
  /* 
   * Set the entry to point to itself, so that any further calls to
   * alt_llist_remove() are harmless.
   */

  entry->previous = entry;
1010f8b4:	e0bffd17 	ldw	r2,-12(fp)
1010f8b8:	e0fffd17 	ldw	r3,-12(fp)
1010f8bc:	10c00115 	stw	r3,4(r2)
  entry->next     = entry;
1010f8c0:	e0bffd17 	ldw	r2,-12(fp)
1010f8c4:	e0fffd17 	ldw	r3,-12(fp)
1010f8c8:	10c00015 	stw	r3,0(r2)
1010f8cc:	e0bffb17 	ldw	r2,-20(fp)
1010f8d0:	e0bffe15 	stw	r2,-8(fp)
  status &= ~NIOS2_STATUS_PIE_MSK;
  status |= (context & NIOS2_STATUS_PIE_MSK);
  
  NIOS2_WRITE_STATUS (status);
#else
  NIOS2_WRITE_STATUS (context);
1010f8d4:	e0bffe17 	ldw	r2,-8(fp)
1010f8d8:	1001703a 	wrctl	status,r2
  alt_irq_enable_all (irq_context);
}
1010f8dc:	0001883a 	nop
1010f8e0:	e037883a 	mov	sp,fp
1010f8e4:	df000017 	ldw	fp,0(sp)
1010f8e8:	dec00104 	addi	sp,sp,4
1010f8ec:	f800283a 	ret

1010f8f0 <alt_tick>:
 * 
 * alt_tick() is expected to run at interrupt level.
 */

void alt_tick (void)
{
1010f8f0:	defffb04 	addi	sp,sp,-20
1010f8f4:	dfc00415 	stw	ra,16(sp)
1010f8f8:	df000315 	stw	fp,12(sp)
1010f8fc:	df000304 	addi	fp,sp,12
  alt_alarm* next;
  alt_alarm* alarm = (alt_alarm*) alt_alarm_list.next;
1010f900:	d0a00e17 	ldw	r2,-32712(gp)
1010f904:	e0bffd15 	stw	r2,-12(fp)

  alt_u32    next_callback;

  /* update the tick counter */

  _alt_nticks++;
1010f908:	d0a6d917 	ldw	r2,-25756(gp)
1010f90c:	10800044 	addi	r2,r2,1
1010f910:	d0a6d915 	stw	r2,-25756(gp)

  /* process the registered callbacks */

  while (alarm != (alt_alarm*) &alt_alarm_list)
1010f914:	00002e06 	br	1010f9d0 <alt_tick+0xe0>
  {
    next = (alt_alarm*) alarm->llist.next;
1010f918:	e0bffd17 	ldw	r2,-12(fp)
1010f91c:	10800017 	ldw	r2,0(r2)
1010f920:	e0bffe15 	stw	r2,-8(fp)
    /* 
     * Upon the tick-counter rolling over it is safe to clear the 
     * roll-over flag; once the flag is cleared this (or subsequnt)
     * tick events are enabled to generate an alarm event. 
     */
    if ((alarm->rollover) && (_alt_nticks == 0))
1010f924:	e0bffd17 	ldw	r2,-12(fp)
1010f928:	10800403 	ldbu	r2,16(r2)
1010f92c:	10803fcc 	andi	r2,r2,255
1010f930:	10000426 	beq	r2,zero,1010f944 <alt_tick+0x54>
1010f934:	d0a6d917 	ldw	r2,-25756(gp)
1010f938:	1000021e 	bne	r2,zero,1010f944 <alt_tick+0x54>
    {
      alarm->rollover = 0;
1010f93c:	e0bffd17 	ldw	r2,-12(fp)
1010f940:	10000405 	stb	zero,16(r2)
    }
    
    /* if the alarm period has expired, make the callback */    
    if ((alarm->time <= _alt_nticks) && (alarm->rollover == 0))
1010f944:	e0bffd17 	ldw	r2,-12(fp)
1010f948:	10800217 	ldw	r2,8(r2)
1010f94c:	d0e6d917 	ldw	r3,-25756(gp)
1010f950:	18801d36 	bltu	r3,r2,1010f9c8 <alt_tick+0xd8>
1010f954:	e0bffd17 	ldw	r2,-12(fp)
1010f958:	10800403 	ldbu	r2,16(r2)
1010f95c:	10803fcc 	andi	r2,r2,255
1010f960:	1000191e 	bne	r2,zero,1010f9c8 <alt_tick+0xd8>
    {
      next_callback = alarm->callback (alarm->context);
1010f964:	e0bffd17 	ldw	r2,-12(fp)
1010f968:	10800317 	ldw	r2,12(r2)
1010f96c:	e0fffd17 	ldw	r3,-12(fp)
1010f970:	18c00517 	ldw	r3,20(r3)
1010f974:	1809883a 	mov	r4,r3
1010f978:	103ee83a 	callr	r2
1010f97c:	e0bfff15 	stw	r2,-4(fp)

      /* deactivate the alarm if the return value is zero */

      if (next_callback == 0)
1010f980:	e0bfff17 	ldw	r2,-4(fp)
1010f984:	1000031e 	bne	r2,zero,1010f994 <alt_tick+0xa4>
      {
        alt_alarm_stop (alarm);
1010f988:	e13ffd17 	ldw	r4,-12(fp)
1010f98c:	010f8540 	call	1010f854 <alt_alarm_stop>
1010f990:	00000d06 	br	1010f9c8 <alt_tick+0xd8>
      }
      else
      {
        alarm->time += next_callback;
1010f994:	e0bffd17 	ldw	r2,-12(fp)
1010f998:	10c00217 	ldw	r3,8(r2)
1010f99c:	e0bfff17 	ldw	r2,-4(fp)
1010f9a0:	1887883a 	add	r3,r3,r2
1010f9a4:	e0bffd17 	ldw	r2,-12(fp)
1010f9a8:	10c00215 	stw	r3,8(r2)
        /* 
         * If the desired alarm time causes a roll-over, set the rollover
         * flag. This will prevent the subsequent tick event from causing
         * an alarm too early.
         */
        if(alarm->time < _alt_nticks)
1010f9ac:	e0bffd17 	ldw	r2,-12(fp)
1010f9b0:	10c00217 	ldw	r3,8(r2)
1010f9b4:	d0a6d917 	ldw	r2,-25756(gp)
1010f9b8:	1880032e 	bgeu	r3,r2,1010f9c8 <alt_tick+0xd8>
        {
          alarm->rollover = 1;
1010f9bc:	e0bffd17 	ldw	r2,-12(fp)
1010f9c0:	00c00044 	movi	r3,1
1010f9c4:	10c00405 	stb	r3,16(r2)
        }
      }
    }
    alarm = next;
1010f9c8:	e0bffe17 	ldw	r2,-8(fp)
1010f9cc:	e0bffd15 	stw	r2,-12(fp)

  _alt_nticks++;

  /* process the registered callbacks */

  while (alarm != (alt_alarm*) &alt_alarm_list)
1010f9d0:	e0fffd17 	ldw	r3,-12(fp)
1010f9d4:	d0a00e04 	addi	r2,gp,-32712
1010f9d8:	18bfcf1e 	bne	r3,r2,1010f918 <alt_tick+0x28>

  /* 
   * Update the operating system specific timer facilities.
   */

  ALT_OS_TIME_TICK();
1010f9dc:	0001883a 	nop
}
1010f9e0:	0001883a 	nop
1010f9e4:	e037883a 	mov	sp,fp
1010f9e8:	dfc00117 	ldw	ra,4(sp)
1010f9ec:	df000017 	ldw	fp,0(sp)
1010f9f0:	dec00204 	addi	sp,sp,8
1010f9f4:	f800283a 	ret

1010f9f8 <altera_nios2_gen2_irq_init>:
/*
 * To initialize the internal interrupt controller, just clear the IENABLE
 * register so that all possible IRQs are disabled.
 */
void altera_nios2_gen2_irq_init(void) 
{
1010f9f8:	deffff04 	addi	sp,sp,-4
1010f9fc:	df000015 	stw	fp,0(sp)
1010fa00:	d839883a 	mov	fp,sp
    NIOS2_WRITE_IENABLE(0);
1010fa04:	000170fa 	wrctl	ienable,zero
}
1010fa08:	0001883a 	nop
1010fa0c:	e037883a 	mov	sp,fp
1010fa10:	df000017 	ldw	fp,0(sp)
1010fa14:	dec00104 	addi	sp,sp,4
1010fa18:	f800283a 	ret

1010fa1c <alt_icache_flush>:
 * alt_icache_flush() is called to flush the instruction cache for a memory
 * region of length "len" bytes, starting at address "start".
 */

void alt_icache_flush (void* start, alt_u32 len)
{
1010fa1c:	defffb04 	addi	sp,sp,-20
1010fa20:	df000415 	stw	fp,16(sp)
1010fa24:	df000404 	addi	fp,sp,16
1010fa28:	e13ffe15 	stw	r4,-8(fp)
1010fa2c:	e17fff15 	stw	r5,-4(fp)

  /*
   * This is the most we would ever need to flush.
   */
 
  if (len > NIOS2_ICACHE_SIZE)
1010fa30:	e0bfff17 	ldw	r2,-4(fp)
1010fa34:	10840070 	cmpltui	r2,r2,4097
1010fa38:	1000021e 	bne	r2,zero,1010fa44 <alt_icache_flush+0x28>
  {
    len = NIOS2_ICACHE_SIZE;
1010fa3c:	00840004 	movi	r2,4096
1010fa40:	e0bfff15 	stw	r2,-4(fp)
  }

  end = ((char*) start) + len;
1010fa44:	e0fffe17 	ldw	r3,-8(fp)
1010fa48:	e0bfff17 	ldw	r2,-4(fp)
1010fa4c:	1885883a 	add	r2,r3,r2
1010fa50:	e0bffd15 	stw	r2,-12(fp)

  for (i = start; i < end; i+= NIOS2_ICACHE_LINE_SIZE)
1010fa54:	e0bffe17 	ldw	r2,-8(fp)
1010fa58:	e0bffc15 	stw	r2,-16(fp)
1010fa5c:	00000506 	br	1010fa74 <alt_icache_flush+0x58>
  { 
    __asm__ volatile ("flushi %0" :: "r" (i)); 
1010fa60:	e0bffc17 	ldw	r2,-16(fp)
1010fa64:	1000603a 	flushi	r2
    len = NIOS2_ICACHE_SIZE;
  }

  end = ((char*) start) + len;

  for (i = start; i < end; i+= NIOS2_ICACHE_LINE_SIZE)
1010fa68:	e0bffc17 	ldw	r2,-16(fp)
1010fa6c:	10800804 	addi	r2,r2,32
1010fa70:	e0bffc15 	stw	r2,-16(fp)
1010fa74:	e0fffc17 	ldw	r3,-16(fp)
1010fa78:	e0bffd17 	ldw	r2,-12(fp)
1010fa7c:	18bff836 	bltu	r3,r2,1010fa60 <alt_icache_flush+0x44>
   * For an unaligned flush request, we've got one more line left.
   * Note that this is dependent on NIOS2_ICACHE_LINE_SIZE to be a 
   * multiple of 2 (which it always is).
   */

  if (((alt_u32) start) & (NIOS2_ICACHE_LINE_SIZE - 1))
1010fa80:	e0bffe17 	ldw	r2,-8(fp)
1010fa84:	108007cc 	andi	r2,r2,31
1010fa88:	10000226 	beq	r2,zero,1010fa94 <alt_icache_flush+0x78>
  {
    __asm__ volatile ("flushi %0" :: "r" (i));
1010fa8c:	e0bffc17 	ldw	r2,-16(fp)
1010fa90:	1000603a 	flushi	r2
  /* 
   * Having flushed the cache, flush any stale instructions in the 
   * pipeline 
   */

  __asm__ volatile ("flushp");
1010fa94:	0000203a 	flushp

#endif /* NIOS2_ICACHE_SIZE > 0 */
}
1010fa98:	0001883a 	nop
1010fa9c:	e037883a 	mov	sp,fp
1010faa0:	df000017 	ldw	fp,0(sp)
1010faa4:	dec00104 	addi	sp,sp,4
1010faa8:	f800283a 	ret

1010faac <atexit>:
1010faac:	200b883a 	mov	r5,r4
1010fab0:	000f883a 	mov	r7,zero
1010fab4:	000d883a 	mov	r6,zero
1010fab8:	0009883a 	mov	r4,zero
1010fabc:	010fb741 	jmpi	1010fb74 <__register_exitproc>

1010fac0 <exit>:
1010fac0:	defffe04 	addi	sp,sp,-8
1010fac4:	000b883a 	mov	r5,zero
1010fac8:	dc000015 	stw	r16,0(sp)
1010facc:	dfc00115 	stw	ra,4(sp)
1010fad0:	2021883a 	mov	r16,r4
1010fad4:	010fc8c0 	call	1010fc8c <__call_exitprocs>
1010fad8:	00840474 	movhi	r2,4113
1010fadc:	10871804 	addi	r2,r2,7264
1010fae0:	11000017 	ldw	r4,0(r2)
1010fae4:	20800f17 	ldw	r2,60(r4)
1010fae8:	10000126 	beq	r2,zero,1010faf0 <exit+0x30>
1010faec:	103ee83a 	callr	r2
1010faf0:	8009883a 	mov	r4,r16
1010faf4:	010fe0c0 	call	1010fe0c <_exit>

1010faf8 <memcmp>:
1010faf8:	01c000c4 	movi	r7,3
1010fafc:	3980192e 	bgeu	r7,r6,1010fb64 <memcmp+0x6c>
1010fb00:	2144b03a 	or	r2,r4,r5
1010fb04:	11c4703a 	and	r2,r2,r7
1010fb08:	10000f26 	beq	r2,zero,1010fb48 <memcmp+0x50>
1010fb0c:	20800003 	ldbu	r2,0(r4)
1010fb10:	28c00003 	ldbu	r3,0(r5)
1010fb14:	10c0151e 	bne	r2,r3,1010fb6c <memcmp+0x74>
1010fb18:	31bfff84 	addi	r6,r6,-2
1010fb1c:	01ffffc4 	movi	r7,-1
1010fb20:	00000406 	br	1010fb34 <memcmp+0x3c>
1010fb24:	20800003 	ldbu	r2,0(r4)
1010fb28:	28c00003 	ldbu	r3,0(r5)
1010fb2c:	31bfffc4 	addi	r6,r6,-1
1010fb30:	10c00e1e 	bne	r2,r3,1010fb6c <memcmp+0x74>
1010fb34:	21000044 	addi	r4,r4,1
1010fb38:	29400044 	addi	r5,r5,1
1010fb3c:	31fff91e 	bne	r6,r7,1010fb24 <memcmp+0x2c>
1010fb40:	0005883a 	mov	r2,zero
1010fb44:	f800283a 	ret
1010fb48:	20c00017 	ldw	r3,0(r4)
1010fb4c:	28800017 	ldw	r2,0(r5)
1010fb50:	18bfee1e 	bne	r3,r2,1010fb0c <memcmp+0x14>
1010fb54:	31bfff04 	addi	r6,r6,-4
1010fb58:	21000104 	addi	r4,r4,4
1010fb5c:	29400104 	addi	r5,r5,4
1010fb60:	39bff936 	bltu	r7,r6,1010fb48 <memcmp+0x50>
1010fb64:	303fe91e 	bne	r6,zero,1010fb0c <memcmp+0x14>
1010fb68:	003ff506 	br	1010fb40 <memcmp+0x48>
1010fb6c:	10c5c83a 	sub	r2,r2,r3
1010fb70:	f800283a 	ret

1010fb74 <__register_exitproc>:
1010fb74:	defffa04 	addi	sp,sp,-24
1010fb78:	dc000315 	stw	r16,12(sp)
1010fb7c:	04040474 	movhi	r16,4113
1010fb80:	84071804 	addi	r16,r16,7264
1010fb84:	80c00017 	ldw	r3,0(r16)
1010fb88:	dc400415 	stw	r17,16(sp)
1010fb8c:	dfc00515 	stw	ra,20(sp)
1010fb90:	18805217 	ldw	r2,328(r3)
1010fb94:	2023883a 	mov	r17,r4
1010fb98:	10003726 	beq	r2,zero,1010fc78 <__register_exitproc+0x104>
1010fb9c:	10c00117 	ldw	r3,4(r2)
1010fba0:	010007c4 	movi	r4,31
1010fba4:	20c00e16 	blt	r4,r3,1010fbe0 <__register_exitproc+0x6c>
1010fba8:	1a000044 	addi	r8,r3,1
1010fbac:	8800221e 	bne	r17,zero,1010fc38 <__register_exitproc+0xc4>
1010fbb0:	18c00084 	addi	r3,r3,2
1010fbb4:	18c7883a 	add	r3,r3,r3
1010fbb8:	18c7883a 	add	r3,r3,r3
1010fbbc:	12000115 	stw	r8,4(r2)
1010fbc0:	10c7883a 	add	r3,r2,r3
1010fbc4:	19400015 	stw	r5,0(r3)
1010fbc8:	0005883a 	mov	r2,zero
1010fbcc:	dfc00517 	ldw	ra,20(sp)
1010fbd0:	dc400417 	ldw	r17,16(sp)
1010fbd4:	dc000317 	ldw	r16,12(sp)
1010fbd8:	dec00604 	addi	sp,sp,24
1010fbdc:	f800283a 	ret
1010fbe0:	00800034 	movhi	r2,0
1010fbe4:	10800004 	addi	r2,r2,0
1010fbe8:	10002626 	beq	r2,zero,1010fc84 <__register_exitproc+0x110>
1010fbec:	01006404 	movi	r4,400
1010fbf0:	d9400015 	stw	r5,0(sp)
1010fbf4:	d9800115 	stw	r6,4(sp)
1010fbf8:	d9c00215 	stw	r7,8(sp)
1010fbfc:	00000000 	call	10000000 <__alt_mem_onchip_memory2_0-0x100000>
1010fc00:	d9400017 	ldw	r5,0(sp)
1010fc04:	d9800117 	ldw	r6,4(sp)
1010fc08:	d9c00217 	ldw	r7,8(sp)
1010fc0c:	10001d26 	beq	r2,zero,1010fc84 <__register_exitproc+0x110>
1010fc10:	81000017 	ldw	r4,0(r16)
1010fc14:	10000115 	stw	zero,4(r2)
1010fc18:	02000044 	movi	r8,1
1010fc1c:	22405217 	ldw	r9,328(r4)
1010fc20:	0007883a 	mov	r3,zero
1010fc24:	12400015 	stw	r9,0(r2)
1010fc28:	20805215 	stw	r2,328(r4)
1010fc2c:	10006215 	stw	zero,392(r2)
1010fc30:	10006315 	stw	zero,396(r2)
1010fc34:	883fde26 	beq	r17,zero,1010fbb0 <__register_exitproc+0x3c>
1010fc38:	18c9883a 	add	r4,r3,r3
1010fc3c:	2109883a 	add	r4,r4,r4
1010fc40:	1109883a 	add	r4,r2,r4
1010fc44:	21802215 	stw	r6,136(r4)
1010fc48:	01800044 	movi	r6,1
1010fc4c:	12406217 	ldw	r9,392(r2)
1010fc50:	30cc983a 	sll	r6,r6,r3
1010fc54:	4992b03a 	or	r9,r9,r6
1010fc58:	12406215 	stw	r9,392(r2)
1010fc5c:	21c04215 	stw	r7,264(r4)
1010fc60:	01000084 	movi	r4,2
1010fc64:	893fd21e 	bne	r17,r4,1010fbb0 <__register_exitproc+0x3c>
1010fc68:	11006317 	ldw	r4,396(r2)
1010fc6c:	218cb03a 	or	r6,r4,r6
1010fc70:	11806315 	stw	r6,396(r2)
1010fc74:	003fce06 	br	1010fbb0 <__register_exitproc+0x3c>
1010fc78:	18805304 	addi	r2,r3,332
1010fc7c:	18805215 	stw	r2,328(r3)
1010fc80:	003fc606 	br	1010fb9c <__register_exitproc+0x28>
1010fc84:	00bfffc4 	movi	r2,-1
1010fc88:	003fd006 	br	1010fbcc <__register_exitproc+0x58>

1010fc8c <__call_exitprocs>:
1010fc8c:	defff504 	addi	sp,sp,-44
1010fc90:	df000915 	stw	fp,36(sp)
1010fc94:	dd400615 	stw	r21,24(sp)
1010fc98:	dc800315 	stw	r18,12(sp)
1010fc9c:	dfc00a15 	stw	ra,40(sp)
1010fca0:	ddc00815 	stw	r23,32(sp)
1010fca4:	dd800715 	stw	r22,28(sp)
1010fca8:	dd000515 	stw	r20,20(sp)
1010fcac:	dcc00415 	stw	r19,16(sp)
1010fcb0:	dc400215 	stw	r17,8(sp)
1010fcb4:	dc000115 	stw	r16,4(sp)
1010fcb8:	d9000015 	stw	r4,0(sp)
1010fcbc:	2839883a 	mov	fp,r5
1010fcc0:	04800044 	movi	r18,1
1010fcc4:	057fffc4 	movi	r21,-1
1010fcc8:	00840474 	movhi	r2,4113
1010fccc:	10871804 	addi	r2,r2,7264
1010fcd0:	12000017 	ldw	r8,0(r2)
1010fcd4:	45005217 	ldw	r20,328(r8)
1010fcd8:	44c05204 	addi	r19,r8,328
1010fcdc:	a0001c26 	beq	r20,zero,1010fd50 <__call_exitprocs+0xc4>
1010fce0:	a0800117 	ldw	r2,4(r20)
1010fce4:	15ffffc4 	addi	r23,r2,-1
1010fce8:	b8000d16 	blt	r23,zero,1010fd20 <__call_exitprocs+0x94>
1010fcec:	14000044 	addi	r16,r2,1
1010fcf0:	8421883a 	add	r16,r16,r16
1010fcf4:	8421883a 	add	r16,r16,r16
1010fcf8:	84402004 	addi	r17,r16,128
1010fcfc:	a463883a 	add	r17,r20,r17
1010fd00:	a421883a 	add	r16,r20,r16
1010fd04:	e0001e26 	beq	fp,zero,1010fd80 <__call_exitprocs+0xf4>
1010fd08:	80804017 	ldw	r2,256(r16)
1010fd0c:	e0801c26 	beq	fp,r2,1010fd80 <__call_exitprocs+0xf4>
1010fd10:	bdffffc4 	addi	r23,r23,-1
1010fd14:	843fff04 	addi	r16,r16,-4
1010fd18:	8c7fff04 	addi	r17,r17,-4
1010fd1c:	bd7ff91e 	bne	r23,r21,1010fd04 <__call_exitprocs+0x78>
1010fd20:	00800034 	movhi	r2,0
1010fd24:	10800004 	addi	r2,r2,0
1010fd28:	10000926 	beq	r2,zero,1010fd50 <__call_exitprocs+0xc4>
1010fd2c:	a0800117 	ldw	r2,4(r20)
1010fd30:	1000301e 	bne	r2,zero,1010fdf4 <__call_exitprocs+0x168>
1010fd34:	a0800017 	ldw	r2,0(r20)
1010fd38:	10003226 	beq	r2,zero,1010fe04 <__call_exitprocs+0x178>
1010fd3c:	a009883a 	mov	r4,r20
1010fd40:	98800015 	stw	r2,0(r19)
1010fd44:	00000000 	call	10000000 <__alt_mem_onchip_memory2_0-0x100000>
1010fd48:	9d000017 	ldw	r20,0(r19)
1010fd4c:	a03fe41e 	bne	r20,zero,1010fce0 <__call_exitprocs+0x54>
1010fd50:	dfc00a17 	ldw	ra,40(sp)
1010fd54:	df000917 	ldw	fp,36(sp)
1010fd58:	ddc00817 	ldw	r23,32(sp)
1010fd5c:	dd800717 	ldw	r22,28(sp)
1010fd60:	dd400617 	ldw	r21,24(sp)
1010fd64:	dd000517 	ldw	r20,20(sp)
1010fd68:	dcc00417 	ldw	r19,16(sp)
1010fd6c:	dc800317 	ldw	r18,12(sp)
1010fd70:	dc400217 	ldw	r17,8(sp)
1010fd74:	dc000117 	ldw	r16,4(sp)
1010fd78:	dec00b04 	addi	sp,sp,44
1010fd7c:	f800283a 	ret
1010fd80:	a0800117 	ldw	r2,4(r20)
1010fd84:	80c00017 	ldw	r3,0(r16)
1010fd88:	10bfffc4 	addi	r2,r2,-1
1010fd8c:	15c01426 	beq	r2,r23,1010fde0 <__call_exitprocs+0x154>
1010fd90:	80000015 	stw	zero,0(r16)
1010fd94:	183fde26 	beq	r3,zero,1010fd10 <__call_exitprocs+0x84>
1010fd98:	95c8983a 	sll	r4,r18,r23
1010fd9c:	a0806217 	ldw	r2,392(r20)
1010fda0:	a5800117 	ldw	r22,4(r20)
1010fda4:	2084703a 	and	r2,r4,r2
1010fda8:	10000b26 	beq	r2,zero,1010fdd8 <__call_exitprocs+0x14c>
1010fdac:	a0806317 	ldw	r2,396(r20)
1010fdb0:	2088703a 	and	r4,r4,r2
1010fdb4:	20000c1e 	bne	r4,zero,1010fde8 <__call_exitprocs+0x15c>
1010fdb8:	89400017 	ldw	r5,0(r17)
1010fdbc:	d9000017 	ldw	r4,0(sp)
1010fdc0:	183ee83a 	callr	r3
1010fdc4:	a0800117 	ldw	r2,4(r20)
1010fdc8:	15bfbf1e 	bne	r2,r22,1010fcc8 <__call_exitprocs+0x3c>
1010fdcc:	98800017 	ldw	r2,0(r19)
1010fdd0:	153fcf26 	beq	r2,r20,1010fd10 <__call_exitprocs+0x84>
1010fdd4:	003fbc06 	br	1010fcc8 <__call_exitprocs+0x3c>
1010fdd8:	183ee83a 	callr	r3
1010fddc:	003ff906 	br	1010fdc4 <__call_exitprocs+0x138>
1010fde0:	a5c00115 	stw	r23,4(r20)
1010fde4:	003feb06 	br	1010fd94 <__call_exitprocs+0x108>
1010fde8:	89000017 	ldw	r4,0(r17)
1010fdec:	183ee83a 	callr	r3
1010fdf0:	003ff406 	br	1010fdc4 <__call_exitprocs+0x138>
1010fdf4:	a0800017 	ldw	r2,0(r20)
1010fdf8:	a027883a 	mov	r19,r20
1010fdfc:	1029883a 	mov	r20,r2
1010fe00:	003fb606 	br	1010fcdc <__call_exitprocs+0x50>
1010fe04:	0005883a 	mov	r2,zero
1010fe08:	003ffb06 	br	1010fdf8 <__call_exitprocs+0x16c>

1010fe0c <_exit>:
 *
 * ALT_EXIT is mapped onto the _exit() system call in alt_syscall.h
 */

void ALT_EXIT (int exit_code)
{
1010fe0c:	defffd04 	addi	sp,sp,-12
1010fe10:	df000215 	stw	fp,8(sp)
1010fe14:	df000204 	addi	fp,sp,8
1010fe18:	e13fff15 	stw	r4,-4(fp)
  ALT_LOG_PRINT_BOOT("[alt_exit.c] Entering _exit() function.\r\n");
  ALT_LOG_PRINT_BOOT("[alt_exit.c] Exit code from main was %d.\r\n",exit_code);
  /* Stop all other threads */

  ALT_LOG_PRINT_BOOT("[alt_exit.c] Calling ALT_OS_STOP().\r\n");
  ALT_OS_STOP();
1010fe1c:	0001883a 	nop
1010fe20:	e0bfff17 	ldw	r2,-4(fp)
1010fe24:	e0bffe15 	stw	r2,-8(fp)
/*
 * Routine called on exit.
 */
static ALT_INLINE ALT_ALWAYS_INLINE void alt_sim_halt(int exit_code)
{
  register int r2 asm ("r2") = exit_code;
1010fe28:	e0bffe17 	ldw	r2,-8(fp)
  __asm__ volatile ("\n0:\n\taddi %0,%0, -1\n\tbgt %0,zero,0b" : : "r" (ALT_CPU_FREQ/100) ); /* Delay for >30ms */

  __asm__ volatile ("break 2" : : "r"(r2), "r"(r3) ALT_GMON_DATA );

#else /* !DEBUG_STUB */
  if (r2) {
1010fe2c:	10000226 	beq	r2,zero,1010fe38 <_exit+0x2c>
    ALT_SIM_FAIL();
1010fe30:	002af070 	cmpltui	zero,zero,43969
1010fe34:	00000106 	br	1010fe3c <_exit+0x30>
  } else {
    ALT_SIM_PASS();
1010fe38:	002af0b0 	cmpltui	zero,zero,43970
  ALT_SIM_HALT(exit_code);

  /* spin forever, since there's no where to go back to */

  ALT_LOG_PRINT_BOOT("[alt_exit.c] Spinning forever.\r\n");
  while (1);
1010fe3c:	003fff06 	br	1010fe3c <_exit+0x30>
